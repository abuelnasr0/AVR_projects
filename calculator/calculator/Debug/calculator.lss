
calculator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002eec  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000018  00800060  00002eec  00002f60  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00002928  00000000  00000000  00002f78  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000d9f  00000000  00000000  000058a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  0000663f  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  0000677f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  000068ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  00008538  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  00009423  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000a1d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000a330  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000a5bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000ad8b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec ee       	ldi	r30, 0xEC	; 236
      68:	fe e2       	ldi	r31, 0x2E	; 46
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 37       	cpi	r26, 0x78	; 120
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 1a 14 	call	0x2834	; 0x2834 <main>
      7a:	0c 94 74 17 	jmp	0x2ee8	; 0x2ee8 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 3d 17 	jmp	0x2e7a	; 0x2e7a <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 59 17 	jmp	0x2eb2	; 0x2eb2 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 49 17 	jmp	0x2e92	; 0x2e92 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 65 17 	jmp	0x2eca	; 0x2eca <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 49 17 	jmp	0x2e92	; 0x2e92 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 65 17 	jmp	0x2eca	; 0x2eca <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 3d 17 	jmp	0x2e7a	; 0x2e7a <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 59 17 	jmp	0x2eb2	; 0x2eb2 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 49 17 	jmp	0x2e92	; 0x2e92 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 65 17 	jmp	0x2eca	; 0x2eca <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 49 17 	jmp	0x2e92	; 0x2e92 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 65 17 	jmp	0x2eca	; 0x2eca <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 49 17 	jmp	0x2e92	; 0x2e92 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 65 17 	jmp	0x2eca	; 0x2eca <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 4d 17 	jmp	0x2e9a	; 0x2e9a <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 69 17 	jmp	0x2ed2	; 0x2ed2 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <EXT_INT0_INIT>:

#include"INT.h"
#include"BIT_MATH.h"

void EXT_INT0_INIT()
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(SREG,7);
     b3e:	af e5       	ldi	r26, 0x5F	; 95
     b40:	b0 e0       	ldi	r27, 0x00	; 0
     b42:	ef e5       	ldi	r30, 0x5F	; 95
     b44:	f0 e0       	ldi	r31, 0x00	; 0
     b46:	80 81       	ld	r24, Z
     b48:	80 68       	ori	r24, 0x80	; 128
     b4a:	8c 93       	st	X, r24
	SET_BIT(GICR,6);
     b4c:	ab e5       	ldi	r26, 0x5B	; 91
     b4e:	b0 e0       	ldi	r27, 0x00	; 0
     b50:	eb e5       	ldi	r30, 0x5B	; 91
     b52:	f0 e0       	ldi	r31, 0x00	; 0
     b54:	80 81       	ld	r24, Z
     b56:	80 64       	ori	r24, 0x40	; 64
     b58:	8c 93       	st	X, r24
	CLR_BIT(MCUCR,0);
     b5a:	a5 e5       	ldi	r26, 0x55	; 85
     b5c:	b0 e0       	ldi	r27, 0x00	; 0
     b5e:	e5 e5       	ldi	r30, 0x55	; 85
     b60:	f0 e0       	ldi	r31, 0x00	; 0
     b62:	80 81       	ld	r24, Z
     b64:	8e 7f       	andi	r24, 0xFE	; 254
     b66:	8c 93       	st	X, r24
	CLR_BIT(MCUCR,1);
     b68:	a5 e5       	ldi	r26, 0x55	; 85
     b6a:	b0 e0       	ldi	r27, 0x00	; 0
     b6c:	e5 e5       	ldi	r30, 0x55	; 85
     b6e:	f0 e0       	ldi	r31, 0x00	; 0
     b70:	80 81       	ld	r24, Z
     b72:	8d 7f       	andi	r24, 0xFD	; 253
     b74:	8c 93       	st	X, r24
}
     b76:	cf 91       	pop	r28
     b78:	df 91       	pop	r29
     b7a:	08 95       	ret

00000b7c <DIO_PIN_DIRECTION>:
#include "REG.h"
#include "BIT_MATH.h"
#include "DIO.h"

void DIO_PIN_DIRECTION(u8 port,u8 pin,u8 status)
{
     b7c:	df 93       	push	r29
     b7e:	cf 93       	push	r28
     b80:	cd b7       	in	r28, 0x3d	; 61
     b82:	de b7       	in	r29, 0x3e	; 62
     b84:	29 97       	sbiw	r28, 0x09	; 9
     b86:	0f b6       	in	r0, 0x3f	; 63
     b88:	f8 94       	cli
     b8a:	de bf       	out	0x3e, r29	; 62
     b8c:	0f be       	out	0x3f, r0	; 63
     b8e:	cd bf       	out	0x3d, r28	; 61
     b90:	89 83       	std	Y+1, r24	; 0x01
     b92:	6a 83       	std	Y+2, r22	; 0x02
     b94:	4b 83       	std	Y+3, r20	; 0x03
	switch (status)
     b96:	8b 81       	ldd	r24, Y+3	; 0x03
     b98:	28 2f       	mov	r18, r24
     b9a:	30 e0       	ldi	r19, 0x00	; 0
     b9c:	39 87       	std	Y+9, r19	; 0x09
     b9e:	28 87       	std	Y+8, r18	; 0x08
     ba0:	88 85       	ldd	r24, Y+8	; 0x08
     ba2:	99 85       	ldd	r25, Y+9	; 0x09
     ba4:	00 97       	sbiw	r24, 0x00	; 0
     ba6:	39 f0       	breq	.+14     	; 0xbb6 <DIO_PIN_DIRECTION+0x3a>
     ba8:	28 85       	ldd	r18, Y+8	; 0x08
     baa:	39 85       	ldd	r19, Y+9	; 0x09
     bac:	21 30       	cpi	r18, 0x01	; 1
     bae:	31 05       	cpc	r19, r1
     bb0:	09 f4       	brne	.+2      	; 0xbb4 <DIO_PIN_DIRECTION+0x38>
     bb2:	75 c0       	rjmp	.+234    	; 0xc9e <DIO_PIN_DIRECTION+0x122>
     bb4:	e2 c0       	rjmp	.+452    	; 0xd7a <DIO_PIN_DIRECTION+0x1fe>
	{
	case INPUT:
		switch(port)
     bb6:	89 81       	ldd	r24, Y+1	; 0x01
     bb8:	28 2f       	mov	r18, r24
     bba:	30 e0       	ldi	r19, 0x00	; 0
     bbc:	3f 83       	std	Y+7, r19	; 0x07
     bbe:	2e 83       	std	Y+6, r18	; 0x06
     bc0:	8e 81       	ldd	r24, Y+6	; 0x06
     bc2:	9f 81       	ldd	r25, Y+7	; 0x07
     bc4:	81 30       	cpi	r24, 0x01	; 1
     bc6:	91 05       	cpc	r25, r1
     bc8:	59 f1       	breq	.+86     	; 0xc20 <DIO_PIN_DIRECTION+0xa4>
     bca:	2e 81       	ldd	r18, Y+6	; 0x06
     bcc:	3f 81       	ldd	r19, Y+7	; 0x07
     bce:	22 30       	cpi	r18, 0x02	; 2
     bd0:	31 05       	cpc	r19, r1
     bd2:	2c f4       	brge	.+10     	; 0xbde <DIO_PIN_DIRECTION+0x62>
     bd4:	8e 81       	ldd	r24, Y+6	; 0x06
     bd6:	9f 81       	ldd	r25, Y+7	; 0x07
     bd8:	00 97       	sbiw	r24, 0x00	; 0
     bda:	69 f0       	breq	.+26     	; 0xbf6 <DIO_PIN_DIRECTION+0x7a>
     bdc:	ce c0       	rjmp	.+412    	; 0xd7a <DIO_PIN_DIRECTION+0x1fe>
     bde:	2e 81       	ldd	r18, Y+6	; 0x06
     be0:	3f 81       	ldd	r19, Y+7	; 0x07
     be2:	22 30       	cpi	r18, 0x02	; 2
     be4:	31 05       	cpc	r19, r1
     be6:	89 f1       	breq	.+98     	; 0xc4a <DIO_PIN_DIRECTION+0xce>
     be8:	8e 81       	ldd	r24, Y+6	; 0x06
     bea:	9f 81       	ldd	r25, Y+7	; 0x07
     bec:	83 30       	cpi	r24, 0x03	; 3
     bee:	91 05       	cpc	r25, r1
     bf0:	09 f4       	brne	.+2      	; 0xbf4 <DIO_PIN_DIRECTION+0x78>
     bf2:	40 c0       	rjmp	.+128    	; 0xc74 <DIO_PIN_DIRECTION+0xf8>
     bf4:	c2 c0       	rjmp	.+388    	; 0xd7a <DIO_PIN_DIRECTION+0x1fe>
		{
		case DIO_PORTA:
			CLR_BIT(DDRA,pin);
     bf6:	aa e3       	ldi	r26, 0x3A	; 58
     bf8:	b0 e0       	ldi	r27, 0x00	; 0
     bfa:	ea e3       	ldi	r30, 0x3A	; 58
     bfc:	f0 e0       	ldi	r31, 0x00	; 0
     bfe:	80 81       	ld	r24, Z
     c00:	48 2f       	mov	r20, r24
     c02:	8a 81       	ldd	r24, Y+2	; 0x02
     c04:	28 2f       	mov	r18, r24
     c06:	30 e0       	ldi	r19, 0x00	; 0
     c08:	81 e0       	ldi	r24, 0x01	; 1
     c0a:	90 e0       	ldi	r25, 0x00	; 0
     c0c:	02 2e       	mov	r0, r18
     c0e:	02 c0       	rjmp	.+4      	; 0xc14 <DIO_PIN_DIRECTION+0x98>
     c10:	88 0f       	add	r24, r24
     c12:	99 1f       	adc	r25, r25
     c14:	0a 94       	dec	r0
     c16:	e2 f7       	brpl	.-8      	; 0xc10 <DIO_PIN_DIRECTION+0x94>
     c18:	80 95       	com	r24
     c1a:	84 23       	and	r24, r20
     c1c:	8c 93       	st	X, r24
     c1e:	ad c0       	rjmp	.+346    	; 0xd7a <DIO_PIN_DIRECTION+0x1fe>
			break;
		case DIO_PORTB:
			CLR_BIT(DDRB,pin);
     c20:	a7 e3       	ldi	r26, 0x37	; 55
     c22:	b0 e0       	ldi	r27, 0x00	; 0
     c24:	e7 e3       	ldi	r30, 0x37	; 55
     c26:	f0 e0       	ldi	r31, 0x00	; 0
     c28:	80 81       	ld	r24, Z
     c2a:	48 2f       	mov	r20, r24
     c2c:	8a 81       	ldd	r24, Y+2	; 0x02
     c2e:	28 2f       	mov	r18, r24
     c30:	30 e0       	ldi	r19, 0x00	; 0
     c32:	81 e0       	ldi	r24, 0x01	; 1
     c34:	90 e0       	ldi	r25, 0x00	; 0
     c36:	02 2e       	mov	r0, r18
     c38:	02 c0       	rjmp	.+4      	; 0xc3e <DIO_PIN_DIRECTION+0xc2>
     c3a:	88 0f       	add	r24, r24
     c3c:	99 1f       	adc	r25, r25
     c3e:	0a 94       	dec	r0
     c40:	e2 f7       	brpl	.-8      	; 0xc3a <DIO_PIN_DIRECTION+0xbe>
     c42:	80 95       	com	r24
     c44:	84 23       	and	r24, r20
     c46:	8c 93       	st	X, r24
     c48:	98 c0       	rjmp	.+304    	; 0xd7a <DIO_PIN_DIRECTION+0x1fe>
			break;
		case DIO_PORTC:
			CLR_BIT(DDRC,pin);
     c4a:	a4 e3       	ldi	r26, 0x34	; 52
     c4c:	b0 e0       	ldi	r27, 0x00	; 0
     c4e:	e4 e3       	ldi	r30, 0x34	; 52
     c50:	f0 e0       	ldi	r31, 0x00	; 0
     c52:	80 81       	ld	r24, Z
     c54:	48 2f       	mov	r20, r24
     c56:	8a 81       	ldd	r24, Y+2	; 0x02
     c58:	28 2f       	mov	r18, r24
     c5a:	30 e0       	ldi	r19, 0x00	; 0
     c5c:	81 e0       	ldi	r24, 0x01	; 1
     c5e:	90 e0       	ldi	r25, 0x00	; 0
     c60:	02 2e       	mov	r0, r18
     c62:	02 c0       	rjmp	.+4      	; 0xc68 <DIO_PIN_DIRECTION+0xec>
     c64:	88 0f       	add	r24, r24
     c66:	99 1f       	adc	r25, r25
     c68:	0a 94       	dec	r0
     c6a:	e2 f7       	brpl	.-8      	; 0xc64 <DIO_PIN_DIRECTION+0xe8>
     c6c:	80 95       	com	r24
     c6e:	84 23       	and	r24, r20
     c70:	8c 93       	st	X, r24
     c72:	83 c0       	rjmp	.+262    	; 0xd7a <DIO_PIN_DIRECTION+0x1fe>
			break;
		case DIO_PORTD:
			CLR_BIT(DDRD,pin);
     c74:	a1 e3       	ldi	r26, 0x31	; 49
     c76:	b0 e0       	ldi	r27, 0x00	; 0
     c78:	e1 e3       	ldi	r30, 0x31	; 49
     c7a:	f0 e0       	ldi	r31, 0x00	; 0
     c7c:	80 81       	ld	r24, Z
     c7e:	48 2f       	mov	r20, r24
     c80:	8a 81       	ldd	r24, Y+2	; 0x02
     c82:	28 2f       	mov	r18, r24
     c84:	30 e0       	ldi	r19, 0x00	; 0
     c86:	81 e0       	ldi	r24, 0x01	; 1
     c88:	90 e0       	ldi	r25, 0x00	; 0
     c8a:	02 2e       	mov	r0, r18
     c8c:	02 c0       	rjmp	.+4      	; 0xc92 <DIO_PIN_DIRECTION+0x116>
     c8e:	88 0f       	add	r24, r24
     c90:	99 1f       	adc	r25, r25
     c92:	0a 94       	dec	r0
     c94:	e2 f7       	brpl	.-8      	; 0xc8e <DIO_PIN_DIRECTION+0x112>
     c96:	80 95       	com	r24
     c98:	84 23       	and	r24, r20
     c9a:	8c 93       	st	X, r24
     c9c:	6e c0       	rjmp	.+220    	; 0xd7a <DIO_PIN_DIRECTION+0x1fe>
			break;
		}
		break;

	case OUTPUT:
		switch(port)
     c9e:	89 81       	ldd	r24, Y+1	; 0x01
     ca0:	28 2f       	mov	r18, r24
     ca2:	30 e0       	ldi	r19, 0x00	; 0
     ca4:	3d 83       	std	Y+5, r19	; 0x05
     ca6:	2c 83       	std	Y+4, r18	; 0x04
     ca8:	8c 81       	ldd	r24, Y+4	; 0x04
     caa:	9d 81       	ldd	r25, Y+5	; 0x05
     cac:	81 30       	cpi	r24, 0x01	; 1
     cae:	91 05       	cpc	r25, r1
     cb0:	49 f1       	breq	.+82     	; 0xd04 <DIO_PIN_DIRECTION+0x188>
     cb2:	2c 81       	ldd	r18, Y+4	; 0x04
     cb4:	3d 81       	ldd	r19, Y+5	; 0x05
     cb6:	22 30       	cpi	r18, 0x02	; 2
     cb8:	31 05       	cpc	r19, r1
     cba:	2c f4       	brge	.+10     	; 0xcc6 <DIO_PIN_DIRECTION+0x14a>
     cbc:	8c 81       	ldd	r24, Y+4	; 0x04
     cbe:	9d 81       	ldd	r25, Y+5	; 0x05
     cc0:	00 97       	sbiw	r24, 0x00	; 0
     cc2:	61 f0       	breq	.+24     	; 0xcdc <DIO_PIN_DIRECTION+0x160>
     cc4:	5a c0       	rjmp	.+180    	; 0xd7a <DIO_PIN_DIRECTION+0x1fe>
     cc6:	2c 81       	ldd	r18, Y+4	; 0x04
     cc8:	3d 81       	ldd	r19, Y+5	; 0x05
     cca:	22 30       	cpi	r18, 0x02	; 2
     ccc:	31 05       	cpc	r19, r1
     cce:	71 f1       	breq	.+92     	; 0xd2c <DIO_PIN_DIRECTION+0x1b0>
     cd0:	8c 81       	ldd	r24, Y+4	; 0x04
     cd2:	9d 81       	ldd	r25, Y+5	; 0x05
     cd4:	83 30       	cpi	r24, 0x03	; 3
     cd6:	91 05       	cpc	r25, r1
     cd8:	e9 f1       	breq	.+122    	; 0xd54 <DIO_PIN_DIRECTION+0x1d8>
     cda:	4f c0       	rjmp	.+158    	; 0xd7a <DIO_PIN_DIRECTION+0x1fe>
		{
		case DIO_PORTA:
			SET_BIT(DDRA,pin);
     cdc:	aa e3       	ldi	r26, 0x3A	; 58
     cde:	b0 e0       	ldi	r27, 0x00	; 0
     ce0:	ea e3       	ldi	r30, 0x3A	; 58
     ce2:	f0 e0       	ldi	r31, 0x00	; 0
     ce4:	80 81       	ld	r24, Z
     ce6:	48 2f       	mov	r20, r24
     ce8:	8a 81       	ldd	r24, Y+2	; 0x02
     cea:	28 2f       	mov	r18, r24
     cec:	30 e0       	ldi	r19, 0x00	; 0
     cee:	81 e0       	ldi	r24, 0x01	; 1
     cf0:	90 e0       	ldi	r25, 0x00	; 0
     cf2:	02 2e       	mov	r0, r18
     cf4:	02 c0       	rjmp	.+4      	; 0xcfa <DIO_PIN_DIRECTION+0x17e>
     cf6:	88 0f       	add	r24, r24
     cf8:	99 1f       	adc	r25, r25
     cfa:	0a 94       	dec	r0
     cfc:	e2 f7       	brpl	.-8      	; 0xcf6 <DIO_PIN_DIRECTION+0x17a>
     cfe:	84 2b       	or	r24, r20
     d00:	8c 93       	st	X, r24
     d02:	3b c0       	rjmp	.+118    	; 0xd7a <DIO_PIN_DIRECTION+0x1fe>
			break;
		case DIO_PORTB:
			SET_BIT(DDRB,pin);
     d04:	a7 e3       	ldi	r26, 0x37	; 55
     d06:	b0 e0       	ldi	r27, 0x00	; 0
     d08:	e7 e3       	ldi	r30, 0x37	; 55
     d0a:	f0 e0       	ldi	r31, 0x00	; 0
     d0c:	80 81       	ld	r24, Z
     d0e:	48 2f       	mov	r20, r24
     d10:	8a 81       	ldd	r24, Y+2	; 0x02
     d12:	28 2f       	mov	r18, r24
     d14:	30 e0       	ldi	r19, 0x00	; 0
     d16:	81 e0       	ldi	r24, 0x01	; 1
     d18:	90 e0       	ldi	r25, 0x00	; 0
     d1a:	02 2e       	mov	r0, r18
     d1c:	02 c0       	rjmp	.+4      	; 0xd22 <DIO_PIN_DIRECTION+0x1a6>
     d1e:	88 0f       	add	r24, r24
     d20:	99 1f       	adc	r25, r25
     d22:	0a 94       	dec	r0
     d24:	e2 f7       	brpl	.-8      	; 0xd1e <DIO_PIN_DIRECTION+0x1a2>
     d26:	84 2b       	or	r24, r20
     d28:	8c 93       	st	X, r24
     d2a:	27 c0       	rjmp	.+78     	; 0xd7a <DIO_PIN_DIRECTION+0x1fe>
			break;
		case DIO_PORTC:
			SET_BIT(DDRC,pin);
     d2c:	a4 e3       	ldi	r26, 0x34	; 52
     d2e:	b0 e0       	ldi	r27, 0x00	; 0
     d30:	e4 e3       	ldi	r30, 0x34	; 52
     d32:	f0 e0       	ldi	r31, 0x00	; 0
     d34:	80 81       	ld	r24, Z
     d36:	48 2f       	mov	r20, r24
     d38:	8a 81       	ldd	r24, Y+2	; 0x02
     d3a:	28 2f       	mov	r18, r24
     d3c:	30 e0       	ldi	r19, 0x00	; 0
     d3e:	81 e0       	ldi	r24, 0x01	; 1
     d40:	90 e0       	ldi	r25, 0x00	; 0
     d42:	02 2e       	mov	r0, r18
     d44:	02 c0       	rjmp	.+4      	; 0xd4a <DIO_PIN_DIRECTION+0x1ce>
     d46:	88 0f       	add	r24, r24
     d48:	99 1f       	adc	r25, r25
     d4a:	0a 94       	dec	r0
     d4c:	e2 f7       	brpl	.-8      	; 0xd46 <DIO_PIN_DIRECTION+0x1ca>
     d4e:	84 2b       	or	r24, r20
     d50:	8c 93       	st	X, r24
     d52:	13 c0       	rjmp	.+38     	; 0xd7a <DIO_PIN_DIRECTION+0x1fe>
			break;
		case DIO_PORTD:
			SET_BIT(DDRD,pin);
     d54:	a1 e3       	ldi	r26, 0x31	; 49
     d56:	b0 e0       	ldi	r27, 0x00	; 0
     d58:	e1 e3       	ldi	r30, 0x31	; 49
     d5a:	f0 e0       	ldi	r31, 0x00	; 0
     d5c:	80 81       	ld	r24, Z
     d5e:	48 2f       	mov	r20, r24
     d60:	8a 81       	ldd	r24, Y+2	; 0x02
     d62:	28 2f       	mov	r18, r24
     d64:	30 e0       	ldi	r19, 0x00	; 0
     d66:	81 e0       	ldi	r24, 0x01	; 1
     d68:	90 e0       	ldi	r25, 0x00	; 0
     d6a:	02 2e       	mov	r0, r18
     d6c:	02 c0       	rjmp	.+4      	; 0xd72 <DIO_PIN_DIRECTION+0x1f6>
     d6e:	88 0f       	add	r24, r24
     d70:	99 1f       	adc	r25, r25
     d72:	0a 94       	dec	r0
     d74:	e2 f7       	brpl	.-8      	; 0xd6e <DIO_PIN_DIRECTION+0x1f2>
     d76:	84 2b       	or	r24, r20
     d78:	8c 93       	st	X, r24
			break;
		}
	}
}
     d7a:	29 96       	adiw	r28, 0x09	; 9
     d7c:	0f b6       	in	r0, 0x3f	; 63
     d7e:	f8 94       	cli
     d80:	de bf       	out	0x3e, r29	; 62
     d82:	0f be       	out	0x3f, r0	; 63
     d84:	cd bf       	out	0x3d, r28	; 61
     d86:	cf 91       	pop	r28
     d88:	df 91       	pop	r29
     d8a:	08 95       	ret

00000d8c <DIO_PIN_WRITE>:




void DIO_PIN_WRITE(u8 port,u8 pin,u8 status)
{
     d8c:	df 93       	push	r29
     d8e:	cf 93       	push	r28
     d90:	cd b7       	in	r28, 0x3d	; 61
     d92:	de b7       	in	r29, 0x3e	; 62
     d94:	29 97       	sbiw	r28, 0x09	; 9
     d96:	0f b6       	in	r0, 0x3f	; 63
     d98:	f8 94       	cli
     d9a:	de bf       	out	0x3e, r29	; 62
     d9c:	0f be       	out	0x3f, r0	; 63
     d9e:	cd bf       	out	0x3d, r28	; 61
     da0:	89 83       	std	Y+1, r24	; 0x01
     da2:	6a 83       	std	Y+2, r22	; 0x02
     da4:	4b 83       	std	Y+3, r20	; 0x03
	switch (status)
     da6:	8b 81       	ldd	r24, Y+3	; 0x03
     da8:	28 2f       	mov	r18, r24
     daa:	30 e0       	ldi	r19, 0x00	; 0
     dac:	39 87       	std	Y+9, r19	; 0x09
     dae:	28 87       	std	Y+8, r18	; 0x08
     db0:	88 85       	ldd	r24, Y+8	; 0x08
     db2:	99 85       	ldd	r25, Y+9	; 0x09
     db4:	00 97       	sbiw	r24, 0x00	; 0
     db6:	39 f0       	breq	.+14     	; 0xdc6 <DIO_PIN_WRITE+0x3a>
     db8:	28 85       	ldd	r18, Y+8	; 0x08
     dba:	39 85       	ldd	r19, Y+9	; 0x09
     dbc:	21 30       	cpi	r18, 0x01	; 1
     dbe:	31 05       	cpc	r19, r1
     dc0:	09 f4       	brne	.+2      	; 0xdc4 <DIO_PIN_WRITE+0x38>
     dc2:	75 c0       	rjmp	.+234    	; 0xeae <DIO_PIN_WRITE+0x122>
     dc4:	e2 c0       	rjmp	.+452    	; 0xf8a <DIO_PIN_WRITE+0x1fe>
	{
	case LOW:
		switch(port)
     dc6:	89 81       	ldd	r24, Y+1	; 0x01
     dc8:	28 2f       	mov	r18, r24
     dca:	30 e0       	ldi	r19, 0x00	; 0
     dcc:	3f 83       	std	Y+7, r19	; 0x07
     dce:	2e 83       	std	Y+6, r18	; 0x06
     dd0:	8e 81       	ldd	r24, Y+6	; 0x06
     dd2:	9f 81       	ldd	r25, Y+7	; 0x07
     dd4:	81 30       	cpi	r24, 0x01	; 1
     dd6:	91 05       	cpc	r25, r1
     dd8:	59 f1       	breq	.+86     	; 0xe30 <DIO_PIN_WRITE+0xa4>
     dda:	2e 81       	ldd	r18, Y+6	; 0x06
     ddc:	3f 81       	ldd	r19, Y+7	; 0x07
     dde:	22 30       	cpi	r18, 0x02	; 2
     de0:	31 05       	cpc	r19, r1
     de2:	2c f4       	brge	.+10     	; 0xdee <DIO_PIN_WRITE+0x62>
     de4:	8e 81       	ldd	r24, Y+6	; 0x06
     de6:	9f 81       	ldd	r25, Y+7	; 0x07
     de8:	00 97       	sbiw	r24, 0x00	; 0
     dea:	69 f0       	breq	.+26     	; 0xe06 <DIO_PIN_WRITE+0x7a>
     dec:	ce c0       	rjmp	.+412    	; 0xf8a <DIO_PIN_WRITE+0x1fe>
     dee:	2e 81       	ldd	r18, Y+6	; 0x06
     df0:	3f 81       	ldd	r19, Y+7	; 0x07
     df2:	22 30       	cpi	r18, 0x02	; 2
     df4:	31 05       	cpc	r19, r1
     df6:	89 f1       	breq	.+98     	; 0xe5a <DIO_PIN_WRITE+0xce>
     df8:	8e 81       	ldd	r24, Y+6	; 0x06
     dfa:	9f 81       	ldd	r25, Y+7	; 0x07
     dfc:	83 30       	cpi	r24, 0x03	; 3
     dfe:	91 05       	cpc	r25, r1
     e00:	09 f4       	brne	.+2      	; 0xe04 <DIO_PIN_WRITE+0x78>
     e02:	40 c0       	rjmp	.+128    	; 0xe84 <DIO_PIN_WRITE+0xf8>
     e04:	c2 c0       	rjmp	.+388    	; 0xf8a <DIO_PIN_WRITE+0x1fe>
		{
		case DIO_PORTA:
			CLR_BIT(PORTA,pin);
     e06:	ab e3       	ldi	r26, 0x3B	; 59
     e08:	b0 e0       	ldi	r27, 0x00	; 0
     e0a:	eb e3       	ldi	r30, 0x3B	; 59
     e0c:	f0 e0       	ldi	r31, 0x00	; 0
     e0e:	80 81       	ld	r24, Z
     e10:	48 2f       	mov	r20, r24
     e12:	8a 81       	ldd	r24, Y+2	; 0x02
     e14:	28 2f       	mov	r18, r24
     e16:	30 e0       	ldi	r19, 0x00	; 0
     e18:	81 e0       	ldi	r24, 0x01	; 1
     e1a:	90 e0       	ldi	r25, 0x00	; 0
     e1c:	02 2e       	mov	r0, r18
     e1e:	02 c0       	rjmp	.+4      	; 0xe24 <DIO_PIN_WRITE+0x98>
     e20:	88 0f       	add	r24, r24
     e22:	99 1f       	adc	r25, r25
     e24:	0a 94       	dec	r0
     e26:	e2 f7       	brpl	.-8      	; 0xe20 <DIO_PIN_WRITE+0x94>
     e28:	80 95       	com	r24
     e2a:	84 23       	and	r24, r20
     e2c:	8c 93       	st	X, r24
     e2e:	ad c0       	rjmp	.+346    	; 0xf8a <DIO_PIN_WRITE+0x1fe>
			break;
		case DIO_PORTB:
			CLR_BIT(PORTB,pin);
     e30:	a8 e3       	ldi	r26, 0x38	; 56
     e32:	b0 e0       	ldi	r27, 0x00	; 0
     e34:	e8 e3       	ldi	r30, 0x38	; 56
     e36:	f0 e0       	ldi	r31, 0x00	; 0
     e38:	80 81       	ld	r24, Z
     e3a:	48 2f       	mov	r20, r24
     e3c:	8a 81       	ldd	r24, Y+2	; 0x02
     e3e:	28 2f       	mov	r18, r24
     e40:	30 e0       	ldi	r19, 0x00	; 0
     e42:	81 e0       	ldi	r24, 0x01	; 1
     e44:	90 e0       	ldi	r25, 0x00	; 0
     e46:	02 2e       	mov	r0, r18
     e48:	02 c0       	rjmp	.+4      	; 0xe4e <DIO_PIN_WRITE+0xc2>
     e4a:	88 0f       	add	r24, r24
     e4c:	99 1f       	adc	r25, r25
     e4e:	0a 94       	dec	r0
     e50:	e2 f7       	brpl	.-8      	; 0xe4a <DIO_PIN_WRITE+0xbe>
     e52:	80 95       	com	r24
     e54:	84 23       	and	r24, r20
     e56:	8c 93       	st	X, r24
     e58:	98 c0       	rjmp	.+304    	; 0xf8a <DIO_PIN_WRITE+0x1fe>
			break;
		case DIO_PORTC:
			CLR_BIT(PORTC,pin);
     e5a:	a5 e3       	ldi	r26, 0x35	; 53
     e5c:	b0 e0       	ldi	r27, 0x00	; 0
     e5e:	e5 e3       	ldi	r30, 0x35	; 53
     e60:	f0 e0       	ldi	r31, 0x00	; 0
     e62:	80 81       	ld	r24, Z
     e64:	48 2f       	mov	r20, r24
     e66:	8a 81       	ldd	r24, Y+2	; 0x02
     e68:	28 2f       	mov	r18, r24
     e6a:	30 e0       	ldi	r19, 0x00	; 0
     e6c:	81 e0       	ldi	r24, 0x01	; 1
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	02 2e       	mov	r0, r18
     e72:	02 c0       	rjmp	.+4      	; 0xe78 <DIO_PIN_WRITE+0xec>
     e74:	88 0f       	add	r24, r24
     e76:	99 1f       	adc	r25, r25
     e78:	0a 94       	dec	r0
     e7a:	e2 f7       	brpl	.-8      	; 0xe74 <DIO_PIN_WRITE+0xe8>
     e7c:	80 95       	com	r24
     e7e:	84 23       	and	r24, r20
     e80:	8c 93       	st	X, r24
     e82:	83 c0       	rjmp	.+262    	; 0xf8a <DIO_PIN_WRITE+0x1fe>
			break;
		case DIO_PORTD:
			CLR_BIT(PORTD,pin);
     e84:	a2 e3       	ldi	r26, 0x32	; 50
     e86:	b0 e0       	ldi	r27, 0x00	; 0
     e88:	e2 e3       	ldi	r30, 0x32	; 50
     e8a:	f0 e0       	ldi	r31, 0x00	; 0
     e8c:	80 81       	ld	r24, Z
     e8e:	48 2f       	mov	r20, r24
     e90:	8a 81       	ldd	r24, Y+2	; 0x02
     e92:	28 2f       	mov	r18, r24
     e94:	30 e0       	ldi	r19, 0x00	; 0
     e96:	81 e0       	ldi	r24, 0x01	; 1
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	02 2e       	mov	r0, r18
     e9c:	02 c0       	rjmp	.+4      	; 0xea2 <DIO_PIN_WRITE+0x116>
     e9e:	88 0f       	add	r24, r24
     ea0:	99 1f       	adc	r25, r25
     ea2:	0a 94       	dec	r0
     ea4:	e2 f7       	brpl	.-8      	; 0xe9e <DIO_PIN_WRITE+0x112>
     ea6:	80 95       	com	r24
     ea8:	84 23       	and	r24, r20
     eaa:	8c 93       	st	X, r24
     eac:	6e c0       	rjmp	.+220    	; 0xf8a <DIO_PIN_WRITE+0x1fe>
			break;
		}
		break;

	case HIGH:
		switch(port)
     eae:	89 81       	ldd	r24, Y+1	; 0x01
     eb0:	28 2f       	mov	r18, r24
     eb2:	30 e0       	ldi	r19, 0x00	; 0
     eb4:	3d 83       	std	Y+5, r19	; 0x05
     eb6:	2c 83       	std	Y+4, r18	; 0x04
     eb8:	8c 81       	ldd	r24, Y+4	; 0x04
     eba:	9d 81       	ldd	r25, Y+5	; 0x05
     ebc:	81 30       	cpi	r24, 0x01	; 1
     ebe:	91 05       	cpc	r25, r1
     ec0:	49 f1       	breq	.+82     	; 0xf14 <DIO_PIN_WRITE+0x188>
     ec2:	2c 81       	ldd	r18, Y+4	; 0x04
     ec4:	3d 81       	ldd	r19, Y+5	; 0x05
     ec6:	22 30       	cpi	r18, 0x02	; 2
     ec8:	31 05       	cpc	r19, r1
     eca:	2c f4       	brge	.+10     	; 0xed6 <DIO_PIN_WRITE+0x14a>
     ecc:	8c 81       	ldd	r24, Y+4	; 0x04
     ece:	9d 81       	ldd	r25, Y+5	; 0x05
     ed0:	00 97       	sbiw	r24, 0x00	; 0
     ed2:	61 f0       	breq	.+24     	; 0xeec <DIO_PIN_WRITE+0x160>
     ed4:	5a c0       	rjmp	.+180    	; 0xf8a <DIO_PIN_WRITE+0x1fe>
     ed6:	2c 81       	ldd	r18, Y+4	; 0x04
     ed8:	3d 81       	ldd	r19, Y+5	; 0x05
     eda:	22 30       	cpi	r18, 0x02	; 2
     edc:	31 05       	cpc	r19, r1
     ede:	71 f1       	breq	.+92     	; 0xf3c <DIO_PIN_WRITE+0x1b0>
     ee0:	8c 81       	ldd	r24, Y+4	; 0x04
     ee2:	9d 81       	ldd	r25, Y+5	; 0x05
     ee4:	83 30       	cpi	r24, 0x03	; 3
     ee6:	91 05       	cpc	r25, r1
     ee8:	e9 f1       	breq	.+122    	; 0xf64 <DIO_PIN_WRITE+0x1d8>
     eea:	4f c0       	rjmp	.+158    	; 0xf8a <DIO_PIN_WRITE+0x1fe>
		{
		case DIO_PORTA:
			SET_BIT(PORTA,pin);
     eec:	ab e3       	ldi	r26, 0x3B	; 59
     eee:	b0 e0       	ldi	r27, 0x00	; 0
     ef0:	eb e3       	ldi	r30, 0x3B	; 59
     ef2:	f0 e0       	ldi	r31, 0x00	; 0
     ef4:	80 81       	ld	r24, Z
     ef6:	48 2f       	mov	r20, r24
     ef8:	8a 81       	ldd	r24, Y+2	; 0x02
     efa:	28 2f       	mov	r18, r24
     efc:	30 e0       	ldi	r19, 0x00	; 0
     efe:	81 e0       	ldi	r24, 0x01	; 1
     f00:	90 e0       	ldi	r25, 0x00	; 0
     f02:	02 2e       	mov	r0, r18
     f04:	02 c0       	rjmp	.+4      	; 0xf0a <DIO_PIN_WRITE+0x17e>
     f06:	88 0f       	add	r24, r24
     f08:	99 1f       	adc	r25, r25
     f0a:	0a 94       	dec	r0
     f0c:	e2 f7       	brpl	.-8      	; 0xf06 <DIO_PIN_WRITE+0x17a>
     f0e:	84 2b       	or	r24, r20
     f10:	8c 93       	st	X, r24
     f12:	3b c0       	rjmp	.+118    	; 0xf8a <DIO_PIN_WRITE+0x1fe>
			break;
		case DIO_PORTB:
			SET_BIT(PORTB,pin);
     f14:	a8 e3       	ldi	r26, 0x38	; 56
     f16:	b0 e0       	ldi	r27, 0x00	; 0
     f18:	e8 e3       	ldi	r30, 0x38	; 56
     f1a:	f0 e0       	ldi	r31, 0x00	; 0
     f1c:	80 81       	ld	r24, Z
     f1e:	48 2f       	mov	r20, r24
     f20:	8a 81       	ldd	r24, Y+2	; 0x02
     f22:	28 2f       	mov	r18, r24
     f24:	30 e0       	ldi	r19, 0x00	; 0
     f26:	81 e0       	ldi	r24, 0x01	; 1
     f28:	90 e0       	ldi	r25, 0x00	; 0
     f2a:	02 2e       	mov	r0, r18
     f2c:	02 c0       	rjmp	.+4      	; 0xf32 <DIO_PIN_WRITE+0x1a6>
     f2e:	88 0f       	add	r24, r24
     f30:	99 1f       	adc	r25, r25
     f32:	0a 94       	dec	r0
     f34:	e2 f7       	brpl	.-8      	; 0xf2e <DIO_PIN_WRITE+0x1a2>
     f36:	84 2b       	or	r24, r20
     f38:	8c 93       	st	X, r24
     f3a:	27 c0       	rjmp	.+78     	; 0xf8a <DIO_PIN_WRITE+0x1fe>
			break;
		case DIO_PORTC:
			SET_BIT(PORTC,pin);
     f3c:	a5 e3       	ldi	r26, 0x35	; 53
     f3e:	b0 e0       	ldi	r27, 0x00	; 0
     f40:	e5 e3       	ldi	r30, 0x35	; 53
     f42:	f0 e0       	ldi	r31, 0x00	; 0
     f44:	80 81       	ld	r24, Z
     f46:	48 2f       	mov	r20, r24
     f48:	8a 81       	ldd	r24, Y+2	; 0x02
     f4a:	28 2f       	mov	r18, r24
     f4c:	30 e0       	ldi	r19, 0x00	; 0
     f4e:	81 e0       	ldi	r24, 0x01	; 1
     f50:	90 e0       	ldi	r25, 0x00	; 0
     f52:	02 2e       	mov	r0, r18
     f54:	02 c0       	rjmp	.+4      	; 0xf5a <DIO_PIN_WRITE+0x1ce>
     f56:	88 0f       	add	r24, r24
     f58:	99 1f       	adc	r25, r25
     f5a:	0a 94       	dec	r0
     f5c:	e2 f7       	brpl	.-8      	; 0xf56 <DIO_PIN_WRITE+0x1ca>
     f5e:	84 2b       	or	r24, r20
     f60:	8c 93       	st	X, r24
     f62:	13 c0       	rjmp	.+38     	; 0xf8a <DIO_PIN_WRITE+0x1fe>
			break;
		case DIO_PORTD:
			SET_BIT(PORTD,pin);
     f64:	a2 e3       	ldi	r26, 0x32	; 50
     f66:	b0 e0       	ldi	r27, 0x00	; 0
     f68:	e2 e3       	ldi	r30, 0x32	; 50
     f6a:	f0 e0       	ldi	r31, 0x00	; 0
     f6c:	80 81       	ld	r24, Z
     f6e:	48 2f       	mov	r20, r24
     f70:	8a 81       	ldd	r24, Y+2	; 0x02
     f72:	28 2f       	mov	r18, r24
     f74:	30 e0       	ldi	r19, 0x00	; 0
     f76:	81 e0       	ldi	r24, 0x01	; 1
     f78:	90 e0       	ldi	r25, 0x00	; 0
     f7a:	02 2e       	mov	r0, r18
     f7c:	02 c0       	rjmp	.+4      	; 0xf82 <DIO_PIN_WRITE+0x1f6>
     f7e:	88 0f       	add	r24, r24
     f80:	99 1f       	adc	r25, r25
     f82:	0a 94       	dec	r0
     f84:	e2 f7       	brpl	.-8      	; 0xf7e <DIO_PIN_WRITE+0x1f2>
     f86:	84 2b       	or	r24, r20
     f88:	8c 93       	st	X, r24
	}




}
     f8a:	29 96       	adiw	r28, 0x09	; 9
     f8c:	0f b6       	in	r0, 0x3f	; 63
     f8e:	f8 94       	cli
     f90:	de bf       	out	0x3e, r29	; 62
     f92:	0f be       	out	0x3f, r0	; 63
     f94:	cd bf       	out	0x3d, r28	; 61
     f96:	cf 91       	pop	r28
     f98:	df 91       	pop	r29
     f9a:	08 95       	ret

00000f9c <DIO_PIN_TOG>:

void DIO_PIN_TOG(u8 port,u8 pin)
{
     f9c:	df 93       	push	r29
     f9e:	cf 93       	push	r28
     fa0:	00 d0       	rcall	.+0      	; 0xfa2 <DIO_PIN_TOG+0x6>
     fa2:	00 d0       	rcall	.+0      	; 0xfa4 <DIO_PIN_TOG+0x8>
     fa4:	cd b7       	in	r28, 0x3d	; 61
     fa6:	de b7       	in	r29, 0x3e	; 62
     fa8:	89 83       	std	Y+1, r24	; 0x01
     faa:	6a 83       	std	Y+2, r22	; 0x02
		switch(port)
     fac:	89 81       	ldd	r24, Y+1	; 0x01
     fae:	28 2f       	mov	r18, r24
     fb0:	30 e0       	ldi	r19, 0x00	; 0
     fb2:	3c 83       	std	Y+4, r19	; 0x04
     fb4:	2b 83       	std	Y+3, r18	; 0x03
     fb6:	8b 81       	ldd	r24, Y+3	; 0x03
     fb8:	9c 81       	ldd	r25, Y+4	; 0x04
     fba:	81 30       	cpi	r24, 0x01	; 1
     fbc:	91 05       	cpc	r25, r1
     fbe:	49 f1       	breq	.+82     	; 0x1012 <DIO_PIN_TOG+0x76>
     fc0:	2b 81       	ldd	r18, Y+3	; 0x03
     fc2:	3c 81       	ldd	r19, Y+4	; 0x04
     fc4:	22 30       	cpi	r18, 0x02	; 2
     fc6:	31 05       	cpc	r19, r1
     fc8:	2c f4       	brge	.+10     	; 0xfd4 <DIO_PIN_TOG+0x38>
     fca:	8b 81       	ldd	r24, Y+3	; 0x03
     fcc:	9c 81       	ldd	r25, Y+4	; 0x04
     fce:	00 97       	sbiw	r24, 0x00	; 0
     fd0:	61 f0       	breq	.+24     	; 0xfea <DIO_PIN_TOG+0x4e>
     fd2:	5a c0       	rjmp	.+180    	; 0x1088 <DIO_PIN_TOG+0xec>
     fd4:	2b 81       	ldd	r18, Y+3	; 0x03
     fd6:	3c 81       	ldd	r19, Y+4	; 0x04
     fd8:	22 30       	cpi	r18, 0x02	; 2
     fda:	31 05       	cpc	r19, r1
     fdc:	71 f1       	breq	.+92     	; 0x103a <DIO_PIN_TOG+0x9e>
     fde:	8b 81       	ldd	r24, Y+3	; 0x03
     fe0:	9c 81       	ldd	r25, Y+4	; 0x04
     fe2:	83 30       	cpi	r24, 0x03	; 3
     fe4:	91 05       	cpc	r25, r1
     fe6:	e9 f1       	breq	.+122    	; 0x1062 <DIO_PIN_TOG+0xc6>
     fe8:	4f c0       	rjmp	.+158    	; 0x1088 <DIO_PIN_TOG+0xec>
		{
		case DIO_PORTA:
			TOG_BIT(PORTA,pin);
     fea:	ab e3       	ldi	r26, 0x3B	; 59
     fec:	b0 e0       	ldi	r27, 0x00	; 0
     fee:	eb e3       	ldi	r30, 0x3B	; 59
     ff0:	f0 e0       	ldi	r31, 0x00	; 0
     ff2:	80 81       	ld	r24, Z
     ff4:	48 2f       	mov	r20, r24
     ff6:	8a 81       	ldd	r24, Y+2	; 0x02
     ff8:	28 2f       	mov	r18, r24
     ffa:	30 e0       	ldi	r19, 0x00	; 0
     ffc:	81 e0       	ldi	r24, 0x01	; 1
     ffe:	90 e0       	ldi	r25, 0x00	; 0
    1000:	02 2e       	mov	r0, r18
    1002:	02 c0       	rjmp	.+4      	; 0x1008 <DIO_PIN_TOG+0x6c>
    1004:	88 0f       	add	r24, r24
    1006:	99 1f       	adc	r25, r25
    1008:	0a 94       	dec	r0
    100a:	e2 f7       	brpl	.-8      	; 0x1004 <DIO_PIN_TOG+0x68>
    100c:	84 27       	eor	r24, r20
    100e:	8c 93       	st	X, r24
    1010:	3b c0       	rjmp	.+118    	; 0x1088 <DIO_PIN_TOG+0xec>
			break;
		case DIO_PORTB:
			TOG_BIT(PORTB,pin);
    1012:	a8 e3       	ldi	r26, 0x38	; 56
    1014:	b0 e0       	ldi	r27, 0x00	; 0
    1016:	e8 e3       	ldi	r30, 0x38	; 56
    1018:	f0 e0       	ldi	r31, 0x00	; 0
    101a:	80 81       	ld	r24, Z
    101c:	48 2f       	mov	r20, r24
    101e:	8a 81       	ldd	r24, Y+2	; 0x02
    1020:	28 2f       	mov	r18, r24
    1022:	30 e0       	ldi	r19, 0x00	; 0
    1024:	81 e0       	ldi	r24, 0x01	; 1
    1026:	90 e0       	ldi	r25, 0x00	; 0
    1028:	02 2e       	mov	r0, r18
    102a:	02 c0       	rjmp	.+4      	; 0x1030 <DIO_PIN_TOG+0x94>
    102c:	88 0f       	add	r24, r24
    102e:	99 1f       	adc	r25, r25
    1030:	0a 94       	dec	r0
    1032:	e2 f7       	brpl	.-8      	; 0x102c <DIO_PIN_TOG+0x90>
    1034:	84 27       	eor	r24, r20
    1036:	8c 93       	st	X, r24
    1038:	27 c0       	rjmp	.+78     	; 0x1088 <DIO_PIN_TOG+0xec>
			break;
		case DIO_PORTC:
			TOG_BIT(PORTC,pin);
    103a:	a5 e3       	ldi	r26, 0x35	; 53
    103c:	b0 e0       	ldi	r27, 0x00	; 0
    103e:	e5 e3       	ldi	r30, 0x35	; 53
    1040:	f0 e0       	ldi	r31, 0x00	; 0
    1042:	80 81       	ld	r24, Z
    1044:	48 2f       	mov	r20, r24
    1046:	8a 81       	ldd	r24, Y+2	; 0x02
    1048:	28 2f       	mov	r18, r24
    104a:	30 e0       	ldi	r19, 0x00	; 0
    104c:	81 e0       	ldi	r24, 0x01	; 1
    104e:	90 e0       	ldi	r25, 0x00	; 0
    1050:	02 2e       	mov	r0, r18
    1052:	02 c0       	rjmp	.+4      	; 0x1058 <DIO_PIN_TOG+0xbc>
    1054:	88 0f       	add	r24, r24
    1056:	99 1f       	adc	r25, r25
    1058:	0a 94       	dec	r0
    105a:	e2 f7       	brpl	.-8      	; 0x1054 <DIO_PIN_TOG+0xb8>
    105c:	84 27       	eor	r24, r20
    105e:	8c 93       	st	X, r24
    1060:	13 c0       	rjmp	.+38     	; 0x1088 <DIO_PIN_TOG+0xec>
			break;
		case DIO_PORTD:
			TOG_BIT(PORTD,pin);
    1062:	a2 e3       	ldi	r26, 0x32	; 50
    1064:	b0 e0       	ldi	r27, 0x00	; 0
    1066:	e2 e3       	ldi	r30, 0x32	; 50
    1068:	f0 e0       	ldi	r31, 0x00	; 0
    106a:	80 81       	ld	r24, Z
    106c:	48 2f       	mov	r20, r24
    106e:	8a 81       	ldd	r24, Y+2	; 0x02
    1070:	28 2f       	mov	r18, r24
    1072:	30 e0       	ldi	r19, 0x00	; 0
    1074:	81 e0       	ldi	r24, 0x01	; 1
    1076:	90 e0       	ldi	r25, 0x00	; 0
    1078:	02 2e       	mov	r0, r18
    107a:	02 c0       	rjmp	.+4      	; 0x1080 <DIO_PIN_TOG+0xe4>
    107c:	88 0f       	add	r24, r24
    107e:	99 1f       	adc	r25, r25
    1080:	0a 94       	dec	r0
    1082:	e2 f7       	brpl	.-8      	; 0x107c <DIO_PIN_TOG+0xe0>
    1084:	84 27       	eor	r24, r20
    1086:	8c 93       	st	X, r24
			break;
		}
}
    1088:	0f 90       	pop	r0
    108a:	0f 90       	pop	r0
    108c:	0f 90       	pop	r0
    108e:	0f 90       	pop	r0
    1090:	cf 91       	pop	r28
    1092:	df 91       	pop	r29
    1094:	08 95       	ret

00001096 <DIO_PORT_DIRECTION>:



void DIO_PORT_DIRECTION(u8 port,u8 value)
{
    1096:	df 93       	push	r29
    1098:	cf 93       	push	r28
    109a:	00 d0       	rcall	.+0      	; 0x109c <DIO_PORT_DIRECTION+0x6>
    109c:	00 d0       	rcall	.+0      	; 0x109e <DIO_PORT_DIRECTION+0x8>
    109e:	cd b7       	in	r28, 0x3d	; 61
    10a0:	de b7       	in	r29, 0x3e	; 62
    10a2:	89 83       	std	Y+1, r24	; 0x01
    10a4:	6a 83       	std	Y+2, r22	; 0x02
	switch(port)
    10a6:	89 81       	ldd	r24, Y+1	; 0x01
    10a8:	28 2f       	mov	r18, r24
    10aa:	30 e0       	ldi	r19, 0x00	; 0
    10ac:	3c 83       	std	Y+4, r19	; 0x04
    10ae:	2b 83       	std	Y+3, r18	; 0x03
    10b0:	8b 81       	ldd	r24, Y+3	; 0x03
    10b2:	9c 81       	ldd	r25, Y+4	; 0x04
    10b4:	81 30       	cpi	r24, 0x01	; 1
    10b6:	91 05       	cpc	r25, r1
    10b8:	d1 f0       	breq	.+52     	; 0x10ee <DIO_PORT_DIRECTION+0x58>
    10ba:	2b 81       	ldd	r18, Y+3	; 0x03
    10bc:	3c 81       	ldd	r19, Y+4	; 0x04
    10be:	22 30       	cpi	r18, 0x02	; 2
    10c0:	31 05       	cpc	r19, r1
    10c2:	2c f4       	brge	.+10     	; 0x10ce <DIO_PORT_DIRECTION+0x38>
    10c4:	8b 81       	ldd	r24, Y+3	; 0x03
    10c6:	9c 81       	ldd	r25, Y+4	; 0x04
    10c8:	00 97       	sbiw	r24, 0x00	; 0
    10ca:	61 f0       	breq	.+24     	; 0x10e4 <DIO_PORT_DIRECTION+0x4e>
    10cc:	1e c0       	rjmp	.+60     	; 0x110a <DIO_PORT_DIRECTION+0x74>
    10ce:	2b 81       	ldd	r18, Y+3	; 0x03
    10d0:	3c 81       	ldd	r19, Y+4	; 0x04
    10d2:	22 30       	cpi	r18, 0x02	; 2
    10d4:	31 05       	cpc	r19, r1
    10d6:	81 f0       	breq	.+32     	; 0x10f8 <DIO_PORT_DIRECTION+0x62>
    10d8:	8b 81       	ldd	r24, Y+3	; 0x03
    10da:	9c 81       	ldd	r25, Y+4	; 0x04
    10dc:	83 30       	cpi	r24, 0x03	; 3
    10de:	91 05       	cpc	r25, r1
    10e0:	81 f0       	breq	.+32     	; 0x1102 <DIO_PORT_DIRECTION+0x6c>
    10e2:	13 c0       	rjmp	.+38     	; 0x110a <DIO_PORT_DIRECTION+0x74>
	{
	case DIO_PORTA:
		DDRA = value;
    10e4:	ea e3       	ldi	r30, 0x3A	; 58
    10e6:	f0 e0       	ldi	r31, 0x00	; 0
    10e8:	8a 81       	ldd	r24, Y+2	; 0x02
    10ea:	80 83       	st	Z, r24
    10ec:	0e c0       	rjmp	.+28     	; 0x110a <DIO_PORT_DIRECTION+0x74>
		break;
	case DIO_PORTB:
		DDRB = value;
    10ee:	e7 e3       	ldi	r30, 0x37	; 55
    10f0:	f0 e0       	ldi	r31, 0x00	; 0
    10f2:	8a 81       	ldd	r24, Y+2	; 0x02
    10f4:	80 83       	st	Z, r24
    10f6:	09 c0       	rjmp	.+18     	; 0x110a <DIO_PORT_DIRECTION+0x74>
			break;
	case DIO_PORTC:
		DDRC = value;
    10f8:	e4 e3       	ldi	r30, 0x34	; 52
    10fa:	f0 e0       	ldi	r31, 0x00	; 0
    10fc:	8a 81       	ldd	r24, Y+2	; 0x02
    10fe:	80 83       	st	Z, r24
    1100:	04 c0       	rjmp	.+8      	; 0x110a <DIO_PORT_DIRECTION+0x74>
			break;
	case DIO_PORTD:
		DDRD = value;
    1102:	e1 e3       	ldi	r30, 0x31	; 49
    1104:	f0 e0       	ldi	r31, 0x00	; 0
    1106:	8a 81       	ldd	r24, Y+2	; 0x02
    1108:	80 83       	st	Z, r24
			break;

	}
}
    110a:	0f 90       	pop	r0
    110c:	0f 90       	pop	r0
    110e:	0f 90       	pop	r0
    1110:	0f 90       	pop	r0
    1112:	cf 91       	pop	r28
    1114:	df 91       	pop	r29
    1116:	08 95       	ret

00001118 <DIO_PORT_WRITE>:

void DIO_PORT_WRITE(u8 port,u8 value)
{
    1118:	df 93       	push	r29
    111a:	cf 93       	push	r28
    111c:	00 d0       	rcall	.+0      	; 0x111e <DIO_PORT_WRITE+0x6>
    111e:	00 d0       	rcall	.+0      	; 0x1120 <DIO_PORT_WRITE+0x8>
    1120:	cd b7       	in	r28, 0x3d	; 61
    1122:	de b7       	in	r29, 0x3e	; 62
    1124:	89 83       	std	Y+1, r24	; 0x01
    1126:	6a 83       	std	Y+2, r22	; 0x02

	switch(port)
    1128:	89 81       	ldd	r24, Y+1	; 0x01
    112a:	28 2f       	mov	r18, r24
    112c:	30 e0       	ldi	r19, 0x00	; 0
    112e:	3c 83       	std	Y+4, r19	; 0x04
    1130:	2b 83       	std	Y+3, r18	; 0x03
    1132:	8b 81       	ldd	r24, Y+3	; 0x03
    1134:	9c 81       	ldd	r25, Y+4	; 0x04
    1136:	81 30       	cpi	r24, 0x01	; 1
    1138:	91 05       	cpc	r25, r1
    113a:	d1 f0       	breq	.+52     	; 0x1170 <DIO_PORT_WRITE+0x58>
    113c:	2b 81       	ldd	r18, Y+3	; 0x03
    113e:	3c 81       	ldd	r19, Y+4	; 0x04
    1140:	22 30       	cpi	r18, 0x02	; 2
    1142:	31 05       	cpc	r19, r1
    1144:	2c f4       	brge	.+10     	; 0x1150 <DIO_PORT_WRITE+0x38>
    1146:	8b 81       	ldd	r24, Y+3	; 0x03
    1148:	9c 81       	ldd	r25, Y+4	; 0x04
    114a:	00 97       	sbiw	r24, 0x00	; 0
    114c:	61 f0       	breq	.+24     	; 0x1166 <DIO_PORT_WRITE+0x4e>
    114e:	1e c0       	rjmp	.+60     	; 0x118c <DIO_PORT_WRITE+0x74>
    1150:	2b 81       	ldd	r18, Y+3	; 0x03
    1152:	3c 81       	ldd	r19, Y+4	; 0x04
    1154:	22 30       	cpi	r18, 0x02	; 2
    1156:	31 05       	cpc	r19, r1
    1158:	81 f0       	breq	.+32     	; 0x117a <DIO_PORT_WRITE+0x62>
    115a:	8b 81       	ldd	r24, Y+3	; 0x03
    115c:	9c 81       	ldd	r25, Y+4	; 0x04
    115e:	83 30       	cpi	r24, 0x03	; 3
    1160:	91 05       	cpc	r25, r1
    1162:	81 f0       	breq	.+32     	; 0x1184 <DIO_PORT_WRITE+0x6c>
    1164:	13 c0       	rjmp	.+38     	; 0x118c <DIO_PORT_WRITE+0x74>
	{
	case DIO_PORTA:
		PORTA = value;
    1166:	eb e3       	ldi	r30, 0x3B	; 59
    1168:	f0 e0       	ldi	r31, 0x00	; 0
    116a:	8a 81       	ldd	r24, Y+2	; 0x02
    116c:	80 83       	st	Z, r24
    116e:	0e c0       	rjmp	.+28     	; 0x118c <DIO_PORT_WRITE+0x74>
		break;
	case DIO_PORTB:
		PORTB = value;
    1170:	e8 e3       	ldi	r30, 0x38	; 56
    1172:	f0 e0       	ldi	r31, 0x00	; 0
    1174:	8a 81       	ldd	r24, Y+2	; 0x02
    1176:	80 83       	st	Z, r24
    1178:	09 c0       	rjmp	.+18     	; 0x118c <DIO_PORT_WRITE+0x74>
			break;
	case DIO_PORTC:
		PORTC = value;
    117a:	e5 e3       	ldi	r30, 0x35	; 53
    117c:	f0 e0       	ldi	r31, 0x00	; 0
    117e:	8a 81       	ldd	r24, Y+2	; 0x02
    1180:	80 83       	st	Z, r24
    1182:	04 c0       	rjmp	.+8      	; 0x118c <DIO_PORT_WRITE+0x74>
			break;
	case DIO_PORTD:
		PORTD = value;
    1184:	e2 e3       	ldi	r30, 0x32	; 50
    1186:	f0 e0       	ldi	r31, 0x00	; 0
    1188:	8a 81       	ldd	r24, Y+2	; 0x02
    118a:	80 83       	st	Z, r24
			break;

	}
}
    118c:	0f 90       	pop	r0
    118e:	0f 90       	pop	r0
    1190:	0f 90       	pop	r0
    1192:	0f 90       	pop	r0
    1194:	cf 91       	pop	r28
    1196:	df 91       	pop	r29
    1198:	08 95       	ret

0000119a <DIO_PIN_READ>:
u8 DIO_PIN_READ(u8 port ,u8 pin ){
    119a:	df 93       	push	r29
    119c:	cf 93       	push	r28
    119e:	00 d0       	rcall	.+0      	; 0x11a0 <DIO_PIN_READ+0x6>
    11a0:	00 d0       	rcall	.+0      	; 0x11a2 <DIO_PIN_READ+0x8>
    11a2:	0f 92       	push	r0
    11a4:	cd b7       	in	r28, 0x3d	; 61
    11a6:	de b7       	in	r29, 0x3e	; 62
    11a8:	8a 83       	std	Y+2, r24	; 0x02
    11aa:	6b 83       	std	Y+3, r22	; 0x03
	u8 x ;
	switch(port)
    11ac:	8a 81       	ldd	r24, Y+2	; 0x02
    11ae:	28 2f       	mov	r18, r24
    11b0:	30 e0       	ldi	r19, 0x00	; 0
    11b2:	3d 83       	std	Y+5, r19	; 0x05
    11b4:	2c 83       	std	Y+4, r18	; 0x04
    11b6:	4c 81       	ldd	r20, Y+4	; 0x04
    11b8:	5d 81       	ldd	r21, Y+5	; 0x05
    11ba:	41 30       	cpi	r20, 0x01	; 1
    11bc:	51 05       	cpc	r21, r1
    11be:	41 f1       	breq	.+80     	; 0x1210 <DIO_PIN_READ+0x76>
    11c0:	8c 81       	ldd	r24, Y+4	; 0x04
    11c2:	9d 81       	ldd	r25, Y+5	; 0x05
    11c4:	82 30       	cpi	r24, 0x02	; 2
    11c6:	91 05       	cpc	r25, r1
    11c8:	34 f4       	brge	.+12     	; 0x11d6 <DIO_PIN_READ+0x3c>
    11ca:	2c 81       	ldd	r18, Y+4	; 0x04
    11cc:	3d 81       	ldd	r19, Y+5	; 0x05
    11ce:	21 15       	cp	r18, r1
    11d0:	31 05       	cpc	r19, r1
    11d2:	61 f0       	breq	.+24     	; 0x11ec <DIO_PIN_READ+0x52>
    11d4:	52 c0       	rjmp	.+164    	; 0x127a <DIO_PIN_READ+0xe0>
    11d6:	4c 81       	ldd	r20, Y+4	; 0x04
    11d8:	5d 81       	ldd	r21, Y+5	; 0x05
    11da:	42 30       	cpi	r20, 0x02	; 2
    11dc:	51 05       	cpc	r21, r1
    11de:	51 f1       	breq	.+84     	; 0x1234 <DIO_PIN_READ+0x9a>
    11e0:	8c 81       	ldd	r24, Y+4	; 0x04
    11e2:	9d 81       	ldd	r25, Y+5	; 0x05
    11e4:	83 30       	cpi	r24, 0x03	; 3
    11e6:	91 05       	cpc	r25, r1
    11e8:	b9 f1       	breq	.+110    	; 0x1258 <DIO_PIN_READ+0xbe>
    11ea:	47 c0       	rjmp	.+142    	; 0x127a <DIO_PIN_READ+0xe0>
		{
		case DIO_PORTA:
			x = GET_BIT(PINA, pin);
    11ec:	e9 e3       	ldi	r30, 0x39	; 57
    11ee:	f0 e0       	ldi	r31, 0x00	; 0
    11f0:	80 81       	ld	r24, Z
    11f2:	28 2f       	mov	r18, r24
    11f4:	30 e0       	ldi	r19, 0x00	; 0
    11f6:	8b 81       	ldd	r24, Y+3	; 0x03
    11f8:	88 2f       	mov	r24, r24
    11fa:	90 e0       	ldi	r25, 0x00	; 0
    11fc:	a9 01       	movw	r20, r18
    11fe:	02 c0       	rjmp	.+4      	; 0x1204 <DIO_PIN_READ+0x6a>
    1200:	55 95       	asr	r21
    1202:	47 95       	ror	r20
    1204:	8a 95       	dec	r24
    1206:	e2 f7       	brpl	.-8      	; 0x1200 <DIO_PIN_READ+0x66>
    1208:	ca 01       	movw	r24, r20
    120a:	81 70       	andi	r24, 0x01	; 1
    120c:	89 83       	std	Y+1, r24	; 0x01
    120e:	35 c0       	rjmp	.+106    	; 0x127a <DIO_PIN_READ+0xe0>
			break;
		case DIO_PORTB:
			x = GET_BIT(PINB, pin);
    1210:	e6 e3       	ldi	r30, 0x36	; 54
    1212:	f0 e0       	ldi	r31, 0x00	; 0
    1214:	80 81       	ld	r24, Z
    1216:	28 2f       	mov	r18, r24
    1218:	30 e0       	ldi	r19, 0x00	; 0
    121a:	8b 81       	ldd	r24, Y+3	; 0x03
    121c:	88 2f       	mov	r24, r24
    121e:	90 e0       	ldi	r25, 0x00	; 0
    1220:	a9 01       	movw	r20, r18
    1222:	02 c0       	rjmp	.+4      	; 0x1228 <DIO_PIN_READ+0x8e>
    1224:	55 95       	asr	r21
    1226:	47 95       	ror	r20
    1228:	8a 95       	dec	r24
    122a:	e2 f7       	brpl	.-8      	; 0x1224 <DIO_PIN_READ+0x8a>
    122c:	ca 01       	movw	r24, r20
    122e:	81 70       	andi	r24, 0x01	; 1
    1230:	89 83       	std	Y+1, r24	; 0x01
    1232:	23 c0       	rjmp	.+70     	; 0x127a <DIO_PIN_READ+0xe0>
			break;
		case DIO_PORTC:
			x = GET_BIT(PINC, pin);
    1234:	e3 e3       	ldi	r30, 0x33	; 51
    1236:	f0 e0       	ldi	r31, 0x00	; 0
    1238:	80 81       	ld	r24, Z
    123a:	28 2f       	mov	r18, r24
    123c:	30 e0       	ldi	r19, 0x00	; 0
    123e:	8b 81       	ldd	r24, Y+3	; 0x03
    1240:	88 2f       	mov	r24, r24
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	a9 01       	movw	r20, r18
    1246:	02 c0       	rjmp	.+4      	; 0x124c <DIO_PIN_READ+0xb2>
    1248:	55 95       	asr	r21
    124a:	47 95       	ror	r20
    124c:	8a 95       	dec	r24
    124e:	e2 f7       	brpl	.-8      	; 0x1248 <DIO_PIN_READ+0xae>
    1250:	ca 01       	movw	r24, r20
    1252:	81 70       	andi	r24, 0x01	; 1
    1254:	89 83       	std	Y+1, r24	; 0x01
    1256:	11 c0       	rjmp	.+34     	; 0x127a <DIO_PIN_READ+0xe0>
			break;
		case DIO_PORTD:
			x = GET_BIT(PIND, pin);
    1258:	e0 e3       	ldi	r30, 0x30	; 48
    125a:	f0 e0       	ldi	r31, 0x00	; 0
    125c:	80 81       	ld	r24, Z
    125e:	28 2f       	mov	r18, r24
    1260:	30 e0       	ldi	r19, 0x00	; 0
    1262:	8b 81       	ldd	r24, Y+3	; 0x03
    1264:	88 2f       	mov	r24, r24
    1266:	90 e0       	ldi	r25, 0x00	; 0
    1268:	a9 01       	movw	r20, r18
    126a:	02 c0       	rjmp	.+4      	; 0x1270 <DIO_PIN_READ+0xd6>
    126c:	55 95       	asr	r21
    126e:	47 95       	ror	r20
    1270:	8a 95       	dec	r24
    1272:	e2 f7       	brpl	.-8      	; 0x126c <DIO_PIN_READ+0xd2>
    1274:	ca 01       	movw	r24, r20
    1276:	81 70       	andi	r24, 0x01	; 1
    1278:	89 83       	std	Y+1, r24	; 0x01
			break;
	}
	return x ;
    127a:	89 81       	ldd	r24, Y+1	; 0x01
}
    127c:	0f 90       	pop	r0
    127e:	0f 90       	pop	r0
    1280:	0f 90       	pop	r0
    1282:	0f 90       	pop	r0
    1284:	0f 90       	pop	r0
    1286:	cf 91       	pop	r28
    1288:	df 91       	pop	r29
    128a:	08 95       	ret

0000128c <S_SEG_INIT>:
#include "DIO.h"
#define F_CPU 8000000UL
#include <util/delay.h>

void S_SEG_INIT()
{
    128c:	df 93       	push	r29
    128e:	cf 93       	push	r28
    1290:	cd b7       	in	r28, 0x3d	; 61
    1292:	de b7       	in	r29, 0x3e	; 62
	DIO_PORT_DIRECTION(S_SEG_PORT,0xff);
    1294:	82 e0       	ldi	r24, 0x02	; 2
    1296:	6f ef       	ldi	r22, 0xFF	; 255
    1298:	0e 94 4b 08 	call	0x1096	; 0x1096 <DIO_PORT_DIRECTION>
	DIO_PIN_DIRECTION(S_SEG_1_EN_PORT,S_SEG_1_EN_PIN,OUTPUT);
    129c:	81 e0       	ldi	r24, 0x01	; 1
    129e:	66 e0       	ldi	r22, 0x06	; 6
    12a0:	41 e0       	ldi	r20, 0x01	; 1
    12a2:	0e 94 be 05 	call	0xb7c	; 0xb7c <DIO_PIN_DIRECTION>
	DIO_PIN_DIRECTION(S_SEG_2_EN_PORT,S_SEG_2_EN_PIN,OUTPUT);
    12a6:	81 e0       	ldi	r24, 0x01	; 1
    12a8:	67 e0       	ldi	r22, 0x07	; 7
    12aa:	41 e0       	ldi	r20, 0x01	; 1
    12ac:	0e 94 be 05 	call	0xb7c	; 0xb7c <DIO_PIN_DIRECTION>

}
    12b0:	cf 91       	pop	r28
    12b2:	df 91       	pop	r29
    12b4:	08 95       	ret

000012b6 <S_SEG_WRITE_INT>:
void S_SEG_WRITE_INT(u8 num)
{
    12b6:	df 93       	push	r29
    12b8:	cf 93       	push	r28
    12ba:	cd b7       	in	r28, 0x3d	; 61
    12bc:	de b7       	in	r29, 0x3e	; 62
    12be:	a3 97       	sbiw	r28, 0x23	; 35
    12c0:	0f b6       	in	r0, 0x3f	; 63
    12c2:	f8 94       	cli
    12c4:	de bf       	out	0x3e, r29	; 62
    12c6:	0f be       	out	0x3f, r0	; 63
    12c8:	cd bf       	out	0x3d, r28	; 61
    12ca:	8f 8f       	std	Y+31, r24	; 0x1f
	u8 l_num = num / 10;
    12cc:	8f 8d       	ldd	r24, Y+31	; 0x1f
    12ce:	9a e0       	ldi	r25, 0x0A	; 10
    12d0:	69 2f       	mov	r22, r25
    12d2:	0e 94 0f 17 	call	0x2e1e	; 0x2e1e <__udivmodqi4>
    12d6:	8e 8f       	std	Y+30, r24	; 0x1e
	u8 r_num = num % 10;
    12d8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    12da:	9a e0       	ldi	r25, 0x0A	; 10
    12dc:	69 2f       	mov	r22, r25
    12de:	0e 94 0f 17 	call	0x2e1e	; 0x2e1e <__udivmodqi4>
    12e2:	89 2f       	mov	r24, r25
    12e4:	8d 8f       	std	Y+29, r24	; 0x1d

	DIO_PIN_WRITE(S_SEG_1_EN_PORT,S_SEG_1_EN_PIN,HIGH);
    12e6:	81 e0       	ldi	r24, 0x01	; 1
    12e8:	66 e0       	ldi	r22, 0x06	; 6
    12ea:	41 e0       	ldi	r20, 0x01	; 1
    12ec:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
	DIO_PIN_WRITE(S_SEG_2_EN_PORT,S_SEG_2_EN_PIN,LOW);
    12f0:	81 e0       	ldi	r24, 0x01	; 1
    12f2:	67 e0       	ldi	r22, 0x07	; 7
    12f4:	40 e0       	ldi	r20, 0x00	; 0
    12f6:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>

	switch(l_num)
    12fa:	8e 8d       	ldd	r24, Y+30	; 0x1e
    12fc:	28 2f       	mov	r18, r24
    12fe:	30 e0       	ldi	r19, 0x00	; 0
    1300:	3b a3       	std	Y+35, r19	; 0x23
    1302:	2a a3       	std	Y+34, r18	; 0x22
    1304:	8a a1       	ldd	r24, Y+34	; 0x22
    1306:	9b a1       	ldd	r25, Y+35	; 0x23
    1308:	84 30       	cpi	r24, 0x04	; 4
    130a:	91 05       	cpc	r25, r1
    130c:	09 f4       	brne	.+2      	; 0x1310 <S_SEG_WRITE_INT+0x5a>
    130e:	d7 c0       	rjmp	.+430    	; 0x14be <S_SEG_WRITE_INT+0x208>
    1310:	2a a1       	ldd	r18, Y+34	; 0x22
    1312:	3b a1       	ldd	r19, Y+35	; 0x23
    1314:	25 30       	cpi	r18, 0x05	; 5
    1316:	31 05       	cpc	r19, r1
    1318:	ec f4       	brge	.+58     	; 0x1354 <S_SEG_WRITE_INT+0x9e>
    131a:	8a a1       	ldd	r24, Y+34	; 0x22
    131c:	9b a1       	ldd	r25, Y+35	; 0x23
    131e:	81 30       	cpi	r24, 0x01	; 1
    1320:	91 05       	cpc	r25, r1
    1322:	09 f4       	brne	.+2      	; 0x1326 <S_SEG_WRITE_INT+0x70>
    1324:	60 c0       	rjmp	.+192    	; 0x13e6 <S_SEG_WRITE_INT+0x130>
    1326:	2a a1       	ldd	r18, Y+34	; 0x22
    1328:	3b a1       	ldd	r19, Y+35	; 0x23
    132a:	22 30       	cpi	r18, 0x02	; 2
    132c:	31 05       	cpc	r19, r1
    132e:	2c f4       	brge	.+10     	; 0x133a <S_SEG_WRITE_INT+0x84>
    1330:	8a a1       	ldd	r24, Y+34	; 0x22
    1332:	9b a1       	ldd	r25, Y+35	; 0x23
    1334:	00 97       	sbiw	r24, 0x00	; 0
    1336:	99 f1       	breq	.+102    	; 0x139e <S_SEG_WRITE_INT+0xe8>
    1338:	99 c1       	rjmp	.+818    	; 0x166c <S_SEG_WRITE_INT+0x3b6>
    133a:	2a a1       	ldd	r18, Y+34	; 0x22
    133c:	3b a1       	ldd	r19, Y+35	; 0x23
    133e:	22 30       	cpi	r18, 0x02	; 2
    1340:	31 05       	cpc	r19, r1
    1342:	09 f4       	brne	.+2      	; 0x1346 <S_SEG_WRITE_INT+0x90>
    1344:	74 c0       	rjmp	.+232    	; 0x142e <S_SEG_WRITE_INT+0x178>
    1346:	8a a1       	ldd	r24, Y+34	; 0x22
    1348:	9b a1       	ldd	r25, Y+35	; 0x23
    134a:	83 30       	cpi	r24, 0x03	; 3
    134c:	91 05       	cpc	r25, r1
    134e:	09 f4       	brne	.+2      	; 0x1352 <S_SEG_WRITE_INT+0x9c>
    1350:	92 c0       	rjmp	.+292    	; 0x1476 <S_SEG_WRITE_INT+0x1c0>
    1352:	8c c1       	rjmp	.+792    	; 0x166c <S_SEG_WRITE_INT+0x3b6>
    1354:	2a a1       	ldd	r18, Y+34	; 0x22
    1356:	3b a1       	ldd	r19, Y+35	; 0x23
    1358:	27 30       	cpi	r18, 0x07	; 7
    135a:	31 05       	cpc	r19, r1
    135c:	09 f4       	brne	.+2      	; 0x1360 <S_SEG_WRITE_INT+0xaa>
    135e:	1b c1       	rjmp	.+566    	; 0x1596 <S_SEG_WRITE_INT+0x2e0>
    1360:	8a a1       	ldd	r24, Y+34	; 0x22
    1362:	9b a1       	ldd	r25, Y+35	; 0x23
    1364:	88 30       	cpi	r24, 0x08	; 8
    1366:	91 05       	cpc	r25, r1
    1368:	6c f4       	brge	.+26     	; 0x1384 <S_SEG_WRITE_INT+0xce>
    136a:	2a a1       	ldd	r18, Y+34	; 0x22
    136c:	3b a1       	ldd	r19, Y+35	; 0x23
    136e:	25 30       	cpi	r18, 0x05	; 5
    1370:	31 05       	cpc	r19, r1
    1372:	09 f4       	brne	.+2      	; 0x1376 <S_SEG_WRITE_INT+0xc0>
    1374:	c8 c0       	rjmp	.+400    	; 0x1506 <S_SEG_WRITE_INT+0x250>
    1376:	8a a1       	ldd	r24, Y+34	; 0x22
    1378:	9b a1       	ldd	r25, Y+35	; 0x23
    137a:	86 30       	cpi	r24, 0x06	; 6
    137c:	91 05       	cpc	r25, r1
    137e:	09 f4       	brne	.+2      	; 0x1382 <S_SEG_WRITE_INT+0xcc>
    1380:	e6 c0       	rjmp	.+460    	; 0x154e <S_SEG_WRITE_INT+0x298>
    1382:	74 c1       	rjmp	.+744    	; 0x166c <S_SEG_WRITE_INT+0x3b6>
    1384:	2a a1       	ldd	r18, Y+34	; 0x22
    1386:	3b a1       	ldd	r19, Y+35	; 0x23
    1388:	28 30       	cpi	r18, 0x08	; 8
    138a:	31 05       	cpc	r19, r1
    138c:	09 f4       	brne	.+2      	; 0x1390 <S_SEG_WRITE_INT+0xda>
    138e:	27 c1       	rjmp	.+590    	; 0x15de <S_SEG_WRITE_INT+0x328>
    1390:	8a a1       	ldd	r24, Y+34	; 0x22
    1392:	9b a1       	ldd	r25, Y+35	; 0x23
    1394:	89 30       	cpi	r24, 0x09	; 9
    1396:	91 05       	cpc	r25, r1
    1398:	09 f4       	brne	.+2      	; 0x139c <S_SEG_WRITE_INT+0xe6>
    139a:	45 c1       	rjmp	.+650    	; 0x1626 <S_SEG_WRITE_INT+0x370>
    139c:	67 c1       	rjmp	.+718    	; 0x166c <S_SEG_WRITE_INT+0x3b6>
	{
	case 0 :
		DIO_PIN_WRITE(S_SEG_PORT,0,HIGH);
    139e:	82 e0       	ldi	r24, 0x02	; 2
    13a0:	60 e0       	ldi	r22, 0x00	; 0
    13a2:	41 e0       	ldi	r20, 0x01	; 1
    13a4:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,1,HIGH);
    13a8:	82 e0       	ldi	r24, 0x02	; 2
    13aa:	61 e0       	ldi	r22, 0x01	; 1
    13ac:	41 e0       	ldi	r20, 0x01	; 1
    13ae:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,2,HIGH);
    13b2:	82 e0       	ldi	r24, 0x02	; 2
    13b4:	62 e0       	ldi	r22, 0x02	; 2
    13b6:	41 e0       	ldi	r20, 0x01	; 1
    13b8:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,3,HIGH);
    13bc:	82 e0       	ldi	r24, 0x02	; 2
    13be:	63 e0       	ldi	r22, 0x03	; 3
    13c0:	41 e0       	ldi	r20, 0x01	; 1
    13c2:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,4,HIGH);
    13c6:	82 e0       	ldi	r24, 0x02	; 2
    13c8:	64 e0       	ldi	r22, 0x04	; 4
    13ca:	41 e0       	ldi	r20, 0x01	; 1
    13cc:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,5,HIGH);
    13d0:	82 e0       	ldi	r24, 0x02	; 2
    13d2:	65 e0       	ldi	r22, 0x05	; 5
    13d4:	41 e0       	ldi	r20, 0x01	; 1
    13d6:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,6,LOW);
    13da:	82 e0       	ldi	r24, 0x02	; 2
    13dc:	66 e0       	ldi	r22, 0x06	; 6
    13de:	40 e0       	ldi	r20, 0x00	; 0
    13e0:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    13e4:	43 c1       	rjmp	.+646    	; 0x166c <S_SEG_WRITE_INT+0x3b6>
		break;
	case 1 :
		DIO_PIN_WRITE(S_SEG_PORT,0,LOW);
    13e6:	82 e0       	ldi	r24, 0x02	; 2
    13e8:	60 e0       	ldi	r22, 0x00	; 0
    13ea:	40 e0       	ldi	r20, 0x00	; 0
    13ec:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,1,HIGH);
    13f0:	82 e0       	ldi	r24, 0x02	; 2
    13f2:	61 e0       	ldi	r22, 0x01	; 1
    13f4:	41 e0       	ldi	r20, 0x01	; 1
    13f6:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,2,HIGH);
    13fa:	82 e0       	ldi	r24, 0x02	; 2
    13fc:	62 e0       	ldi	r22, 0x02	; 2
    13fe:	41 e0       	ldi	r20, 0x01	; 1
    1400:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,3,LOW);
    1404:	82 e0       	ldi	r24, 0x02	; 2
    1406:	63 e0       	ldi	r22, 0x03	; 3
    1408:	40 e0       	ldi	r20, 0x00	; 0
    140a:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,4,LOW);
    140e:	82 e0       	ldi	r24, 0x02	; 2
    1410:	64 e0       	ldi	r22, 0x04	; 4
    1412:	40 e0       	ldi	r20, 0x00	; 0
    1414:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,5,LOW);
    1418:	82 e0       	ldi	r24, 0x02	; 2
    141a:	65 e0       	ldi	r22, 0x05	; 5
    141c:	40 e0       	ldi	r20, 0x00	; 0
    141e:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,6,LOW);
    1422:	82 e0       	ldi	r24, 0x02	; 2
    1424:	66 e0       	ldi	r22, 0x06	; 6
    1426:	40 e0       	ldi	r20, 0x00	; 0
    1428:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    142c:	1f c1       	rjmp	.+574    	; 0x166c <S_SEG_WRITE_INT+0x3b6>
		break;
	case 2 :
		DIO_PIN_WRITE(S_SEG_PORT,0,HIGH);
    142e:	82 e0       	ldi	r24, 0x02	; 2
    1430:	60 e0       	ldi	r22, 0x00	; 0
    1432:	41 e0       	ldi	r20, 0x01	; 1
    1434:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,1,HIGH);
    1438:	82 e0       	ldi	r24, 0x02	; 2
    143a:	61 e0       	ldi	r22, 0x01	; 1
    143c:	41 e0       	ldi	r20, 0x01	; 1
    143e:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,2,LOW);
    1442:	82 e0       	ldi	r24, 0x02	; 2
    1444:	62 e0       	ldi	r22, 0x02	; 2
    1446:	40 e0       	ldi	r20, 0x00	; 0
    1448:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,3,HIGH);
    144c:	82 e0       	ldi	r24, 0x02	; 2
    144e:	63 e0       	ldi	r22, 0x03	; 3
    1450:	41 e0       	ldi	r20, 0x01	; 1
    1452:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,4,HIGH);
    1456:	82 e0       	ldi	r24, 0x02	; 2
    1458:	64 e0       	ldi	r22, 0x04	; 4
    145a:	41 e0       	ldi	r20, 0x01	; 1
    145c:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,5,LOW);
    1460:	82 e0       	ldi	r24, 0x02	; 2
    1462:	65 e0       	ldi	r22, 0x05	; 5
    1464:	40 e0       	ldi	r20, 0x00	; 0
    1466:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,6,HIGH);
    146a:	82 e0       	ldi	r24, 0x02	; 2
    146c:	66 e0       	ldi	r22, 0x06	; 6
    146e:	41 e0       	ldi	r20, 0x01	; 1
    1470:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    1474:	fb c0       	rjmp	.+502    	; 0x166c <S_SEG_WRITE_INT+0x3b6>
		break;
	case 3 :
		DIO_PIN_WRITE(S_SEG_PORT,0,HIGH);
    1476:	82 e0       	ldi	r24, 0x02	; 2
    1478:	60 e0       	ldi	r22, 0x00	; 0
    147a:	41 e0       	ldi	r20, 0x01	; 1
    147c:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,1,HIGH);
    1480:	82 e0       	ldi	r24, 0x02	; 2
    1482:	61 e0       	ldi	r22, 0x01	; 1
    1484:	41 e0       	ldi	r20, 0x01	; 1
    1486:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,2,HIGH);
    148a:	82 e0       	ldi	r24, 0x02	; 2
    148c:	62 e0       	ldi	r22, 0x02	; 2
    148e:	41 e0       	ldi	r20, 0x01	; 1
    1490:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,3,HIGH);
    1494:	82 e0       	ldi	r24, 0x02	; 2
    1496:	63 e0       	ldi	r22, 0x03	; 3
    1498:	41 e0       	ldi	r20, 0x01	; 1
    149a:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,4,LOW);
    149e:	82 e0       	ldi	r24, 0x02	; 2
    14a0:	64 e0       	ldi	r22, 0x04	; 4
    14a2:	40 e0       	ldi	r20, 0x00	; 0
    14a4:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,5,LOW);
    14a8:	82 e0       	ldi	r24, 0x02	; 2
    14aa:	65 e0       	ldi	r22, 0x05	; 5
    14ac:	40 e0       	ldi	r20, 0x00	; 0
    14ae:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,6,HIGH);
    14b2:	82 e0       	ldi	r24, 0x02	; 2
    14b4:	66 e0       	ldi	r22, 0x06	; 6
    14b6:	41 e0       	ldi	r20, 0x01	; 1
    14b8:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    14bc:	d7 c0       	rjmp	.+430    	; 0x166c <S_SEG_WRITE_INT+0x3b6>
		break;
	case 4 :
		DIO_PIN_WRITE(S_SEG_PORT,0,LOW);
    14be:	82 e0       	ldi	r24, 0x02	; 2
    14c0:	60 e0       	ldi	r22, 0x00	; 0
    14c2:	40 e0       	ldi	r20, 0x00	; 0
    14c4:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,1,HIGH);
    14c8:	82 e0       	ldi	r24, 0x02	; 2
    14ca:	61 e0       	ldi	r22, 0x01	; 1
    14cc:	41 e0       	ldi	r20, 0x01	; 1
    14ce:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,2,HIGH);
    14d2:	82 e0       	ldi	r24, 0x02	; 2
    14d4:	62 e0       	ldi	r22, 0x02	; 2
    14d6:	41 e0       	ldi	r20, 0x01	; 1
    14d8:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,3,LOW);
    14dc:	82 e0       	ldi	r24, 0x02	; 2
    14de:	63 e0       	ldi	r22, 0x03	; 3
    14e0:	40 e0       	ldi	r20, 0x00	; 0
    14e2:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,4,LOW);
    14e6:	82 e0       	ldi	r24, 0x02	; 2
    14e8:	64 e0       	ldi	r22, 0x04	; 4
    14ea:	40 e0       	ldi	r20, 0x00	; 0
    14ec:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,5,HIGH);
    14f0:	82 e0       	ldi	r24, 0x02	; 2
    14f2:	65 e0       	ldi	r22, 0x05	; 5
    14f4:	41 e0       	ldi	r20, 0x01	; 1
    14f6:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,6,HIGH);
    14fa:	82 e0       	ldi	r24, 0x02	; 2
    14fc:	66 e0       	ldi	r22, 0x06	; 6
    14fe:	41 e0       	ldi	r20, 0x01	; 1
    1500:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    1504:	b3 c0       	rjmp	.+358    	; 0x166c <S_SEG_WRITE_INT+0x3b6>
		break;
	case 5 :
		DIO_PIN_WRITE(S_SEG_PORT,0,HIGH);
    1506:	82 e0       	ldi	r24, 0x02	; 2
    1508:	60 e0       	ldi	r22, 0x00	; 0
    150a:	41 e0       	ldi	r20, 0x01	; 1
    150c:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,1,LOW);
    1510:	82 e0       	ldi	r24, 0x02	; 2
    1512:	61 e0       	ldi	r22, 0x01	; 1
    1514:	40 e0       	ldi	r20, 0x00	; 0
    1516:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,2,HIGH);
    151a:	82 e0       	ldi	r24, 0x02	; 2
    151c:	62 e0       	ldi	r22, 0x02	; 2
    151e:	41 e0       	ldi	r20, 0x01	; 1
    1520:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,3,HIGH);
    1524:	82 e0       	ldi	r24, 0x02	; 2
    1526:	63 e0       	ldi	r22, 0x03	; 3
    1528:	41 e0       	ldi	r20, 0x01	; 1
    152a:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,4,LOW);
    152e:	82 e0       	ldi	r24, 0x02	; 2
    1530:	64 e0       	ldi	r22, 0x04	; 4
    1532:	40 e0       	ldi	r20, 0x00	; 0
    1534:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,5,HIGH);
    1538:	82 e0       	ldi	r24, 0x02	; 2
    153a:	65 e0       	ldi	r22, 0x05	; 5
    153c:	41 e0       	ldi	r20, 0x01	; 1
    153e:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,6,HIGH);
    1542:	82 e0       	ldi	r24, 0x02	; 2
    1544:	66 e0       	ldi	r22, 0x06	; 6
    1546:	41 e0       	ldi	r20, 0x01	; 1
    1548:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    154c:	8f c0       	rjmp	.+286    	; 0x166c <S_SEG_WRITE_INT+0x3b6>
		break;
	case 6 :
		DIO_PIN_WRITE(S_SEG_PORT,0,HIGH);
    154e:	82 e0       	ldi	r24, 0x02	; 2
    1550:	60 e0       	ldi	r22, 0x00	; 0
    1552:	41 e0       	ldi	r20, 0x01	; 1
    1554:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,1,LOW);
    1558:	82 e0       	ldi	r24, 0x02	; 2
    155a:	61 e0       	ldi	r22, 0x01	; 1
    155c:	40 e0       	ldi	r20, 0x00	; 0
    155e:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,2,HIGH);
    1562:	82 e0       	ldi	r24, 0x02	; 2
    1564:	62 e0       	ldi	r22, 0x02	; 2
    1566:	41 e0       	ldi	r20, 0x01	; 1
    1568:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,3,HIGH);
    156c:	82 e0       	ldi	r24, 0x02	; 2
    156e:	63 e0       	ldi	r22, 0x03	; 3
    1570:	41 e0       	ldi	r20, 0x01	; 1
    1572:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,4,HIGH);
    1576:	82 e0       	ldi	r24, 0x02	; 2
    1578:	64 e0       	ldi	r22, 0x04	; 4
    157a:	41 e0       	ldi	r20, 0x01	; 1
    157c:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,5,HIGH);
    1580:	82 e0       	ldi	r24, 0x02	; 2
    1582:	65 e0       	ldi	r22, 0x05	; 5
    1584:	41 e0       	ldi	r20, 0x01	; 1
    1586:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,6,HIGH);
    158a:	82 e0       	ldi	r24, 0x02	; 2
    158c:	66 e0       	ldi	r22, 0x06	; 6
    158e:	41 e0       	ldi	r20, 0x01	; 1
    1590:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    1594:	6b c0       	rjmp	.+214    	; 0x166c <S_SEG_WRITE_INT+0x3b6>
		break;
	case 7 :
		DIO_PIN_WRITE(S_SEG_PORT,0,HIGH);
    1596:	82 e0       	ldi	r24, 0x02	; 2
    1598:	60 e0       	ldi	r22, 0x00	; 0
    159a:	41 e0       	ldi	r20, 0x01	; 1
    159c:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,1,HIGH);
    15a0:	82 e0       	ldi	r24, 0x02	; 2
    15a2:	61 e0       	ldi	r22, 0x01	; 1
    15a4:	41 e0       	ldi	r20, 0x01	; 1
    15a6:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,2,HIGH);
    15aa:	82 e0       	ldi	r24, 0x02	; 2
    15ac:	62 e0       	ldi	r22, 0x02	; 2
    15ae:	41 e0       	ldi	r20, 0x01	; 1
    15b0:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,3,LOW);
    15b4:	82 e0       	ldi	r24, 0x02	; 2
    15b6:	63 e0       	ldi	r22, 0x03	; 3
    15b8:	40 e0       	ldi	r20, 0x00	; 0
    15ba:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,4,LOW);
    15be:	82 e0       	ldi	r24, 0x02	; 2
    15c0:	64 e0       	ldi	r22, 0x04	; 4
    15c2:	40 e0       	ldi	r20, 0x00	; 0
    15c4:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,5,LOW);
    15c8:	82 e0       	ldi	r24, 0x02	; 2
    15ca:	65 e0       	ldi	r22, 0x05	; 5
    15cc:	40 e0       	ldi	r20, 0x00	; 0
    15ce:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,6,LOW);
    15d2:	82 e0       	ldi	r24, 0x02	; 2
    15d4:	66 e0       	ldi	r22, 0x06	; 6
    15d6:	40 e0       	ldi	r20, 0x00	; 0
    15d8:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    15dc:	47 c0       	rjmp	.+142    	; 0x166c <S_SEG_WRITE_INT+0x3b6>
		break;
	case 8 :
		DIO_PIN_WRITE(S_SEG_PORT,0,HIGH);
    15de:	82 e0       	ldi	r24, 0x02	; 2
    15e0:	60 e0       	ldi	r22, 0x00	; 0
    15e2:	41 e0       	ldi	r20, 0x01	; 1
    15e4:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,1,HIGH);
    15e8:	82 e0       	ldi	r24, 0x02	; 2
    15ea:	61 e0       	ldi	r22, 0x01	; 1
    15ec:	41 e0       	ldi	r20, 0x01	; 1
    15ee:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,2,HIGH);
    15f2:	82 e0       	ldi	r24, 0x02	; 2
    15f4:	62 e0       	ldi	r22, 0x02	; 2
    15f6:	41 e0       	ldi	r20, 0x01	; 1
    15f8:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,3,HIGH);
    15fc:	82 e0       	ldi	r24, 0x02	; 2
    15fe:	63 e0       	ldi	r22, 0x03	; 3
    1600:	41 e0       	ldi	r20, 0x01	; 1
    1602:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,4,HIGH);
    1606:	82 e0       	ldi	r24, 0x02	; 2
    1608:	64 e0       	ldi	r22, 0x04	; 4
    160a:	41 e0       	ldi	r20, 0x01	; 1
    160c:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,5,HIGH);
    1610:	82 e0       	ldi	r24, 0x02	; 2
    1612:	65 e0       	ldi	r22, 0x05	; 5
    1614:	41 e0       	ldi	r20, 0x01	; 1
    1616:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,6,HIGH);
    161a:	82 e0       	ldi	r24, 0x02	; 2
    161c:	66 e0       	ldi	r22, 0x06	; 6
    161e:	41 e0       	ldi	r20, 0x01	; 1
    1620:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    1624:	23 c0       	rjmp	.+70     	; 0x166c <S_SEG_WRITE_INT+0x3b6>
		break;
	case 9 :
		DIO_PIN_WRITE(S_SEG_PORT,0,HIGH);
    1626:	82 e0       	ldi	r24, 0x02	; 2
    1628:	60 e0       	ldi	r22, 0x00	; 0
    162a:	41 e0       	ldi	r20, 0x01	; 1
    162c:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,1,HIGH);
    1630:	82 e0       	ldi	r24, 0x02	; 2
    1632:	61 e0       	ldi	r22, 0x01	; 1
    1634:	41 e0       	ldi	r20, 0x01	; 1
    1636:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,2,HIGH);
    163a:	82 e0       	ldi	r24, 0x02	; 2
    163c:	62 e0       	ldi	r22, 0x02	; 2
    163e:	41 e0       	ldi	r20, 0x01	; 1
    1640:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,3,HIGH);
    1644:	82 e0       	ldi	r24, 0x02	; 2
    1646:	63 e0       	ldi	r22, 0x03	; 3
    1648:	41 e0       	ldi	r20, 0x01	; 1
    164a:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,4,LOW);
    164e:	82 e0       	ldi	r24, 0x02	; 2
    1650:	64 e0       	ldi	r22, 0x04	; 4
    1652:	40 e0       	ldi	r20, 0x00	; 0
    1654:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,5,HIGH);
    1658:	82 e0       	ldi	r24, 0x02	; 2
    165a:	65 e0       	ldi	r22, 0x05	; 5
    165c:	41 e0       	ldi	r20, 0x01	; 1
    165e:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,6,HIGH);
    1662:	82 e0       	ldi	r24, 0x02	; 2
    1664:	66 e0       	ldi	r22, 0x06	; 6
    1666:	41 e0       	ldi	r20, 0x01	; 1
    1668:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    166c:	80 e0       	ldi	r24, 0x00	; 0
    166e:	90 e0       	ldi	r25, 0x00	; 0
    1670:	a0 ea       	ldi	r26, 0xA0	; 160
    1672:	b0 e4       	ldi	r27, 0x40	; 64
    1674:	89 8f       	std	Y+25, r24	; 0x19
    1676:	9a 8f       	std	Y+26, r25	; 0x1a
    1678:	ab 8f       	std	Y+27, r26	; 0x1b
    167a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    167c:	69 8d       	ldd	r22, Y+25	; 0x19
    167e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1680:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1682:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1684:	20 e0       	ldi	r18, 0x00	; 0
    1686:	30 e0       	ldi	r19, 0x00	; 0
    1688:	4a ef       	ldi	r20, 0xFA	; 250
    168a:	54 e4       	ldi	r21, 0x44	; 68
    168c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1690:	dc 01       	movw	r26, r24
    1692:	cb 01       	movw	r24, r22
    1694:	8d 8b       	std	Y+21, r24	; 0x15
    1696:	9e 8b       	std	Y+22, r25	; 0x16
    1698:	af 8b       	std	Y+23, r26	; 0x17
    169a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    169c:	6d 89       	ldd	r22, Y+21	; 0x15
    169e:	7e 89       	ldd	r23, Y+22	; 0x16
    16a0:	8f 89       	ldd	r24, Y+23	; 0x17
    16a2:	98 8d       	ldd	r25, Y+24	; 0x18
    16a4:	20 e0       	ldi	r18, 0x00	; 0
    16a6:	30 e0       	ldi	r19, 0x00	; 0
    16a8:	40 e8       	ldi	r20, 0x80	; 128
    16aa:	5f e3       	ldi	r21, 0x3F	; 63
    16ac:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    16b0:	88 23       	and	r24, r24
    16b2:	2c f4       	brge	.+10     	; 0x16be <S_SEG_WRITE_INT+0x408>
		__ticks = 1;
    16b4:	81 e0       	ldi	r24, 0x01	; 1
    16b6:	90 e0       	ldi	r25, 0x00	; 0
    16b8:	9c 8b       	std	Y+20, r25	; 0x14
    16ba:	8b 8b       	std	Y+19, r24	; 0x13
    16bc:	3f c0       	rjmp	.+126    	; 0x173c <S_SEG_WRITE_INT+0x486>
	else if (__tmp > 65535)
    16be:	6d 89       	ldd	r22, Y+21	; 0x15
    16c0:	7e 89       	ldd	r23, Y+22	; 0x16
    16c2:	8f 89       	ldd	r24, Y+23	; 0x17
    16c4:	98 8d       	ldd	r25, Y+24	; 0x18
    16c6:	20 e0       	ldi	r18, 0x00	; 0
    16c8:	3f ef       	ldi	r19, 0xFF	; 255
    16ca:	4f e7       	ldi	r20, 0x7F	; 127
    16cc:	57 e4       	ldi	r21, 0x47	; 71
    16ce:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    16d2:	18 16       	cp	r1, r24
    16d4:	4c f5       	brge	.+82     	; 0x1728 <S_SEG_WRITE_INT+0x472>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16d6:	69 8d       	ldd	r22, Y+25	; 0x19
    16d8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    16da:	8b 8d       	ldd	r24, Y+27	; 0x1b
    16dc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    16de:	20 e0       	ldi	r18, 0x00	; 0
    16e0:	30 e0       	ldi	r19, 0x00	; 0
    16e2:	40 e2       	ldi	r20, 0x20	; 32
    16e4:	51 e4       	ldi	r21, 0x41	; 65
    16e6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16ea:	dc 01       	movw	r26, r24
    16ec:	cb 01       	movw	r24, r22
    16ee:	bc 01       	movw	r22, r24
    16f0:	cd 01       	movw	r24, r26
    16f2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    16f6:	dc 01       	movw	r26, r24
    16f8:	cb 01       	movw	r24, r22
    16fa:	9c 8b       	std	Y+20, r25	; 0x14
    16fc:	8b 8b       	std	Y+19, r24	; 0x13
    16fe:	0f c0       	rjmp	.+30     	; 0x171e <S_SEG_WRITE_INT+0x468>
    1700:	88 ec       	ldi	r24, 0xC8	; 200
    1702:	90 e0       	ldi	r25, 0x00	; 0
    1704:	9a 8b       	std	Y+18, r25	; 0x12
    1706:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1708:	89 89       	ldd	r24, Y+17	; 0x11
    170a:	9a 89       	ldd	r25, Y+18	; 0x12
    170c:	01 97       	sbiw	r24, 0x01	; 1
    170e:	f1 f7       	brne	.-4      	; 0x170c <S_SEG_WRITE_INT+0x456>
    1710:	9a 8b       	std	Y+18, r25	; 0x12
    1712:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1714:	8b 89       	ldd	r24, Y+19	; 0x13
    1716:	9c 89       	ldd	r25, Y+20	; 0x14
    1718:	01 97       	sbiw	r24, 0x01	; 1
    171a:	9c 8b       	std	Y+20, r25	; 0x14
    171c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    171e:	8b 89       	ldd	r24, Y+19	; 0x13
    1720:	9c 89       	ldd	r25, Y+20	; 0x14
    1722:	00 97       	sbiw	r24, 0x00	; 0
    1724:	69 f7       	brne	.-38     	; 0x1700 <S_SEG_WRITE_INT+0x44a>
    1726:	14 c0       	rjmp	.+40     	; 0x1750 <S_SEG_WRITE_INT+0x49a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1728:	6d 89       	ldd	r22, Y+21	; 0x15
    172a:	7e 89       	ldd	r23, Y+22	; 0x16
    172c:	8f 89       	ldd	r24, Y+23	; 0x17
    172e:	98 8d       	ldd	r25, Y+24	; 0x18
    1730:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1734:	dc 01       	movw	r26, r24
    1736:	cb 01       	movw	r24, r22
    1738:	9c 8b       	std	Y+20, r25	; 0x14
    173a:	8b 8b       	std	Y+19, r24	; 0x13
    173c:	8b 89       	ldd	r24, Y+19	; 0x13
    173e:	9c 89       	ldd	r25, Y+20	; 0x14
    1740:	98 8b       	std	Y+16, r25	; 0x10
    1742:	8f 87       	std	Y+15, r24	; 0x0f
    1744:	8f 85       	ldd	r24, Y+15	; 0x0f
    1746:	98 89       	ldd	r25, Y+16	; 0x10
    1748:	01 97       	sbiw	r24, 0x01	; 1
    174a:	f1 f7       	brne	.-4      	; 0x1748 <S_SEG_WRITE_INT+0x492>
    174c:	98 8b       	std	Y+16, r25	; 0x10
    174e:	8f 87       	std	Y+15, r24	; 0x0f
		break;
	}
	_delay_ms(5);
	DIO_PIN_WRITE(S_SEG_1_EN_PORT,S_SEG_1_EN_PIN,LOW);
    1750:	81 e0       	ldi	r24, 0x01	; 1
    1752:	66 e0       	ldi	r22, 0x06	; 6
    1754:	40 e0       	ldi	r20, 0x00	; 0
    1756:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
	DIO_PIN_WRITE(S_SEG_2_EN_PORT,S_SEG_2_EN_PIN,HIGH);
    175a:	81 e0       	ldi	r24, 0x01	; 1
    175c:	67 e0       	ldi	r22, 0x07	; 7
    175e:	41 e0       	ldi	r20, 0x01	; 1
    1760:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
	switch(r_num)
    1764:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1766:	28 2f       	mov	r18, r24
    1768:	30 e0       	ldi	r19, 0x00	; 0
    176a:	39 a3       	std	Y+33, r19	; 0x21
    176c:	28 a3       	std	Y+32, r18	; 0x20
    176e:	88 a1       	ldd	r24, Y+32	; 0x20
    1770:	99 a1       	ldd	r25, Y+33	; 0x21
    1772:	84 30       	cpi	r24, 0x04	; 4
    1774:	91 05       	cpc	r25, r1
    1776:	09 f4       	brne	.+2      	; 0x177a <S_SEG_WRITE_INT+0x4c4>
    1778:	d7 c0       	rjmp	.+430    	; 0x1928 <S_SEG_WRITE_INT+0x672>
    177a:	28 a1       	ldd	r18, Y+32	; 0x20
    177c:	39 a1       	ldd	r19, Y+33	; 0x21
    177e:	25 30       	cpi	r18, 0x05	; 5
    1780:	31 05       	cpc	r19, r1
    1782:	ec f4       	brge	.+58     	; 0x17be <S_SEG_WRITE_INT+0x508>
    1784:	88 a1       	ldd	r24, Y+32	; 0x20
    1786:	99 a1       	ldd	r25, Y+33	; 0x21
    1788:	81 30       	cpi	r24, 0x01	; 1
    178a:	91 05       	cpc	r25, r1
    178c:	09 f4       	brne	.+2      	; 0x1790 <S_SEG_WRITE_INT+0x4da>
    178e:	60 c0       	rjmp	.+192    	; 0x1850 <S_SEG_WRITE_INT+0x59a>
    1790:	28 a1       	ldd	r18, Y+32	; 0x20
    1792:	39 a1       	ldd	r19, Y+33	; 0x21
    1794:	22 30       	cpi	r18, 0x02	; 2
    1796:	31 05       	cpc	r19, r1
    1798:	2c f4       	brge	.+10     	; 0x17a4 <S_SEG_WRITE_INT+0x4ee>
    179a:	88 a1       	ldd	r24, Y+32	; 0x20
    179c:	99 a1       	ldd	r25, Y+33	; 0x21
    179e:	00 97       	sbiw	r24, 0x00	; 0
    17a0:	99 f1       	breq	.+102    	; 0x1808 <S_SEG_WRITE_INT+0x552>
    17a2:	99 c1       	rjmp	.+818    	; 0x1ad6 <S_SEG_WRITE_INT+0x820>
    17a4:	28 a1       	ldd	r18, Y+32	; 0x20
    17a6:	39 a1       	ldd	r19, Y+33	; 0x21
    17a8:	22 30       	cpi	r18, 0x02	; 2
    17aa:	31 05       	cpc	r19, r1
    17ac:	09 f4       	brne	.+2      	; 0x17b0 <S_SEG_WRITE_INT+0x4fa>
    17ae:	74 c0       	rjmp	.+232    	; 0x1898 <S_SEG_WRITE_INT+0x5e2>
    17b0:	88 a1       	ldd	r24, Y+32	; 0x20
    17b2:	99 a1       	ldd	r25, Y+33	; 0x21
    17b4:	83 30       	cpi	r24, 0x03	; 3
    17b6:	91 05       	cpc	r25, r1
    17b8:	09 f4       	brne	.+2      	; 0x17bc <S_SEG_WRITE_INT+0x506>
    17ba:	92 c0       	rjmp	.+292    	; 0x18e0 <S_SEG_WRITE_INT+0x62a>
    17bc:	8c c1       	rjmp	.+792    	; 0x1ad6 <S_SEG_WRITE_INT+0x820>
    17be:	28 a1       	ldd	r18, Y+32	; 0x20
    17c0:	39 a1       	ldd	r19, Y+33	; 0x21
    17c2:	27 30       	cpi	r18, 0x07	; 7
    17c4:	31 05       	cpc	r19, r1
    17c6:	09 f4       	brne	.+2      	; 0x17ca <S_SEG_WRITE_INT+0x514>
    17c8:	1b c1       	rjmp	.+566    	; 0x1a00 <S_SEG_WRITE_INT+0x74a>
    17ca:	88 a1       	ldd	r24, Y+32	; 0x20
    17cc:	99 a1       	ldd	r25, Y+33	; 0x21
    17ce:	88 30       	cpi	r24, 0x08	; 8
    17d0:	91 05       	cpc	r25, r1
    17d2:	6c f4       	brge	.+26     	; 0x17ee <S_SEG_WRITE_INT+0x538>
    17d4:	28 a1       	ldd	r18, Y+32	; 0x20
    17d6:	39 a1       	ldd	r19, Y+33	; 0x21
    17d8:	25 30       	cpi	r18, 0x05	; 5
    17da:	31 05       	cpc	r19, r1
    17dc:	09 f4       	brne	.+2      	; 0x17e0 <S_SEG_WRITE_INT+0x52a>
    17de:	c8 c0       	rjmp	.+400    	; 0x1970 <S_SEG_WRITE_INT+0x6ba>
    17e0:	88 a1       	ldd	r24, Y+32	; 0x20
    17e2:	99 a1       	ldd	r25, Y+33	; 0x21
    17e4:	86 30       	cpi	r24, 0x06	; 6
    17e6:	91 05       	cpc	r25, r1
    17e8:	09 f4       	brne	.+2      	; 0x17ec <S_SEG_WRITE_INT+0x536>
    17ea:	e6 c0       	rjmp	.+460    	; 0x19b8 <S_SEG_WRITE_INT+0x702>
    17ec:	74 c1       	rjmp	.+744    	; 0x1ad6 <S_SEG_WRITE_INT+0x820>
    17ee:	28 a1       	ldd	r18, Y+32	; 0x20
    17f0:	39 a1       	ldd	r19, Y+33	; 0x21
    17f2:	28 30       	cpi	r18, 0x08	; 8
    17f4:	31 05       	cpc	r19, r1
    17f6:	09 f4       	brne	.+2      	; 0x17fa <S_SEG_WRITE_INT+0x544>
    17f8:	27 c1       	rjmp	.+590    	; 0x1a48 <S_SEG_WRITE_INT+0x792>
    17fa:	88 a1       	ldd	r24, Y+32	; 0x20
    17fc:	99 a1       	ldd	r25, Y+33	; 0x21
    17fe:	89 30       	cpi	r24, 0x09	; 9
    1800:	91 05       	cpc	r25, r1
    1802:	09 f4       	brne	.+2      	; 0x1806 <S_SEG_WRITE_INT+0x550>
    1804:	45 c1       	rjmp	.+650    	; 0x1a90 <S_SEG_WRITE_INT+0x7da>
    1806:	67 c1       	rjmp	.+718    	; 0x1ad6 <S_SEG_WRITE_INT+0x820>
	{
	case 0 :
		DIO_PIN_WRITE(S_SEG_PORT,0,HIGH);
    1808:	82 e0       	ldi	r24, 0x02	; 2
    180a:	60 e0       	ldi	r22, 0x00	; 0
    180c:	41 e0       	ldi	r20, 0x01	; 1
    180e:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,1,HIGH);
    1812:	82 e0       	ldi	r24, 0x02	; 2
    1814:	61 e0       	ldi	r22, 0x01	; 1
    1816:	41 e0       	ldi	r20, 0x01	; 1
    1818:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,2,HIGH);
    181c:	82 e0       	ldi	r24, 0x02	; 2
    181e:	62 e0       	ldi	r22, 0x02	; 2
    1820:	41 e0       	ldi	r20, 0x01	; 1
    1822:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,3,HIGH);
    1826:	82 e0       	ldi	r24, 0x02	; 2
    1828:	63 e0       	ldi	r22, 0x03	; 3
    182a:	41 e0       	ldi	r20, 0x01	; 1
    182c:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,4,HIGH);
    1830:	82 e0       	ldi	r24, 0x02	; 2
    1832:	64 e0       	ldi	r22, 0x04	; 4
    1834:	41 e0       	ldi	r20, 0x01	; 1
    1836:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,5,HIGH);
    183a:	82 e0       	ldi	r24, 0x02	; 2
    183c:	65 e0       	ldi	r22, 0x05	; 5
    183e:	41 e0       	ldi	r20, 0x01	; 1
    1840:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,6,LOW);
    1844:	82 e0       	ldi	r24, 0x02	; 2
    1846:	66 e0       	ldi	r22, 0x06	; 6
    1848:	40 e0       	ldi	r20, 0x00	; 0
    184a:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    184e:	43 c1       	rjmp	.+646    	; 0x1ad6 <S_SEG_WRITE_INT+0x820>
		break;
	case 1 :
		DIO_PIN_WRITE(S_SEG_PORT,0,LOW);
    1850:	82 e0       	ldi	r24, 0x02	; 2
    1852:	60 e0       	ldi	r22, 0x00	; 0
    1854:	40 e0       	ldi	r20, 0x00	; 0
    1856:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,1,HIGH);
    185a:	82 e0       	ldi	r24, 0x02	; 2
    185c:	61 e0       	ldi	r22, 0x01	; 1
    185e:	41 e0       	ldi	r20, 0x01	; 1
    1860:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,2,HIGH);
    1864:	82 e0       	ldi	r24, 0x02	; 2
    1866:	62 e0       	ldi	r22, 0x02	; 2
    1868:	41 e0       	ldi	r20, 0x01	; 1
    186a:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,3,LOW);
    186e:	82 e0       	ldi	r24, 0x02	; 2
    1870:	63 e0       	ldi	r22, 0x03	; 3
    1872:	40 e0       	ldi	r20, 0x00	; 0
    1874:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,4,LOW);
    1878:	82 e0       	ldi	r24, 0x02	; 2
    187a:	64 e0       	ldi	r22, 0x04	; 4
    187c:	40 e0       	ldi	r20, 0x00	; 0
    187e:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,5,LOW);
    1882:	82 e0       	ldi	r24, 0x02	; 2
    1884:	65 e0       	ldi	r22, 0x05	; 5
    1886:	40 e0       	ldi	r20, 0x00	; 0
    1888:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,6,LOW);
    188c:	82 e0       	ldi	r24, 0x02	; 2
    188e:	66 e0       	ldi	r22, 0x06	; 6
    1890:	40 e0       	ldi	r20, 0x00	; 0
    1892:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    1896:	1f c1       	rjmp	.+574    	; 0x1ad6 <S_SEG_WRITE_INT+0x820>
		break;
	case 2 :
		DIO_PIN_WRITE(S_SEG_PORT,0,HIGH);
    1898:	82 e0       	ldi	r24, 0x02	; 2
    189a:	60 e0       	ldi	r22, 0x00	; 0
    189c:	41 e0       	ldi	r20, 0x01	; 1
    189e:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,1,HIGH);
    18a2:	82 e0       	ldi	r24, 0x02	; 2
    18a4:	61 e0       	ldi	r22, 0x01	; 1
    18a6:	41 e0       	ldi	r20, 0x01	; 1
    18a8:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,2,LOW);
    18ac:	82 e0       	ldi	r24, 0x02	; 2
    18ae:	62 e0       	ldi	r22, 0x02	; 2
    18b0:	40 e0       	ldi	r20, 0x00	; 0
    18b2:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,3,HIGH);
    18b6:	82 e0       	ldi	r24, 0x02	; 2
    18b8:	63 e0       	ldi	r22, 0x03	; 3
    18ba:	41 e0       	ldi	r20, 0x01	; 1
    18bc:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,4,HIGH);
    18c0:	82 e0       	ldi	r24, 0x02	; 2
    18c2:	64 e0       	ldi	r22, 0x04	; 4
    18c4:	41 e0       	ldi	r20, 0x01	; 1
    18c6:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,5,LOW);
    18ca:	82 e0       	ldi	r24, 0x02	; 2
    18cc:	65 e0       	ldi	r22, 0x05	; 5
    18ce:	40 e0       	ldi	r20, 0x00	; 0
    18d0:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,6,HIGH);
    18d4:	82 e0       	ldi	r24, 0x02	; 2
    18d6:	66 e0       	ldi	r22, 0x06	; 6
    18d8:	41 e0       	ldi	r20, 0x01	; 1
    18da:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    18de:	fb c0       	rjmp	.+502    	; 0x1ad6 <S_SEG_WRITE_INT+0x820>
		break;
	case 3 :
		DIO_PIN_WRITE(S_SEG_PORT,0,HIGH);
    18e0:	82 e0       	ldi	r24, 0x02	; 2
    18e2:	60 e0       	ldi	r22, 0x00	; 0
    18e4:	41 e0       	ldi	r20, 0x01	; 1
    18e6:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,1,HIGH);
    18ea:	82 e0       	ldi	r24, 0x02	; 2
    18ec:	61 e0       	ldi	r22, 0x01	; 1
    18ee:	41 e0       	ldi	r20, 0x01	; 1
    18f0:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,2,HIGH);
    18f4:	82 e0       	ldi	r24, 0x02	; 2
    18f6:	62 e0       	ldi	r22, 0x02	; 2
    18f8:	41 e0       	ldi	r20, 0x01	; 1
    18fa:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,3,HIGH);
    18fe:	82 e0       	ldi	r24, 0x02	; 2
    1900:	63 e0       	ldi	r22, 0x03	; 3
    1902:	41 e0       	ldi	r20, 0x01	; 1
    1904:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,4,LOW);
    1908:	82 e0       	ldi	r24, 0x02	; 2
    190a:	64 e0       	ldi	r22, 0x04	; 4
    190c:	40 e0       	ldi	r20, 0x00	; 0
    190e:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,5,LOW);
    1912:	82 e0       	ldi	r24, 0x02	; 2
    1914:	65 e0       	ldi	r22, 0x05	; 5
    1916:	40 e0       	ldi	r20, 0x00	; 0
    1918:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,6,HIGH);
    191c:	82 e0       	ldi	r24, 0x02	; 2
    191e:	66 e0       	ldi	r22, 0x06	; 6
    1920:	41 e0       	ldi	r20, 0x01	; 1
    1922:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    1926:	d7 c0       	rjmp	.+430    	; 0x1ad6 <S_SEG_WRITE_INT+0x820>
		break;
	case 4 :
		DIO_PIN_WRITE(S_SEG_PORT,0,LOW);
    1928:	82 e0       	ldi	r24, 0x02	; 2
    192a:	60 e0       	ldi	r22, 0x00	; 0
    192c:	40 e0       	ldi	r20, 0x00	; 0
    192e:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,1,HIGH);
    1932:	82 e0       	ldi	r24, 0x02	; 2
    1934:	61 e0       	ldi	r22, 0x01	; 1
    1936:	41 e0       	ldi	r20, 0x01	; 1
    1938:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,2,HIGH);
    193c:	82 e0       	ldi	r24, 0x02	; 2
    193e:	62 e0       	ldi	r22, 0x02	; 2
    1940:	41 e0       	ldi	r20, 0x01	; 1
    1942:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,3,LOW);
    1946:	82 e0       	ldi	r24, 0x02	; 2
    1948:	63 e0       	ldi	r22, 0x03	; 3
    194a:	40 e0       	ldi	r20, 0x00	; 0
    194c:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,4,LOW);
    1950:	82 e0       	ldi	r24, 0x02	; 2
    1952:	64 e0       	ldi	r22, 0x04	; 4
    1954:	40 e0       	ldi	r20, 0x00	; 0
    1956:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,5,HIGH);
    195a:	82 e0       	ldi	r24, 0x02	; 2
    195c:	65 e0       	ldi	r22, 0x05	; 5
    195e:	41 e0       	ldi	r20, 0x01	; 1
    1960:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,6,HIGH);
    1964:	82 e0       	ldi	r24, 0x02	; 2
    1966:	66 e0       	ldi	r22, 0x06	; 6
    1968:	41 e0       	ldi	r20, 0x01	; 1
    196a:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    196e:	b3 c0       	rjmp	.+358    	; 0x1ad6 <S_SEG_WRITE_INT+0x820>
		break;
	case 5 :
		DIO_PIN_WRITE(S_SEG_PORT,0,HIGH);
    1970:	82 e0       	ldi	r24, 0x02	; 2
    1972:	60 e0       	ldi	r22, 0x00	; 0
    1974:	41 e0       	ldi	r20, 0x01	; 1
    1976:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,1,LOW);
    197a:	82 e0       	ldi	r24, 0x02	; 2
    197c:	61 e0       	ldi	r22, 0x01	; 1
    197e:	40 e0       	ldi	r20, 0x00	; 0
    1980:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,2,HIGH);
    1984:	82 e0       	ldi	r24, 0x02	; 2
    1986:	62 e0       	ldi	r22, 0x02	; 2
    1988:	41 e0       	ldi	r20, 0x01	; 1
    198a:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,3,HIGH);
    198e:	82 e0       	ldi	r24, 0x02	; 2
    1990:	63 e0       	ldi	r22, 0x03	; 3
    1992:	41 e0       	ldi	r20, 0x01	; 1
    1994:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,4,LOW);
    1998:	82 e0       	ldi	r24, 0x02	; 2
    199a:	64 e0       	ldi	r22, 0x04	; 4
    199c:	40 e0       	ldi	r20, 0x00	; 0
    199e:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,5,HIGH);
    19a2:	82 e0       	ldi	r24, 0x02	; 2
    19a4:	65 e0       	ldi	r22, 0x05	; 5
    19a6:	41 e0       	ldi	r20, 0x01	; 1
    19a8:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,6,HIGH);
    19ac:	82 e0       	ldi	r24, 0x02	; 2
    19ae:	66 e0       	ldi	r22, 0x06	; 6
    19b0:	41 e0       	ldi	r20, 0x01	; 1
    19b2:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    19b6:	8f c0       	rjmp	.+286    	; 0x1ad6 <S_SEG_WRITE_INT+0x820>
		break;
	case 6 :
		DIO_PIN_WRITE(S_SEG_PORT,0,HIGH);
    19b8:	82 e0       	ldi	r24, 0x02	; 2
    19ba:	60 e0       	ldi	r22, 0x00	; 0
    19bc:	41 e0       	ldi	r20, 0x01	; 1
    19be:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,1,LOW);
    19c2:	82 e0       	ldi	r24, 0x02	; 2
    19c4:	61 e0       	ldi	r22, 0x01	; 1
    19c6:	40 e0       	ldi	r20, 0x00	; 0
    19c8:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,2,HIGH);
    19cc:	82 e0       	ldi	r24, 0x02	; 2
    19ce:	62 e0       	ldi	r22, 0x02	; 2
    19d0:	41 e0       	ldi	r20, 0x01	; 1
    19d2:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,3,HIGH);
    19d6:	82 e0       	ldi	r24, 0x02	; 2
    19d8:	63 e0       	ldi	r22, 0x03	; 3
    19da:	41 e0       	ldi	r20, 0x01	; 1
    19dc:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,4,HIGH);
    19e0:	82 e0       	ldi	r24, 0x02	; 2
    19e2:	64 e0       	ldi	r22, 0x04	; 4
    19e4:	41 e0       	ldi	r20, 0x01	; 1
    19e6:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,5,HIGH);
    19ea:	82 e0       	ldi	r24, 0x02	; 2
    19ec:	65 e0       	ldi	r22, 0x05	; 5
    19ee:	41 e0       	ldi	r20, 0x01	; 1
    19f0:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,6,HIGH);
    19f4:	82 e0       	ldi	r24, 0x02	; 2
    19f6:	66 e0       	ldi	r22, 0x06	; 6
    19f8:	41 e0       	ldi	r20, 0x01	; 1
    19fa:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    19fe:	6b c0       	rjmp	.+214    	; 0x1ad6 <S_SEG_WRITE_INT+0x820>
		break;
	case 7 :
		DIO_PIN_WRITE(S_SEG_PORT,0,HIGH);
    1a00:	82 e0       	ldi	r24, 0x02	; 2
    1a02:	60 e0       	ldi	r22, 0x00	; 0
    1a04:	41 e0       	ldi	r20, 0x01	; 1
    1a06:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,1,HIGH);
    1a0a:	82 e0       	ldi	r24, 0x02	; 2
    1a0c:	61 e0       	ldi	r22, 0x01	; 1
    1a0e:	41 e0       	ldi	r20, 0x01	; 1
    1a10:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,2,HIGH);
    1a14:	82 e0       	ldi	r24, 0x02	; 2
    1a16:	62 e0       	ldi	r22, 0x02	; 2
    1a18:	41 e0       	ldi	r20, 0x01	; 1
    1a1a:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,3,LOW);
    1a1e:	82 e0       	ldi	r24, 0x02	; 2
    1a20:	63 e0       	ldi	r22, 0x03	; 3
    1a22:	40 e0       	ldi	r20, 0x00	; 0
    1a24:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,4,LOW);
    1a28:	82 e0       	ldi	r24, 0x02	; 2
    1a2a:	64 e0       	ldi	r22, 0x04	; 4
    1a2c:	40 e0       	ldi	r20, 0x00	; 0
    1a2e:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,5,LOW);
    1a32:	82 e0       	ldi	r24, 0x02	; 2
    1a34:	65 e0       	ldi	r22, 0x05	; 5
    1a36:	40 e0       	ldi	r20, 0x00	; 0
    1a38:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,6,LOW);
    1a3c:	82 e0       	ldi	r24, 0x02	; 2
    1a3e:	66 e0       	ldi	r22, 0x06	; 6
    1a40:	40 e0       	ldi	r20, 0x00	; 0
    1a42:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    1a46:	47 c0       	rjmp	.+142    	; 0x1ad6 <S_SEG_WRITE_INT+0x820>
		break;
	case 8 :
		DIO_PIN_WRITE(S_SEG_PORT,0,HIGH);
    1a48:	82 e0       	ldi	r24, 0x02	; 2
    1a4a:	60 e0       	ldi	r22, 0x00	; 0
    1a4c:	41 e0       	ldi	r20, 0x01	; 1
    1a4e:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,1,HIGH);
    1a52:	82 e0       	ldi	r24, 0x02	; 2
    1a54:	61 e0       	ldi	r22, 0x01	; 1
    1a56:	41 e0       	ldi	r20, 0x01	; 1
    1a58:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,2,HIGH);
    1a5c:	82 e0       	ldi	r24, 0x02	; 2
    1a5e:	62 e0       	ldi	r22, 0x02	; 2
    1a60:	41 e0       	ldi	r20, 0x01	; 1
    1a62:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,3,HIGH);
    1a66:	82 e0       	ldi	r24, 0x02	; 2
    1a68:	63 e0       	ldi	r22, 0x03	; 3
    1a6a:	41 e0       	ldi	r20, 0x01	; 1
    1a6c:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,4,HIGH);
    1a70:	82 e0       	ldi	r24, 0x02	; 2
    1a72:	64 e0       	ldi	r22, 0x04	; 4
    1a74:	41 e0       	ldi	r20, 0x01	; 1
    1a76:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,5,HIGH);
    1a7a:	82 e0       	ldi	r24, 0x02	; 2
    1a7c:	65 e0       	ldi	r22, 0x05	; 5
    1a7e:	41 e0       	ldi	r20, 0x01	; 1
    1a80:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,6,HIGH);
    1a84:	82 e0       	ldi	r24, 0x02	; 2
    1a86:	66 e0       	ldi	r22, 0x06	; 6
    1a88:	41 e0       	ldi	r20, 0x01	; 1
    1a8a:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    1a8e:	23 c0       	rjmp	.+70     	; 0x1ad6 <S_SEG_WRITE_INT+0x820>
		break;
	case 9 :
		DIO_PIN_WRITE(S_SEG_PORT,0,HIGH);
    1a90:	82 e0       	ldi	r24, 0x02	; 2
    1a92:	60 e0       	ldi	r22, 0x00	; 0
    1a94:	41 e0       	ldi	r20, 0x01	; 1
    1a96:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,1,HIGH);
    1a9a:	82 e0       	ldi	r24, 0x02	; 2
    1a9c:	61 e0       	ldi	r22, 0x01	; 1
    1a9e:	41 e0       	ldi	r20, 0x01	; 1
    1aa0:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,2,HIGH);
    1aa4:	82 e0       	ldi	r24, 0x02	; 2
    1aa6:	62 e0       	ldi	r22, 0x02	; 2
    1aa8:	41 e0       	ldi	r20, 0x01	; 1
    1aaa:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,3,HIGH);
    1aae:	82 e0       	ldi	r24, 0x02	; 2
    1ab0:	63 e0       	ldi	r22, 0x03	; 3
    1ab2:	41 e0       	ldi	r20, 0x01	; 1
    1ab4:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,4,LOW);
    1ab8:	82 e0       	ldi	r24, 0x02	; 2
    1aba:	64 e0       	ldi	r22, 0x04	; 4
    1abc:	40 e0       	ldi	r20, 0x00	; 0
    1abe:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,5,HIGH);
    1ac2:	82 e0       	ldi	r24, 0x02	; 2
    1ac4:	65 e0       	ldi	r22, 0x05	; 5
    1ac6:	41 e0       	ldi	r20, 0x01	; 1
    1ac8:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
		DIO_PIN_WRITE(S_SEG_PORT,6,HIGH);
    1acc:	82 e0       	ldi	r24, 0x02	; 2
    1ace:	66 e0       	ldi	r22, 0x06	; 6
    1ad0:	41 e0       	ldi	r20, 0x01	; 1
    1ad2:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    1ad6:	80 e0       	ldi	r24, 0x00	; 0
    1ad8:	90 e0       	ldi	r25, 0x00	; 0
    1ada:	a0 ea       	ldi	r26, 0xA0	; 160
    1adc:	b0 e4       	ldi	r27, 0x40	; 64
    1ade:	8b 87       	std	Y+11, r24	; 0x0b
    1ae0:	9c 87       	std	Y+12, r25	; 0x0c
    1ae2:	ad 87       	std	Y+13, r26	; 0x0d
    1ae4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ae6:	6b 85       	ldd	r22, Y+11	; 0x0b
    1ae8:	7c 85       	ldd	r23, Y+12	; 0x0c
    1aea:	8d 85       	ldd	r24, Y+13	; 0x0d
    1aec:	9e 85       	ldd	r25, Y+14	; 0x0e
    1aee:	20 e0       	ldi	r18, 0x00	; 0
    1af0:	30 e0       	ldi	r19, 0x00	; 0
    1af2:	4a ef       	ldi	r20, 0xFA	; 250
    1af4:	54 e4       	ldi	r21, 0x44	; 68
    1af6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1afa:	dc 01       	movw	r26, r24
    1afc:	cb 01       	movw	r24, r22
    1afe:	8f 83       	std	Y+7, r24	; 0x07
    1b00:	98 87       	std	Y+8, r25	; 0x08
    1b02:	a9 87       	std	Y+9, r26	; 0x09
    1b04:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1b06:	6f 81       	ldd	r22, Y+7	; 0x07
    1b08:	78 85       	ldd	r23, Y+8	; 0x08
    1b0a:	89 85       	ldd	r24, Y+9	; 0x09
    1b0c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b0e:	20 e0       	ldi	r18, 0x00	; 0
    1b10:	30 e0       	ldi	r19, 0x00	; 0
    1b12:	40 e8       	ldi	r20, 0x80	; 128
    1b14:	5f e3       	ldi	r21, 0x3F	; 63
    1b16:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1b1a:	88 23       	and	r24, r24
    1b1c:	2c f4       	brge	.+10     	; 0x1b28 <S_SEG_WRITE_INT+0x872>
		__ticks = 1;
    1b1e:	81 e0       	ldi	r24, 0x01	; 1
    1b20:	90 e0       	ldi	r25, 0x00	; 0
    1b22:	9e 83       	std	Y+6, r25	; 0x06
    1b24:	8d 83       	std	Y+5, r24	; 0x05
    1b26:	3f c0       	rjmp	.+126    	; 0x1ba6 <S_SEG_WRITE_INT+0x8f0>
	else if (__tmp > 65535)
    1b28:	6f 81       	ldd	r22, Y+7	; 0x07
    1b2a:	78 85       	ldd	r23, Y+8	; 0x08
    1b2c:	89 85       	ldd	r24, Y+9	; 0x09
    1b2e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b30:	20 e0       	ldi	r18, 0x00	; 0
    1b32:	3f ef       	ldi	r19, 0xFF	; 255
    1b34:	4f e7       	ldi	r20, 0x7F	; 127
    1b36:	57 e4       	ldi	r21, 0x47	; 71
    1b38:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1b3c:	18 16       	cp	r1, r24
    1b3e:	4c f5       	brge	.+82     	; 0x1b92 <S_SEG_WRITE_INT+0x8dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b40:	6b 85       	ldd	r22, Y+11	; 0x0b
    1b42:	7c 85       	ldd	r23, Y+12	; 0x0c
    1b44:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b46:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b48:	20 e0       	ldi	r18, 0x00	; 0
    1b4a:	30 e0       	ldi	r19, 0x00	; 0
    1b4c:	40 e2       	ldi	r20, 0x20	; 32
    1b4e:	51 e4       	ldi	r21, 0x41	; 65
    1b50:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b54:	dc 01       	movw	r26, r24
    1b56:	cb 01       	movw	r24, r22
    1b58:	bc 01       	movw	r22, r24
    1b5a:	cd 01       	movw	r24, r26
    1b5c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b60:	dc 01       	movw	r26, r24
    1b62:	cb 01       	movw	r24, r22
    1b64:	9e 83       	std	Y+6, r25	; 0x06
    1b66:	8d 83       	std	Y+5, r24	; 0x05
    1b68:	0f c0       	rjmp	.+30     	; 0x1b88 <S_SEG_WRITE_INT+0x8d2>
    1b6a:	88 ec       	ldi	r24, 0xC8	; 200
    1b6c:	90 e0       	ldi	r25, 0x00	; 0
    1b6e:	9c 83       	std	Y+4, r25	; 0x04
    1b70:	8b 83       	std	Y+3, r24	; 0x03
    1b72:	8b 81       	ldd	r24, Y+3	; 0x03
    1b74:	9c 81       	ldd	r25, Y+4	; 0x04
    1b76:	01 97       	sbiw	r24, 0x01	; 1
    1b78:	f1 f7       	brne	.-4      	; 0x1b76 <S_SEG_WRITE_INT+0x8c0>
    1b7a:	9c 83       	std	Y+4, r25	; 0x04
    1b7c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b7e:	8d 81       	ldd	r24, Y+5	; 0x05
    1b80:	9e 81       	ldd	r25, Y+6	; 0x06
    1b82:	01 97       	sbiw	r24, 0x01	; 1
    1b84:	9e 83       	std	Y+6, r25	; 0x06
    1b86:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b88:	8d 81       	ldd	r24, Y+5	; 0x05
    1b8a:	9e 81       	ldd	r25, Y+6	; 0x06
    1b8c:	00 97       	sbiw	r24, 0x00	; 0
    1b8e:	69 f7       	brne	.-38     	; 0x1b6a <S_SEG_WRITE_INT+0x8b4>
    1b90:	14 c0       	rjmp	.+40     	; 0x1bba <S_SEG_WRITE_INT+0x904>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b92:	6f 81       	ldd	r22, Y+7	; 0x07
    1b94:	78 85       	ldd	r23, Y+8	; 0x08
    1b96:	89 85       	ldd	r24, Y+9	; 0x09
    1b98:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b9a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b9e:	dc 01       	movw	r26, r24
    1ba0:	cb 01       	movw	r24, r22
    1ba2:	9e 83       	std	Y+6, r25	; 0x06
    1ba4:	8d 83       	std	Y+5, r24	; 0x05
    1ba6:	8d 81       	ldd	r24, Y+5	; 0x05
    1ba8:	9e 81       	ldd	r25, Y+6	; 0x06
    1baa:	9a 83       	std	Y+2, r25	; 0x02
    1bac:	89 83       	std	Y+1, r24	; 0x01
    1bae:	89 81       	ldd	r24, Y+1	; 0x01
    1bb0:	9a 81       	ldd	r25, Y+2	; 0x02
    1bb2:	01 97       	sbiw	r24, 0x01	; 1
    1bb4:	f1 f7       	brne	.-4      	; 0x1bb2 <S_SEG_WRITE_INT+0x8fc>
    1bb6:	9a 83       	std	Y+2, r25	; 0x02
    1bb8:	89 83       	std	Y+1, r24	; 0x01
		break;
	}
	_delay_ms(5);
	DIO_PIN_WRITE(S_SEG_2_EN_PORT,S_SEG_2_EN_PIN,LOW);
    1bba:	81 e0       	ldi	r24, 0x01	; 1
    1bbc:	67 e0       	ldi	r22, 0x07	; 7
    1bbe:	40 e0       	ldi	r20, 0x00	; 0
    1bc0:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>


}
    1bc4:	a3 96       	adiw	r28, 0x23	; 35
    1bc6:	0f b6       	in	r0, 0x3f	; 63
    1bc8:	f8 94       	cli
    1bca:	de bf       	out	0x3e, r29	; 62
    1bcc:	0f be       	out	0x3f, r0	; 63
    1bce:	cd bf       	out	0x3d, r28	; 61
    1bd0:	cf 91       	pop	r28
    1bd2:	df 91       	pop	r29
    1bd4:	08 95       	ret

00001bd6 <P_B_INIT>:

#include "P_B_CFG.h"
#include "DIO.h"

void P_B_INIT(void)
{
    1bd6:	df 93       	push	r29
    1bd8:	cf 93       	push	r28
    1bda:	cd b7       	in	r28, 0x3d	; 61
    1bdc:	de b7       	in	r29, 0x3e	; 62
	DIO_PIN_DIRECTION(P_B_PORT,P_B_PIN,INPUT);
    1bde:	82 e0       	ldi	r24, 0x02	; 2
    1be0:	60 e0       	ldi	r22, 0x00	; 0
    1be2:	40 e0       	ldi	r20, 0x00	; 0
    1be4:	0e 94 be 05 	call	0xb7c	; 0xb7c <DIO_PIN_DIRECTION>
	DIO_PIN_WRITE(P_B_PORT,P_B_PIN,HIGH);
    1be8:	82 e0       	ldi	r24, 0x02	; 2
    1bea:	60 e0       	ldi	r22, 0x00	; 0
    1bec:	41 e0       	ldi	r20, 0x01	; 1
    1bee:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>

}
    1bf2:	cf 91       	pop	r28
    1bf4:	df 91       	pop	r29
    1bf6:	08 95       	ret

00001bf8 <P_B_READ>:
u8 P_B_READ(void)
{
    1bf8:	df 93       	push	r29
    1bfa:	cf 93       	push	r28
    1bfc:	0f 92       	push	r0
    1bfe:	cd b7       	in	r28, 0x3d	; 61
    1c00:	de b7       	in	r29, 0x3e	; 62
	u8 value = 0;
    1c02:	19 82       	std	Y+1, r1	; 0x01
	value = DIO_PIN_READ(P_B_PORT,P_B_PIN);
    1c04:	82 e0       	ldi	r24, 0x02	; 2
    1c06:	60 e0       	ldi	r22, 0x00	; 0
    1c08:	0e 94 cd 08 	call	0x119a	; 0x119a <DIO_PIN_READ>
    1c0c:	89 83       	std	Y+1, r24	; 0x01
	return value;
    1c0e:	89 81       	ldd	r24, Y+1	; 0x01
}
    1c10:	0f 90       	pop	r0
    1c12:	cf 91       	pop	r28
    1c14:	df 91       	pop	r29
    1c16:	08 95       	ret

00001c18 <LED_INIT>:
 */

#include "DIO.h"
#include "LED_CFG.h"
void LED_INIT(void)
{
    1c18:	df 93       	push	r29
    1c1a:	cf 93       	push	r28
    1c1c:	cd b7       	in	r28, 0x3d	; 61
    1c1e:	de b7       	in	r29, 0x3e	; 62

	DIO_PIN_DIRECTION(LED_PORT,LED_PIN,OUTPUT);
    1c20:	80 e0       	ldi	r24, 0x00	; 0
    1c22:	62 e0       	ldi	r22, 0x02	; 2
    1c24:	41 e0       	ldi	r20, 0x01	; 1
    1c26:	0e 94 be 05 	call	0xb7c	; 0xb7c <DIO_PIN_DIRECTION>
	DIO_PIN_DIRECTION(LED_PORT,LED_PIN_BLUE,OUTPUT);
    1c2a:	80 e0       	ldi	r24, 0x00	; 0
    1c2c:	63 e0       	ldi	r22, 0x03	; 3
    1c2e:	41 e0       	ldi	r20, 0x01	; 1
    1c30:	0e 94 be 05 	call	0xb7c	; 0xb7c <DIO_PIN_DIRECTION>
	DIO_PIN_DIRECTION(LED_PORT,LED_PIN_GREEN,OUTPUT);
    1c34:	80 e0       	ldi	r24, 0x00	; 0
    1c36:	64 e0       	ldi	r22, 0x04	; 4
    1c38:	41 e0       	ldi	r20, 0x01	; 1
    1c3a:	0e 94 be 05 	call	0xb7c	; 0xb7c <DIO_PIN_DIRECTION>


}
    1c3e:	cf 91       	pop	r28
    1c40:	df 91       	pop	r29
    1c42:	08 95       	ret

00001c44 <LED_ON>:
void LED_ON(void)
{
    1c44:	df 93       	push	r29
    1c46:	cf 93       	push	r28
    1c48:	cd b7       	in	r28, 0x3d	; 61
    1c4a:	de b7       	in	r29, 0x3e	; 62

	DIO_PIN_WRITE(LED_PORT,LED_PIN,HIGH);
    1c4c:	80 e0       	ldi	r24, 0x00	; 0
    1c4e:	62 e0       	ldi	r22, 0x02	; 2
    1c50:	41 e0       	ldi	r20, 0x01	; 1
    1c52:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>

}
    1c56:	cf 91       	pop	r28
    1c58:	df 91       	pop	r29
    1c5a:	08 95       	ret

00001c5c <LED_OFF>:
void LED_OFF(void)
{
    1c5c:	df 93       	push	r29
    1c5e:	cf 93       	push	r28
    1c60:	cd b7       	in	r28, 0x3d	; 61
    1c62:	de b7       	in	r29, 0x3e	; 62

	DIO_PIN_WRITE(LED_PORT,LED_PIN,LOW);
    1c64:	80 e0       	ldi	r24, 0x00	; 0
    1c66:	62 e0       	ldi	r22, 0x02	; 2
    1c68:	40 e0       	ldi	r20, 0x00	; 0
    1c6a:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>

}
    1c6e:	cf 91       	pop	r28
    1c70:	df 91       	pop	r29
    1c72:	08 95       	ret

00001c74 <LED_TOG>:
void LED_TOG(void)
{
    1c74:	df 93       	push	r29
    1c76:	cf 93       	push	r28
    1c78:	cd b7       	in	r28, 0x3d	; 61
    1c7a:	de b7       	in	r29, 0x3e	; 62
	DIO_PIN_TOG(LED_PORT,LED_PIN);
    1c7c:	80 e0       	ldi	r24, 0x00	; 0
    1c7e:	62 e0       	ldi	r22, 0x02	; 2
    1c80:	0e 94 ce 07 	call	0xf9c	; 0xf9c <DIO_PIN_TOG>
}
    1c84:	cf 91       	pop	r28
    1c86:	df 91       	pop	r29
    1c88:	08 95       	ret

00001c8a <LED_TOG_BLUE>:
void LED_TOG_BLUE(void)
{
    1c8a:	df 93       	push	r29
    1c8c:	cf 93       	push	r28
    1c8e:	cd b7       	in	r28, 0x3d	; 61
    1c90:	de b7       	in	r29, 0x3e	; 62
	DIO_PIN_TOG(LED_PORT,LED_PIN_BLUE);
    1c92:	80 e0       	ldi	r24, 0x00	; 0
    1c94:	63 e0       	ldi	r22, 0x03	; 3
    1c96:	0e 94 ce 07 	call	0xf9c	; 0xf9c <DIO_PIN_TOG>
}
    1c9a:	cf 91       	pop	r28
    1c9c:	df 91       	pop	r29
    1c9e:	08 95       	ret

00001ca0 <LED_TOG_GREEN>:
void LED_TOG_GREEN(void)
{
    1ca0:	df 93       	push	r29
    1ca2:	cf 93       	push	r28
    1ca4:	cd b7       	in	r28, 0x3d	; 61
    1ca6:	de b7       	in	r29, 0x3e	; 62
	DIO_PIN_TOG(LED_PORT,LED_PIN_GREEN);
    1ca8:	80 e0       	ldi	r24, 0x00	; 0
    1caa:	64 e0       	ldi	r22, 0x04	; 4
    1cac:	0e 94 ce 07 	call	0xf9c	; 0xf9c <DIO_PIN_TOG>
}
    1cb0:	cf 91       	pop	r28
    1cb2:	df 91       	pop	r29
    1cb4:	08 95       	ret

00001cb6 <LCD_INIT>:
#include "LCD.h"
#define F_CPU 8000000UL
#include <util/delay.h>

void LCD_INIT()
{
    1cb6:	df 93       	push	r29
    1cb8:	cf 93       	push	r28
    1cba:	cd b7       	in	r28, 0x3d	; 61
    1cbc:	de b7       	in	r29, 0x3e	; 62
    1cbe:	2e 97       	sbiw	r28, 0x0e	; 14
    1cc0:	0f b6       	in	r0, 0x3f	; 63
    1cc2:	f8 94       	cli
    1cc4:	de bf       	out	0x3e, r29	; 62
    1cc6:	0f be       	out	0x3f, r0	; 63
    1cc8:	cd bf       	out	0x3d, r28	; 61
	DIO_PIN_DIRECTION(LCD_DATA_REGESTER,LCD_DATA_PIN_1,OUTPUT);
    1cca:	81 e0       	ldi	r24, 0x01	; 1
    1ccc:	64 e0       	ldi	r22, 0x04	; 4
    1cce:	41 e0       	ldi	r20, 0x01	; 1
    1cd0:	0e 94 be 05 	call	0xb7c	; 0xb7c <DIO_PIN_DIRECTION>
	DIO_PIN_DIRECTION(LCD_DATA_REGESTER,LCD_DATA_PIN_2,OUTPUT);
    1cd4:	81 e0       	ldi	r24, 0x01	; 1
    1cd6:	65 e0       	ldi	r22, 0x05	; 5
    1cd8:	41 e0       	ldi	r20, 0x01	; 1
    1cda:	0e 94 be 05 	call	0xb7c	; 0xb7c <DIO_PIN_DIRECTION>
	DIO_PIN_DIRECTION(LCD_DATA_REGESTER,LCD_DATA_PIN_3,OUTPUT);
    1cde:	81 e0       	ldi	r24, 0x01	; 1
    1ce0:	66 e0       	ldi	r22, 0x06	; 6
    1ce2:	41 e0       	ldi	r20, 0x01	; 1
    1ce4:	0e 94 be 05 	call	0xb7c	; 0xb7c <DIO_PIN_DIRECTION>
	DIO_PIN_DIRECTION(LCD_DATA_REGESTER,LCD_DATA_PIN_4,OUTPUT);
    1ce8:	81 e0       	ldi	r24, 0x01	; 1
    1cea:	67 e0       	ldi	r22, 0x07	; 7
    1cec:	41 e0       	ldi	r20, 0x01	; 1
    1cee:	0e 94 be 05 	call	0xb7c	; 0xb7c <DIO_PIN_DIRECTION>

	DIO_PIN_DIRECTION(LCD_ENABLE_PORT,LCD_ENABLE_PIN,OUTPUT);
    1cf2:	80 e0       	ldi	r24, 0x00	; 0
    1cf4:	60 e0       	ldi	r22, 0x00	; 0
    1cf6:	41 e0       	ldi	r20, 0x01	; 1
    1cf8:	0e 94 be 05 	call	0xb7c	; 0xb7c <DIO_PIN_DIRECTION>
	DIO_PIN_DIRECTION(LCD_RS_PORT,LCD_RS_PIN,OUTPUT);
    1cfc:	80 e0       	ldi	r24, 0x00	; 0
    1cfe:	61 e0       	ldi	r22, 0x01	; 1
    1d00:	41 e0       	ldi	r20, 0x01	; 1
    1d02:	0e 94 be 05 	call	0xb7c	; 0xb7c <DIO_PIN_DIRECTION>
    1d06:	80 e0       	ldi	r24, 0x00	; 0
    1d08:	90 e0       	ldi	r25, 0x00	; 0
    1d0a:	a8 ec       	ldi	r26, 0xC8	; 200
    1d0c:	b2 e4       	ldi	r27, 0x42	; 66
    1d0e:	8b 87       	std	Y+11, r24	; 0x0b
    1d10:	9c 87       	std	Y+12, r25	; 0x0c
    1d12:	ad 87       	std	Y+13, r26	; 0x0d
    1d14:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d16:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d18:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d1a:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d1c:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d1e:	20 e0       	ldi	r18, 0x00	; 0
    1d20:	30 e0       	ldi	r19, 0x00	; 0
    1d22:	4a ef       	ldi	r20, 0xFA	; 250
    1d24:	54 e4       	ldi	r21, 0x44	; 68
    1d26:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d2a:	dc 01       	movw	r26, r24
    1d2c:	cb 01       	movw	r24, r22
    1d2e:	8f 83       	std	Y+7, r24	; 0x07
    1d30:	98 87       	std	Y+8, r25	; 0x08
    1d32:	a9 87       	std	Y+9, r26	; 0x09
    1d34:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1d36:	6f 81       	ldd	r22, Y+7	; 0x07
    1d38:	78 85       	ldd	r23, Y+8	; 0x08
    1d3a:	89 85       	ldd	r24, Y+9	; 0x09
    1d3c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d3e:	20 e0       	ldi	r18, 0x00	; 0
    1d40:	30 e0       	ldi	r19, 0x00	; 0
    1d42:	40 e8       	ldi	r20, 0x80	; 128
    1d44:	5f e3       	ldi	r21, 0x3F	; 63
    1d46:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1d4a:	88 23       	and	r24, r24
    1d4c:	2c f4       	brge	.+10     	; 0x1d58 <LCD_INIT+0xa2>
		__ticks = 1;
    1d4e:	81 e0       	ldi	r24, 0x01	; 1
    1d50:	90 e0       	ldi	r25, 0x00	; 0
    1d52:	9e 83       	std	Y+6, r25	; 0x06
    1d54:	8d 83       	std	Y+5, r24	; 0x05
    1d56:	3f c0       	rjmp	.+126    	; 0x1dd6 <LCD_INIT+0x120>
	else if (__tmp > 65535)
    1d58:	6f 81       	ldd	r22, Y+7	; 0x07
    1d5a:	78 85       	ldd	r23, Y+8	; 0x08
    1d5c:	89 85       	ldd	r24, Y+9	; 0x09
    1d5e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d60:	20 e0       	ldi	r18, 0x00	; 0
    1d62:	3f ef       	ldi	r19, 0xFF	; 255
    1d64:	4f e7       	ldi	r20, 0x7F	; 127
    1d66:	57 e4       	ldi	r21, 0x47	; 71
    1d68:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1d6c:	18 16       	cp	r1, r24
    1d6e:	4c f5       	brge	.+82     	; 0x1dc2 <LCD_INIT+0x10c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d70:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d72:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d74:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d76:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d78:	20 e0       	ldi	r18, 0x00	; 0
    1d7a:	30 e0       	ldi	r19, 0x00	; 0
    1d7c:	40 e2       	ldi	r20, 0x20	; 32
    1d7e:	51 e4       	ldi	r21, 0x41	; 65
    1d80:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d84:	dc 01       	movw	r26, r24
    1d86:	cb 01       	movw	r24, r22
    1d88:	bc 01       	movw	r22, r24
    1d8a:	cd 01       	movw	r24, r26
    1d8c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d90:	dc 01       	movw	r26, r24
    1d92:	cb 01       	movw	r24, r22
    1d94:	9e 83       	std	Y+6, r25	; 0x06
    1d96:	8d 83       	std	Y+5, r24	; 0x05
    1d98:	0f c0       	rjmp	.+30     	; 0x1db8 <LCD_INIT+0x102>
    1d9a:	88 ec       	ldi	r24, 0xC8	; 200
    1d9c:	90 e0       	ldi	r25, 0x00	; 0
    1d9e:	9c 83       	std	Y+4, r25	; 0x04
    1da0:	8b 83       	std	Y+3, r24	; 0x03
    1da2:	8b 81       	ldd	r24, Y+3	; 0x03
    1da4:	9c 81       	ldd	r25, Y+4	; 0x04
    1da6:	01 97       	sbiw	r24, 0x01	; 1
    1da8:	f1 f7       	brne	.-4      	; 0x1da6 <LCD_INIT+0xf0>
    1daa:	9c 83       	std	Y+4, r25	; 0x04
    1dac:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1dae:	8d 81       	ldd	r24, Y+5	; 0x05
    1db0:	9e 81       	ldd	r25, Y+6	; 0x06
    1db2:	01 97       	sbiw	r24, 0x01	; 1
    1db4:	9e 83       	std	Y+6, r25	; 0x06
    1db6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1db8:	8d 81       	ldd	r24, Y+5	; 0x05
    1dba:	9e 81       	ldd	r25, Y+6	; 0x06
    1dbc:	00 97       	sbiw	r24, 0x00	; 0
    1dbe:	69 f7       	brne	.-38     	; 0x1d9a <LCD_INIT+0xe4>
    1dc0:	14 c0       	rjmp	.+40     	; 0x1dea <LCD_INIT+0x134>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1dc2:	6f 81       	ldd	r22, Y+7	; 0x07
    1dc4:	78 85       	ldd	r23, Y+8	; 0x08
    1dc6:	89 85       	ldd	r24, Y+9	; 0x09
    1dc8:	9a 85       	ldd	r25, Y+10	; 0x0a
    1dca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1dce:	dc 01       	movw	r26, r24
    1dd0:	cb 01       	movw	r24, r22
    1dd2:	9e 83       	std	Y+6, r25	; 0x06
    1dd4:	8d 83       	std	Y+5, r24	; 0x05
    1dd6:	8d 81       	ldd	r24, Y+5	; 0x05
    1dd8:	9e 81       	ldd	r25, Y+6	; 0x06
    1dda:	9a 83       	std	Y+2, r25	; 0x02
    1ddc:	89 83       	std	Y+1, r24	; 0x01
    1dde:	89 81       	ldd	r24, Y+1	; 0x01
    1de0:	9a 81       	ldd	r25, Y+2	; 0x02
    1de2:	01 97       	sbiw	r24, 0x01	; 1
    1de4:	f1 f7       	brne	.-4      	; 0x1de2 <LCD_INIT+0x12c>
    1de6:	9a 83       	std	Y+2, r25	; 0x02
    1de8:	89 83       	std	Y+1, r24	; 0x01
    _delay_ms(100);
	//LCD_WRITE_CMD(0x38);   /* TO ACTIVATE 8-BIT MODE */


    LCD_WRITE_CMD(0X33);     /* TO ACTIVATE 4-BIT MODE */
    1dea:	83 e3       	ldi	r24, 0x33	; 51
    1dec:	0e 94 13 0f 	call	0x1e26	; 0x1e26 <LCD_WRITE_CMD>
    LCD_WRITE_CMD(0X32);
    1df0:	82 e3       	ldi	r24, 0x32	; 50
    1df2:	0e 94 13 0f 	call	0x1e26	; 0x1e26 <LCD_WRITE_CMD>
    LCD_WRITE_CMD(0X28);
    1df6:	88 e2       	ldi	r24, 0x28	; 40
    1df8:	0e 94 13 0f 	call	0x1e26	; 0x1e26 <LCD_WRITE_CMD>


    LCD_WRITE_CMD(0X0C);   /***_THIS_COMMAND_TO_TURN_ON_DISPLAY_AND_TURN_OFF_CURSOR_***/
    1dfc:	8c e0       	ldi	r24, 0x0C	; 12
    1dfe:	0e 94 13 0f 	call	0x1e26	; 0x1e26 <LCD_WRITE_CMD>
    LCD_WRITE_CMD(0X01);   /***_THIS_COMMAND_TO_CLEAR_LCD_*****************************/
    1e02:	81 e0       	ldi	r24, 0x01	; 1
    1e04:	0e 94 13 0f 	call	0x1e26	; 0x1e26 <LCD_WRITE_CMD>
    LCD_WRITE_CMD(0X06);   /***_THIS_COMMAND_TO_MOVE_CURSOR_FROM_LEFT_TO_RIGHT_********/
    1e08:	86 e0       	ldi	r24, 0x06	; 6
    1e0a:	0e 94 13 0f 	call	0x1e26	; 0x1e26 <LCD_WRITE_CMD>
    LCD_WRITE_CMD(0X02);   /***_THIS_COMMAND_TO_RETURN_HOME_***************************/
    1e0e:	82 e0       	ldi	r24, 0x02	; 2
    1e10:	0e 94 13 0f 	call	0x1e26	; 0x1e26 <LCD_WRITE_CMD>
}
    1e14:	2e 96       	adiw	r28, 0x0e	; 14
    1e16:	0f b6       	in	r0, 0x3f	; 63
    1e18:	f8 94       	cli
    1e1a:	de bf       	out	0x3e, r29	; 62
    1e1c:	0f be       	out	0x3f, r0	; 63
    1e1e:	cd bf       	out	0x3d, r28	; 61
    1e20:	cf 91       	pop	r28
    1e22:	df 91       	pop	r29
    1e24:	08 95       	ret

00001e26 <LCD_WRITE_CMD>:



void LCD_WRITE_CMD(u8 command)
{
    1e26:	df 93       	push	r29
    1e28:	cf 93       	push	r28
    1e2a:	cd b7       	in	r28, 0x3d	; 61
    1e2c:	de b7       	in	r29, 0x3e	; 62
    1e2e:	ab 97       	sbiw	r28, 0x2b	; 43
    1e30:	0f b6       	in	r0, 0x3f	; 63
    1e32:	f8 94       	cli
    1e34:	de bf       	out	0x3e, r29	; 62
    1e36:	0f be       	out	0x3f, r0	; 63
    1e38:	cd bf       	out	0x3d, r28	; 61
    1e3a:	8b a7       	std	Y+43, r24	; 0x2b
	DIO_PIN_WRITE(LCD_RS_PORT,LCD_RS_PIN,LOW);
    1e3c:	80 e0       	ldi	r24, 0x00	; 0
    1e3e:	61 e0       	ldi	r22, 0x01	; 1
    1e40:	40 e0       	ldi	r20, 0x00	; 0
    1e42:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
	DIO_PIN_WRITE(LCD_ENABLE_PORT,LCD_ENABLE_PIN,LOW);
    1e46:	80 e0       	ldi	r24, 0x00	; 0
    1e48:	60 e0       	ldi	r22, 0x00	; 0
    1e4a:	40 e0       	ldi	r20, 0x00	; 0
    1e4c:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>

	/***SEND_HIGH_PART***/
	DIO_PORT_WRITE(LCD_DATA_REGESTER,((command & 0xf0) | (LCD_DATA_REGESTER & 0x0f)));
    1e50:	8b a5       	ldd	r24, Y+43	; 0x2b
    1e52:	80 7f       	andi	r24, 0xF0	; 240
    1e54:	81 60       	ori	r24, 0x01	; 1
    1e56:	98 2f       	mov	r25, r24
    1e58:	81 e0       	ldi	r24, 0x01	; 1
    1e5a:	69 2f       	mov	r22, r25
    1e5c:	0e 94 8c 08 	call	0x1118	; 0x1118 <DIO_PORT_WRITE>
	DIO_PIN_WRITE(LCD_ENABLE_PORT,LCD_ENABLE_PIN,HIGH);
    1e60:	80 e0       	ldi	r24, 0x00	; 0
    1e62:	60 e0       	ldi	r22, 0x00	; 0
    1e64:	41 e0       	ldi	r20, 0x01	; 1
    1e66:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    1e6a:	80 e0       	ldi	r24, 0x00	; 0
    1e6c:	90 e0       	ldi	r25, 0x00	; 0
    1e6e:	a0 e8       	ldi	r26, 0x80	; 128
    1e70:	bf e3       	ldi	r27, 0x3F	; 63
    1e72:	8f a3       	std	Y+39, r24	; 0x27
    1e74:	98 a7       	std	Y+40, r25	; 0x28
    1e76:	a9 a7       	std	Y+41, r26	; 0x29
    1e78:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e7a:	6f a1       	ldd	r22, Y+39	; 0x27
    1e7c:	78 a5       	ldd	r23, Y+40	; 0x28
    1e7e:	89 a5       	ldd	r24, Y+41	; 0x29
    1e80:	9a a5       	ldd	r25, Y+42	; 0x2a
    1e82:	20 e0       	ldi	r18, 0x00	; 0
    1e84:	30 e0       	ldi	r19, 0x00	; 0
    1e86:	4a ef       	ldi	r20, 0xFA	; 250
    1e88:	54 e4       	ldi	r21, 0x44	; 68
    1e8a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e8e:	dc 01       	movw	r26, r24
    1e90:	cb 01       	movw	r24, r22
    1e92:	8b a3       	std	Y+35, r24	; 0x23
    1e94:	9c a3       	std	Y+36, r25	; 0x24
    1e96:	ad a3       	std	Y+37, r26	; 0x25
    1e98:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1e9a:	6b a1       	ldd	r22, Y+35	; 0x23
    1e9c:	7c a1       	ldd	r23, Y+36	; 0x24
    1e9e:	8d a1       	ldd	r24, Y+37	; 0x25
    1ea0:	9e a1       	ldd	r25, Y+38	; 0x26
    1ea2:	20 e0       	ldi	r18, 0x00	; 0
    1ea4:	30 e0       	ldi	r19, 0x00	; 0
    1ea6:	40 e8       	ldi	r20, 0x80	; 128
    1ea8:	5f e3       	ldi	r21, 0x3F	; 63
    1eaa:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1eae:	88 23       	and	r24, r24
    1eb0:	2c f4       	brge	.+10     	; 0x1ebc <LCD_WRITE_CMD+0x96>
		__ticks = 1;
    1eb2:	81 e0       	ldi	r24, 0x01	; 1
    1eb4:	90 e0       	ldi	r25, 0x00	; 0
    1eb6:	9a a3       	std	Y+34, r25	; 0x22
    1eb8:	89 a3       	std	Y+33, r24	; 0x21
    1eba:	3f c0       	rjmp	.+126    	; 0x1f3a <LCD_WRITE_CMD+0x114>
	else if (__tmp > 65535)
    1ebc:	6b a1       	ldd	r22, Y+35	; 0x23
    1ebe:	7c a1       	ldd	r23, Y+36	; 0x24
    1ec0:	8d a1       	ldd	r24, Y+37	; 0x25
    1ec2:	9e a1       	ldd	r25, Y+38	; 0x26
    1ec4:	20 e0       	ldi	r18, 0x00	; 0
    1ec6:	3f ef       	ldi	r19, 0xFF	; 255
    1ec8:	4f e7       	ldi	r20, 0x7F	; 127
    1eca:	57 e4       	ldi	r21, 0x47	; 71
    1ecc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1ed0:	18 16       	cp	r1, r24
    1ed2:	4c f5       	brge	.+82     	; 0x1f26 <LCD_WRITE_CMD+0x100>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ed4:	6f a1       	ldd	r22, Y+39	; 0x27
    1ed6:	78 a5       	ldd	r23, Y+40	; 0x28
    1ed8:	89 a5       	ldd	r24, Y+41	; 0x29
    1eda:	9a a5       	ldd	r25, Y+42	; 0x2a
    1edc:	20 e0       	ldi	r18, 0x00	; 0
    1ede:	30 e0       	ldi	r19, 0x00	; 0
    1ee0:	40 e2       	ldi	r20, 0x20	; 32
    1ee2:	51 e4       	ldi	r21, 0x41	; 65
    1ee4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ee8:	dc 01       	movw	r26, r24
    1eea:	cb 01       	movw	r24, r22
    1eec:	bc 01       	movw	r22, r24
    1eee:	cd 01       	movw	r24, r26
    1ef0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ef4:	dc 01       	movw	r26, r24
    1ef6:	cb 01       	movw	r24, r22
    1ef8:	9a a3       	std	Y+34, r25	; 0x22
    1efa:	89 a3       	std	Y+33, r24	; 0x21
    1efc:	0f c0       	rjmp	.+30     	; 0x1f1c <LCD_WRITE_CMD+0xf6>
    1efe:	88 ec       	ldi	r24, 0xC8	; 200
    1f00:	90 e0       	ldi	r25, 0x00	; 0
    1f02:	98 a3       	std	Y+32, r25	; 0x20
    1f04:	8f 8f       	std	Y+31, r24	; 0x1f
    1f06:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1f08:	98 a1       	ldd	r25, Y+32	; 0x20
    1f0a:	01 97       	sbiw	r24, 0x01	; 1
    1f0c:	f1 f7       	brne	.-4      	; 0x1f0a <LCD_WRITE_CMD+0xe4>
    1f0e:	98 a3       	std	Y+32, r25	; 0x20
    1f10:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f12:	89 a1       	ldd	r24, Y+33	; 0x21
    1f14:	9a a1       	ldd	r25, Y+34	; 0x22
    1f16:	01 97       	sbiw	r24, 0x01	; 1
    1f18:	9a a3       	std	Y+34, r25	; 0x22
    1f1a:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f1c:	89 a1       	ldd	r24, Y+33	; 0x21
    1f1e:	9a a1       	ldd	r25, Y+34	; 0x22
    1f20:	00 97       	sbiw	r24, 0x00	; 0
    1f22:	69 f7       	brne	.-38     	; 0x1efe <LCD_WRITE_CMD+0xd8>
    1f24:	14 c0       	rjmp	.+40     	; 0x1f4e <LCD_WRITE_CMD+0x128>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f26:	6b a1       	ldd	r22, Y+35	; 0x23
    1f28:	7c a1       	ldd	r23, Y+36	; 0x24
    1f2a:	8d a1       	ldd	r24, Y+37	; 0x25
    1f2c:	9e a1       	ldd	r25, Y+38	; 0x26
    1f2e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f32:	dc 01       	movw	r26, r24
    1f34:	cb 01       	movw	r24, r22
    1f36:	9a a3       	std	Y+34, r25	; 0x22
    1f38:	89 a3       	std	Y+33, r24	; 0x21
    1f3a:	89 a1       	ldd	r24, Y+33	; 0x21
    1f3c:	9a a1       	ldd	r25, Y+34	; 0x22
    1f3e:	9e 8f       	std	Y+30, r25	; 0x1e
    1f40:	8d 8f       	std	Y+29, r24	; 0x1d
    1f42:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1f44:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1f46:	01 97       	sbiw	r24, 0x01	; 1
    1f48:	f1 f7       	brne	.-4      	; 0x1f46 <LCD_WRITE_CMD+0x120>
    1f4a:	9e 8f       	std	Y+30, r25	; 0x1e
    1f4c:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	DIO_PIN_WRITE(LCD_ENABLE_PORT,LCD_ENABLE_PIN,LOW);
    1f4e:	80 e0       	ldi	r24, 0x00	; 0
    1f50:	60 e0       	ldi	r22, 0x00	; 0
    1f52:	40 e0       	ldi	r20, 0x00	; 0
    1f54:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>

	/***SEND_LOW_PART***/
	DIO_PORT_WRITE(LCD_DATA_REGESTER,((command << 4) | (LCD_DATA_REGESTER & 0x0f)));
    1f58:	8b a5       	ldd	r24, Y+43	; 0x2b
    1f5a:	88 2f       	mov	r24, r24
    1f5c:	90 e0       	ldi	r25, 0x00	; 0
    1f5e:	82 95       	swap	r24
    1f60:	92 95       	swap	r25
    1f62:	90 7f       	andi	r25, 0xF0	; 240
    1f64:	98 27       	eor	r25, r24
    1f66:	80 7f       	andi	r24, 0xF0	; 240
    1f68:	98 27       	eor	r25, r24
    1f6a:	81 60       	ori	r24, 0x01	; 1
    1f6c:	98 2f       	mov	r25, r24
    1f6e:	81 e0       	ldi	r24, 0x01	; 1
    1f70:	69 2f       	mov	r22, r25
    1f72:	0e 94 8c 08 	call	0x1118	; 0x1118 <DIO_PORT_WRITE>
	DIO_PIN_WRITE(LCD_ENABLE_PORT,LCD_ENABLE_PIN,HIGH);
    1f76:	80 e0       	ldi	r24, 0x00	; 0
    1f78:	60 e0       	ldi	r22, 0x00	; 0
    1f7a:	41 e0       	ldi	r20, 0x01	; 1
    1f7c:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    1f80:	80 e0       	ldi	r24, 0x00	; 0
    1f82:	90 e0       	ldi	r25, 0x00	; 0
    1f84:	a0 e8       	ldi	r26, 0x80	; 128
    1f86:	bf e3       	ldi	r27, 0x3F	; 63
    1f88:	89 8f       	std	Y+25, r24	; 0x19
    1f8a:	9a 8f       	std	Y+26, r25	; 0x1a
    1f8c:	ab 8f       	std	Y+27, r26	; 0x1b
    1f8e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f90:	69 8d       	ldd	r22, Y+25	; 0x19
    1f92:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1f94:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1f96:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1f98:	20 e0       	ldi	r18, 0x00	; 0
    1f9a:	30 e0       	ldi	r19, 0x00	; 0
    1f9c:	4a ef       	ldi	r20, 0xFA	; 250
    1f9e:	54 e4       	ldi	r21, 0x44	; 68
    1fa0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1fa4:	dc 01       	movw	r26, r24
    1fa6:	cb 01       	movw	r24, r22
    1fa8:	8d 8b       	std	Y+21, r24	; 0x15
    1faa:	9e 8b       	std	Y+22, r25	; 0x16
    1fac:	af 8b       	std	Y+23, r26	; 0x17
    1fae:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1fb0:	6d 89       	ldd	r22, Y+21	; 0x15
    1fb2:	7e 89       	ldd	r23, Y+22	; 0x16
    1fb4:	8f 89       	ldd	r24, Y+23	; 0x17
    1fb6:	98 8d       	ldd	r25, Y+24	; 0x18
    1fb8:	20 e0       	ldi	r18, 0x00	; 0
    1fba:	30 e0       	ldi	r19, 0x00	; 0
    1fbc:	40 e8       	ldi	r20, 0x80	; 128
    1fbe:	5f e3       	ldi	r21, 0x3F	; 63
    1fc0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1fc4:	88 23       	and	r24, r24
    1fc6:	2c f4       	brge	.+10     	; 0x1fd2 <LCD_WRITE_CMD+0x1ac>
		__ticks = 1;
    1fc8:	81 e0       	ldi	r24, 0x01	; 1
    1fca:	90 e0       	ldi	r25, 0x00	; 0
    1fcc:	9c 8b       	std	Y+20, r25	; 0x14
    1fce:	8b 8b       	std	Y+19, r24	; 0x13
    1fd0:	3f c0       	rjmp	.+126    	; 0x2050 <LCD_WRITE_CMD+0x22a>
	else if (__tmp > 65535)
    1fd2:	6d 89       	ldd	r22, Y+21	; 0x15
    1fd4:	7e 89       	ldd	r23, Y+22	; 0x16
    1fd6:	8f 89       	ldd	r24, Y+23	; 0x17
    1fd8:	98 8d       	ldd	r25, Y+24	; 0x18
    1fda:	20 e0       	ldi	r18, 0x00	; 0
    1fdc:	3f ef       	ldi	r19, 0xFF	; 255
    1fde:	4f e7       	ldi	r20, 0x7F	; 127
    1fe0:	57 e4       	ldi	r21, 0x47	; 71
    1fe2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1fe6:	18 16       	cp	r1, r24
    1fe8:	4c f5       	brge	.+82     	; 0x203c <LCD_WRITE_CMD+0x216>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1fea:	69 8d       	ldd	r22, Y+25	; 0x19
    1fec:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1fee:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1ff0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1ff2:	20 e0       	ldi	r18, 0x00	; 0
    1ff4:	30 e0       	ldi	r19, 0x00	; 0
    1ff6:	40 e2       	ldi	r20, 0x20	; 32
    1ff8:	51 e4       	ldi	r21, 0x41	; 65
    1ffa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ffe:	dc 01       	movw	r26, r24
    2000:	cb 01       	movw	r24, r22
    2002:	bc 01       	movw	r22, r24
    2004:	cd 01       	movw	r24, r26
    2006:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    200a:	dc 01       	movw	r26, r24
    200c:	cb 01       	movw	r24, r22
    200e:	9c 8b       	std	Y+20, r25	; 0x14
    2010:	8b 8b       	std	Y+19, r24	; 0x13
    2012:	0f c0       	rjmp	.+30     	; 0x2032 <LCD_WRITE_CMD+0x20c>
    2014:	88 ec       	ldi	r24, 0xC8	; 200
    2016:	90 e0       	ldi	r25, 0x00	; 0
    2018:	9a 8b       	std	Y+18, r25	; 0x12
    201a:	89 8b       	std	Y+17, r24	; 0x11
    201c:	89 89       	ldd	r24, Y+17	; 0x11
    201e:	9a 89       	ldd	r25, Y+18	; 0x12
    2020:	01 97       	sbiw	r24, 0x01	; 1
    2022:	f1 f7       	brne	.-4      	; 0x2020 <LCD_WRITE_CMD+0x1fa>
    2024:	9a 8b       	std	Y+18, r25	; 0x12
    2026:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2028:	8b 89       	ldd	r24, Y+19	; 0x13
    202a:	9c 89       	ldd	r25, Y+20	; 0x14
    202c:	01 97       	sbiw	r24, 0x01	; 1
    202e:	9c 8b       	std	Y+20, r25	; 0x14
    2030:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2032:	8b 89       	ldd	r24, Y+19	; 0x13
    2034:	9c 89       	ldd	r25, Y+20	; 0x14
    2036:	00 97       	sbiw	r24, 0x00	; 0
    2038:	69 f7       	brne	.-38     	; 0x2014 <LCD_WRITE_CMD+0x1ee>
    203a:	14 c0       	rjmp	.+40     	; 0x2064 <LCD_WRITE_CMD+0x23e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    203c:	6d 89       	ldd	r22, Y+21	; 0x15
    203e:	7e 89       	ldd	r23, Y+22	; 0x16
    2040:	8f 89       	ldd	r24, Y+23	; 0x17
    2042:	98 8d       	ldd	r25, Y+24	; 0x18
    2044:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2048:	dc 01       	movw	r26, r24
    204a:	cb 01       	movw	r24, r22
    204c:	9c 8b       	std	Y+20, r25	; 0x14
    204e:	8b 8b       	std	Y+19, r24	; 0x13
    2050:	8b 89       	ldd	r24, Y+19	; 0x13
    2052:	9c 89       	ldd	r25, Y+20	; 0x14
    2054:	98 8b       	std	Y+16, r25	; 0x10
    2056:	8f 87       	std	Y+15, r24	; 0x0f
    2058:	8f 85       	ldd	r24, Y+15	; 0x0f
    205a:	98 89       	ldd	r25, Y+16	; 0x10
    205c:	01 97       	sbiw	r24, 0x01	; 1
    205e:	f1 f7       	brne	.-4      	; 0x205c <LCD_WRITE_CMD+0x236>
    2060:	98 8b       	std	Y+16, r25	; 0x10
    2062:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_PIN_WRITE(LCD_ENABLE_PORT,LCD_ENABLE_PIN,LOW);
    2064:	80 e0       	ldi	r24, 0x00	; 0
    2066:	60 e0       	ldi	r22, 0x00	; 0
    2068:	40 e0       	ldi	r20, 0x00	; 0
    206a:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    206e:	80 e0       	ldi	r24, 0x00	; 0
    2070:	90 e0       	ldi	r25, 0x00	; 0
    2072:	a0 ea       	ldi	r26, 0xA0	; 160
    2074:	b0 e4       	ldi	r27, 0x40	; 64
    2076:	8b 87       	std	Y+11, r24	; 0x0b
    2078:	9c 87       	std	Y+12, r25	; 0x0c
    207a:	ad 87       	std	Y+13, r26	; 0x0d
    207c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    207e:	6b 85       	ldd	r22, Y+11	; 0x0b
    2080:	7c 85       	ldd	r23, Y+12	; 0x0c
    2082:	8d 85       	ldd	r24, Y+13	; 0x0d
    2084:	9e 85       	ldd	r25, Y+14	; 0x0e
    2086:	20 e0       	ldi	r18, 0x00	; 0
    2088:	30 e0       	ldi	r19, 0x00	; 0
    208a:	4a ef       	ldi	r20, 0xFA	; 250
    208c:	54 e4       	ldi	r21, 0x44	; 68
    208e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2092:	dc 01       	movw	r26, r24
    2094:	cb 01       	movw	r24, r22
    2096:	8f 83       	std	Y+7, r24	; 0x07
    2098:	98 87       	std	Y+8, r25	; 0x08
    209a:	a9 87       	std	Y+9, r26	; 0x09
    209c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    209e:	6f 81       	ldd	r22, Y+7	; 0x07
    20a0:	78 85       	ldd	r23, Y+8	; 0x08
    20a2:	89 85       	ldd	r24, Y+9	; 0x09
    20a4:	9a 85       	ldd	r25, Y+10	; 0x0a
    20a6:	20 e0       	ldi	r18, 0x00	; 0
    20a8:	30 e0       	ldi	r19, 0x00	; 0
    20aa:	40 e8       	ldi	r20, 0x80	; 128
    20ac:	5f e3       	ldi	r21, 0x3F	; 63
    20ae:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    20b2:	88 23       	and	r24, r24
    20b4:	2c f4       	brge	.+10     	; 0x20c0 <LCD_WRITE_CMD+0x29a>
		__ticks = 1;
    20b6:	81 e0       	ldi	r24, 0x01	; 1
    20b8:	90 e0       	ldi	r25, 0x00	; 0
    20ba:	9e 83       	std	Y+6, r25	; 0x06
    20bc:	8d 83       	std	Y+5, r24	; 0x05
    20be:	3f c0       	rjmp	.+126    	; 0x213e <LCD_WRITE_CMD+0x318>
	else if (__tmp > 65535)
    20c0:	6f 81       	ldd	r22, Y+7	; 0x07
    20c2:	78 85       	ldd	r23, Y+8	; 0x08
    20c4:	89 85       	ldd	r24, Y+9	; 0x09
    20c6:	9a 85       	ldd	r25, Y+10	; 0x0a
    20c8:	20 e0       	ldi	r18, 0x00	; 0
    20ca:	3f ef       	ldi	r19, 0xFF	; 255
    20cc:	4f e7       	ldi	r20, 0x7F	; 127
    20ce:	57 e4       	ldi	r21, 0x47	; 71
    20d0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    20d4:	18 16       	cp	r1, r24
    20d6:	4c f5       	brge	.+82     	; 0x212a <LCD_WRITE_CMD+0x304>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    20d8:	6b 85       	ldd	r22, Y+11	; 0x0b
    20da:	7c 85       	ldd	r23, Y+12	; 0x0c
    20dc:	8d 85       	ldd	r24, Y+13	; 0x0d
    20de:	9e 85       	ldd	r25, Y+14	; 0x0e
    20e0:	20 e0       	ldi	r18, 0x00	; 0
    20e2:	30 e0       	ldi	r19, 0x00	; 0
    20e4:	40 e2       	ldi	r20, 0x20	; 32
    20e6:	51 e4       	ldi	r21, 0x41	; 65
    20e8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20ec:	dc 01       	movw	r26, r24
    20ee:	cb 01       	movw	r24, r22
    20f0:	bc 01       	movw	r22, r24
    20f2:	cd 01       	movw	r24, r26
    20f4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    20f8:	dc 01       	movw	r26, r24
    20fa:	cb 01       	movw	r24, r22
    20fc:	9e 83       	std	Y+6, r25	; 0x06
    20fe:	8d 83       	std	Y+5, r24	; 0x05
    2100:	0f c0       	rjmp	.+30     	; 0x2120 <LCD_WRITE_CMD+0x2fa>
    2102:	88 ec       	ldi	r24, 0xC8	; 200
    2104:	90 e0       	ldi	r25, 0x00	; 0
    2106:	9c 83       	std	Y+4, r25	; 0x04
    2108:	8b 83       	std	Y+3, r24	; 0x03
    210a:	8b 81       	ldd	r24, Y+3	; 0x03
    210c:	9c 81       	ldd	r25, Y+4	; 0x04
    210e:	01 97       	sbiw	r24, 0x01	; 1
    2110:	f1 f7       	brne	.-4      	; 0x210e <LCD_WRITE_CMD+0x2e8>
    2112:	9c 83       	std	Y+4, r25	; 0x04
    2114:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2116:	8d 81       	ldd	r24, Y+5	; 0x05
    2118:	9e 81       	ldd	r25, Y+6	; 0x06
    211a:	01 97       	sbiw	r24, 0x01	; 1
    211c:	9e 83       	std	Y+6, r25	; 0x06
    211e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2120:	8d 81       	ldd	r24, Y+5	; 0x05
    2122:	9e 81       	ldd	r25, Y+6	; 0x06
    2124:	00 97       	sbiw	r24, 0x00	; 0
    2126:	69 f7       	brne	.-38     	; 0x2102 <LCD_WRITE_CMD+0x2dc>
    2128:	14 c0       	rjmp	.+40     	; 0x2152 <LCD_WRITE_CMD+0x32c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    212a:	6f 81       	ldd	r22, Y+7	; 0x07
    212c:	78 85       	ldd	r23, Y+8	; 0x08
    212e:	89 85       	ldd	r24, Y+9	; 0x09
    2130:	9a 85       	ldd	r25, Y+10	; 0x0a
    2132:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2136:	dc 01       	movw	r26, r24
    2138:	cb 01       	movw	r24, r22
    213a:	9e 83       	std	Y+6, r25	; 0x06
    213c:	8d 83       	std	Y+5, r24	; 0x05
    213e:	8d 81       	ldd	r24, Y+5	; 0x05
    2140:	9e 81       	ldd	r25, Y+6	; 0x06
    2142:	9a 83       	std	Y+2, r25	; 0x02
    2144:	89 83       	std	Y+1, r24	; 0x01
    2146:	89 81       	ldd	r24, Y+1	; 0x01
    2148:	9a 81       	ldd	r25, Y+2	; 0x02
    214a:	01 97       	sbiw	r24, 0x01	; 1
    214c:	f1 f7       	brne	.-4      	; 0x214a <LCD_WRITE_CMD+0x324>
    214e:	9a 83       	std	Y+2, r25	; 0x02
    2150:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(5);
}
    2152:	ab 96       	adiw	r28, 0x2b	; 43
    2154:	0f b6       	in	r0, 0x3f	; 63
    2156:	f8 94       	cli
    2158:	de bf       	out	0x3e, r29	; 62
    215a:	0f be       	out	0x3f, r0	; 63
    215c:	cd bf       	out	0x3d, r28	; 61
    215e:	cf 91       	pop	r28
    2160:	df 91       	pop	r29
    2162:	08 95       	ret

00002164 <LCD_WRITE_CHR>:

void LCD_WRITE_CHR(u8 character)
{
    2164:	df 93       	push	r29
    2166:	cf 93       	push	r28
    2168:	cd b7       	in	r28, 0x3d	; 61
    216a:	de b7       	in	r29, 0x3e	; 62
    216c:	ab 97       	sbiw	r28, 0x2b	; 43
    216e:	0f b6       	in	r0, 0x3f	; 63
    2170:	f8 94       	cli
    2172:	de bf       	out	0x3e, r29	; 62
    2174:	0f be       	out	0x3f, r0	; 63
    2176:	cd bf       	out	0x3d, r28	; 61
    2178:	8b a7       	std	Y+43, r24	; 0x2b
	DIO_PIN_WRITE(LCD_RS_PORT,LCD_RS_PIN,HIGH);
    217a:	80 e0       	ldi	r24, 0x00	; 0
    217c:	61 e0       	ldi	r22, 0x01	; 1
    217e:	41 e0       	ldi	r20, 0x01	; 1
    2180:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
	DIO_PIN_WRITE(LCD_ENABLE_PORT,LCD_ENABLE_PIN,LOW);
    2184:	80 e0       	ldi	r24, 0x00	; 0
    2186:	60 e0       	ldi	r22, 0x00	; 0
    2188:	40 e0       	ldi	r20, 0x00	; 0
    218a:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>

	/***SEND_HIGH_PART***/
	DIO_PORT_WRITE(LCD_DATA_REGESTER,((character & 0xf0) | (LCD_DATA_REGESTER & 0x0f)));
    218e:	8b a5       	ldd	r24, Y+43	; 0x2b
    2190:	80 7f       	andi	r24, 0xF0	; 240
    2192:	81 60       	ori	r24, 0x01	; 1
    2194:	98 2f       	mov	r25, r24
    2196:	81 e0       	ldi	r24, 0x01	; 1
    2198:	69 2f       	mov	r22, r25
    219a:	0e 94 8c 08 	call	0x1118	; 0x1118 <DIO_PORT_WRITE>
	DIO_PIN_WRITE(LCD_ENABLE_PORT,LCD_ENABLE_PIN,HIGH);
    219e:	80 e0       	ldi	r24, 0x00	; 0
    21a0:	60 e0       	ldi	r22, 0x00	; 0
    21a2:	41 e0       	ldi	r20, 0x01	; 1
    21a4:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    21a8:	80 e0       	ldi	r24, 0x00	; 0
    21aa:	90 e0       	ldi	r25, 0x00	; 0
    21ac:	a0 e8       	ldi	r26, 0x80	; 128
    21ae:	bf e3       	ldi	r27, 0x3F	; 63
    21b0:	8f a3       	std	Y+39, r24	; 0x27
    21b2:	98 a7       	std	Y+40, r25	; 0x28
    21b4:	a9 a7       	std	Y+41, r26	; 0x29
    21b6:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21b8:	6f a1       	ldd	r22, Y+39	; 0x27
    21ba:	78 a5       	ldd	r23, Y+40	; 0x28
    21bc:	89 a5       	ldd	r24, Y+41	; 0x29
    21be:	9a a5       	ldd	r25, Y+42	; 0x2a
    21c0:	20 e0       	ldi	r18, 0x00	; 0
    21c2:	30 e0       	ldi	r19, 0x00	; 0
    21c4:	4a ef       	ldi	r20, 0xFA	; 250
    21c6:	54 e4       	ldi	r21, 0x44	; 68
    21c8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21cc:	dc 01       	movw	r26, r24
    21ce:	cb 01       	movw	r24, r22
    21d0:	8b a3       	std	Y+35, r24	; 0x23
    21d2:	9c a3       	std	Y+36, r25	; 0x24
    21d4:	ad a3       	std	Y+37, r26	; 0x25
    21d6:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    21d8:	6b a1       	ldd	r22, Y+35	; 0x23
    21da:	7c a1       	ldd	r23, Y+36	; 0x24
    21dc:	8d a1       	ldd	r24, Y+37	; 0x25
    21de:	9e a1       	ldd	r25, Y+38	; 0x26
    21e0:	20 e0       	ldi	r18, 0x00	; 0
    21e2:	30 e0       	ldi	r19, 0x00	; 0
    21e4:	40 e8       	ldi	r20, 0x80	; 128
    21e6:	5f e3       	ldi	r21, 0x3F	; 63
    21e8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    21ec:	88 23       	and	r24, r24
    21ee:	2c f4       	brge	.+10     	; 0x21fa <LCD_WRITE_CHR+0x96>
		__ticks = 1;
    21f0:	81 e0       	ldi	r24, 0x01	; 1
    21f2:	90 e0       	ldi	r25, 0x00	; 0
    21f4:	9a a3       	std	Y+34, r25	; 0x22
    21f6:	89 a3       	std	Y+33, r24	; 0x21
    21f8:	3f c0       	rjmp	.+126    	; 0x2278 <LCD_WRITE_CHR+0x114>
	else if (__tmp > 65535)
    21fa:	6b a1       	ldd	r22, Y+35	; 0x23
    21fc:	7c a1       	ldd	r23, Y+36	; 0x24
    21fe:	8d a1       	ldd	r24, Y+37	; 0x25
    2200:	9e a1       	ldd	r25, Y+38	; 0x26
    2202:	20 e0       	ldi	r18, 0x00	; 0
    2204:	3f ef       	ldi	r19, 0xFF	; 255
    2206:	4f e7       	ldi	r20, 0x7F	; 127
    2208:	57 e4       	ldi	r21, 0x47	; 71
    220a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    220e:	18 16       	cp	r1, r24
    2210:	4c f5       	brge	.+82     	; 0x2264 <LCD_WRITE_CHR+0x100>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2212:	6f a1       	ldd	r22, Y+39	; 0x27
    2214:	78 a5       	ldd	r23, Y+40	; 0x28
    2216:	89 a5       	ldd	r24, Y+41	; 0x29
    2218:	9a a5       	ldd	r25, Y+42	; 0x2a
    221a:	20 e0       	ldi	r18, 0x00	; 0
    221c:	30 e0       	ldi	r19, 0x00	; 0
    221e:	40 e2       	ldi	r20, 0x20	; 32
    2220:	51 e4       	ldi	r21, 0x41	; 65
    2222:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2226:	dc 01       	movw	r26, r24
    2228:	cb 01       	movw	r24, r22
    222a:	bc 01       	movw	r22, r24
    222c:	cd 01       	movw	r24, r26
    222e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2232:	dc 01       	movw	r26, r24
    2234:	cb 01       	movw	r24, r22
    2236:	9a a3       	std	Y+34, r25	; 0x22
    2238:	89 a3       	std	Y+33, r24	; 0x21
    223a:	0f c0       	rjmp	.+30     	; 0x225a <LCD_WRITE_CHR+0xf6>
    223c:	88 ec       	ldi	r24, 0xC8	; 200
    223e:	90 e0       	ldi	r25, 0x00	; 0
    2240:	98 a3       	std	Y+32, r25	; 0x20
    2242:	8f 8f       	std	Y+31, r24	; 0x1f
    2244:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2246:	98 a1       	ldd	r25, Y+32	; 0x20
    2248:	01 97       	sbiw	r24, 0x01	; 1
    224a:	f1 f7       	brne	.-4      	; 0x2248 <LCD_WRITE_CHR+0xe4>
    224c:	98 a3       	std	Y+32, r25	; 0x20
    224e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2250:	89 a1       	ldd	r24, Y+33	; 0x21
    2252:	9a a1       	ldd	r25, Y+34	; 0x22
    2254:	01 97       	sbiw	r24, 0x01	; 1
    2256:	9a a3       	std	Y+34, r25	; 0x22
    2258:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    225a:	89 a1       	ldd	r24, Y+33	; 0x21
    225c:	9a a1       	ldd	r25, Y+34	; 0x22
    225e:	00 97       	sbiw	r24, 0x00	; 0
    2260:	69 f7       	brne	.-38     	; 0x223c <LCD_WRITE_CHR+0xd8>
    2262:	14 c0       	rjmp	.+40     	; 0x228c <LCD_WRITE_CHR+0x128>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2264:	6b a1       	ldd	r22, Y+35	; 0x23
    2266:	7c a1       	ldd	r23, Y+36	; 0x24
    2268:	8d a1       	ldd	r24, Y+37	; 0x25
    226a:	9e a1       	ldd	r25, Y+38	; 0x26
    226c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2270:	dc 01       	movw	r26, r24
    2272:	cb 01       	movw	r24, r22
    2274:	9a a3       	std	Y+34, r25	; 0x22
    2276:	89 a3       	std	Y+33, r24	; 0x21
    2278:	89 a1       	ldd	r24, Y+33	; 0x21
    227a:	9a a1       	ldd	r25, Y+34	; 0x22
    227c:	9e 8f       	std	Y+30, r25	; 0x1e
    227e:	8d 8f       	std	Y+29, r24	; 0x1d
    2280:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2282:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2284:	01 97       	sbiw	r24, 0x01	; 1
    2286:	f1 f7       	brne	.-4      	; 0x2284 <LCD_WRITE_CHR+0x120>
    2288:	9e 8f       	std	Y+30, r25	; 0x1e
    228a:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	DIO_PIN_WRITE(LCD_ENABLE_PORT,LCD_ENABLE_PIN,LOW);
    228c:	80 e0       	ldi	r24, 0x00	; 0
    228e:	60 e0       	ldi	r22, 0x00	; 0
    2290:	40 e0       	ldi	r20, 0x00	; 0
    2292:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>

	/***SEND_LOW_PART***/
	DIO_PORT_WRITE(LCD_DATA_REGESTER,((character << 4) | (LCD_DATA_REGESTER & 0x0f)));
    2296:	8b a5       	ldd	r24, Y+43	; 0x2b
    2298:	88 2f       	mov	r24, r24
    229a:	90 e0       	ldi	r25, 0x00	; 0
    229c:	82 95       	swap	r24
    229e:	92 95       	swap	r25
    22a0:	90 7f       	andi	r25, 0xF0	; 240
    22a2:	98 27       	eor	r25, r24
    22a4:	80 7f       	andi	r24, 0xF0	; 240
    22a6:	98 27       	eor	r25, r24
    22a8:	81 60       	ori	r24, 0x01	; 1
    22aa:	98 2f       	mov	r25, r24
    22ac:	81 e0       	ldi	r24, 0x01	; 1
    22ae:	69 2f       	mov	r22, r25
    22b0:	0e 94 8c 08 	call	0x1118	; 0x1118 <DIO_PORT_WRITE>
	DIO_PIN_WRITE(LCD_ENABLE_PORT,LCD_ENABLE_PIN,HIGH);
    22b4:	80 e0       	ldi	r24, 0x00	; 0
    22b6:	60 e0       	ldi	r22, 0x00	; 0
    22b8:	41 e0       	ldi	r20, 0x01	; 1
    22ba:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    22be:	80 e0       	ldi	r24, 0x00	; 0
    22c0:	90 e0       	ldi	r25, 0x00	; 0
    22c2:	a0 e8       	ldi	r26, 0x80	; 128
    22c4:	bf e3       	ldi	r27, 0x3F	; 63
    22c6:	89 8f       	std	Y+25, r24	; 0x19
    22c8:	9a 8f       	std	Y+26, r25	; 0x1a
    22ca:	ab 8f       	std	Y+27, r26	; 0x1b
    22cc:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    22ce:	69 8d       	ldd	r22, Y+25	; 0x19
    22d0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    22d2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    22d4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    22d6:	20 e0       	ldi	r18, 0x00	; 0
    22d8:	30 e0       	ldi	r19, 0x00	; 0
    22da:	4a ef       	ldi	r20, 0xFA	; 250
    22dc:	54 e4       	ldi	r21, 0x44	; 68
    22de:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22e2:	dc 01       	movw	r26, r24
    22e4:	cb 01       	movw	r24, r22
    22e6:	8d 8b       	std	Y+21, r24	; 0x15
    22e8:	9e 8b       	std	Y+22, r25	; 0x16
    22ea:	af 8b       	std	Y+23, r26	; 0x17
    22ec:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    22ee:	6d 89       	ldd	r22, Y+21	; 0x15
    22f0:	7e 89       	ldd	r23, Y+22	; 0x16
    22f2:	8f 89       	ldd	r24, Y+23	; 0x17
    22f4:	98 8d       	ldd	r25, Y+24	; 0x18
    22f6:	20 e0       	ldi	r18, 0x00	; 0
    22f8:	30 e0       	ldi	r19, 0x00	; 0
    22fa:	40 e8       	ldi	r20, 0x80	; 128
    22fc:	5f e3       	ldi	r21, 0x3F	; 63
    22fe:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2302:	88 23       	and	r24, r24
    2304:	2c f4       	brge	.+10     	; 0x2310 <LCD_WRITE_CHR+0x1ac>
		__ticks = 1;
    2306:	81 e0       	ldi	r24, 0x01	; 1
    2308:	90 e0       	ldi	r25, 0x00	; 0
    230a:	9c 8b       	std	Y+20, r25	; 0x14
    230c:	8b 8b       	std	Y+19, r24	; 0x13
    230e:	3f c0       	rjmp	.+126    	; 0x238e <LCD_WRITE_CHR+0x22a>
	else if (__tmp > 65535)
    2310:	6d 89       	ldd	r22, Y+21	; 0x15
    2312:	7e 89       	ldd	r23, Y+22	; 0x16
    2314:	8f 89       	ldd	r24, Y+23	; 0x17
    2316:	98 8d       	ldd	r25, Y+24	; 0x18
    2318:	20 e0       	ldi	r18, 0x00	; 0
    231a:	3f ef       	ldi	r19, 0xFF	; 255
    231c:	4f e7       	ldi	r20, 0x7F	; 127
    231e:	57 e4       	ldi	r21, 0x47	; 71
    2320:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2324:	18 16       	cp	r1, r24
    2326:	4c f5       	brge	.+82     	; 0x237a <LCD_WRITE_CHR+0x216>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2328:	69 8d       	ldd	r22, Y+25	; 0x19
    232a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    232c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    232e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2330:	20 e0       	ldi	r18, 0x00	; 0
    2332:	30 e0       	ldi	r19, 0x00	; 0
    2334:	40 e2       	ldi	r20, 0x20	; 32
    2336:	51 e4       	ldi	r21, 0x41	; 65
    2338:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    233c:	dc 01       	movw	r26, r24
    233e:	cb 01       	movw	r24, r22
    2340:	bc 01       	movw	r22, r24
    2342:	cd 01       	movw	r24, r26
    2344:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2348:	dc 01       	movw	r26, r24
    234a:	cb 01       	movw	r24, r22
    234c:	9c 8b       	std	Y+20, r25	; 0x14
    234e:	8b 8b       	std	Y+19, r24	; 0x13
    2350:	0f c0       	rjmp	.+30     	; 0x2370 <LCD_WRITE_CHR+0x20c>
    2352:	88 ec       	ldi	r24, 0xC8	; 200
    2354:	90 e0       	ldi	r25, 0x00	; 0
    2356:	9a 8b       	std	Y+18, r25	; 0x12
    2358:	89 8b       	std	Y+17, r24	; 0x11
    235a:	89 89       	ldd	r24, Y+17	; 0x11
    235c:	9a 89       	ldd	r25, Y+18	; 0x12
    235e:	01 97       	sbiw	r24, 0x01	; 1
    2360:	f1 f7       	brne	.-4      	; 0x235e <LCD_WRITE_CHR+0x1fa>
    2362:	9a 8b       	std	Y+18, r25	; 0x12
    2364:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2366:	8b 89       	ldd	r24, Y+19	; 0x13
    2368:	9c 89       	ldd	r25, Y+20	; 0x14
    236a:	01 97       	sbiw	r24, 0x01	; 1
    236c:	9c 8b       	std	Y+20, r25	; 0x14
    236e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2370:	8b 89       	ldd	r24, Y+19	; 0x13
    2372:	9c 89       	ldd	r25, Y+20	; 0x14
    2374:	00 97       	sbiw	r24, 0x00	; 0
    2376:	69 f7       	brne	.-38     	; 0x2352 <LCD_WRITE_CHR+0x1ee>
    2378:	14 c0       	rjmp	.+40     	; 0x23a2 <LCD_WRITE_CHR+0x23e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    237a:	6d 89       	ldd	r22, Y+21	; 0x15
    237c:	7e 89       	ldd	r23, Y+22	; 0x16
    237e:	8f 89       	ldd	r24, Y+23	; 0x17
    2380:	98 8d       	ldd	r25, Y+24	; 0x18
    2382:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2386:	dc 01       	movw	r26, r24
    2388:	cb 01       	movw	r24, r22
    238a:	9c 8b       	std	Y+20, r25	; 0x14
    238c:	8b 8b       	std	Y+19, r24	; 0x13
    238e:	8b 89       	ldd	r24, Y+19	; 0x13
    2390:	9c 89       	ldd	r25, Y+20	; 0x14
    2392:	98 8b       	std	Y+16, r25	; 0x10
    2394:	8f 87       	std	Y+15, r24	; 0x0f
    2396:	8f 85       	ldd	r24, Y+15	; 0x0f
    2398:	98 89       	ldd	r25, Y+16	; 0x10
    239a:	01 97       	sbiw	r24, 0x01	; 1
    239c:	f1 f7       	brne	.-4      	; 0x239a <LCD_WRITE_CHR+0x236>
    239e:	98 8b       	std	Y+16, r25	; 0x10
    23a0:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_PIN_WRITE(LCD_ENABLE_PORT,LCD_ENABLE_PIN,LOW);
    23a2:	80 e0       	ldi	r24, 0x00	; 0
    23a4:	60 e0       	ldi	r22, 0x00	; 0
    23a6:	40 e0       	ldi	r20, 0x00	; 0
    23a8:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    23ac:	80 e0       	ldi	r24, 0x00	; 0
    23ae:	90 e0       	ldi	r25, 0x00	; 0
    23b0:	a0 ea       	ldi	r26, 0xA0	; 160
    23b2:	b0 e4       	ldi	r27, 0x40	; 64
    23b4:	8b 87       	std	Y+11, r24	; 0x0b
    23b6:	9c 87       	std	Y+12, r25	; 0x0c
    23b8:	ad 87       	std	Y+13, r26	; 0x0d
    23ba:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    23bc:	6b 85       	ldd	r22, Y+11	; 0x0b
    23be:	7c 85       	ldd	r23, Y+12	; 0x0c
    23c0:	8d 85       	ldd	r24, Y+13	; 0x0d
    23c2:	9e 85       	ldd	r25, Y+14	; 0x0e
    23c4:	20 e0       	ldi	r18, 0x00	; 0
    23c6:	30 e0       	ldi	r19, 0x00	; 0
    23c8:	4a ef       	ldi	r20, 0xFA	; 250
    23ca:	54 e4       	ldi	r21, 0x44	; 68
    23cc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23d0:	dc 01       	movw	r26, r24
    23d2:	cb 01       	movw	r24, r22
    23d4:	8f 83       	std	Y+7, r24	; 0x07
    23d6:	98 87       	std	Y+8, r25	; 0x08
    23d8:	a9 87       	std	Y+9, r26	; 0x09
    23da:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    23dc:	6f 81       	ldd	r22, Y+7	; 0x07
    23de:	78 85       	ldd	r23, Y+8	; 0x08
    23e0:	89 85       	ldd	r24, Y+9	; 0x09
    23e2:	9a 85       	ldd	r25, Y+10	; 0x0a
    23e4:	20 e0       	ldi	r18, 0x00	; 0
    23e6:	30 e0       	ldi	r19, 0x00	; 0
    23e8:	40 e8       	ldi	r20, 0x80	; 128
    23ea:	5f e3       	ldi	r21, 0x3F	; 63
    23ec:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    23f0:	88 23       	and	r24, r24
    23f2:	2c f4       	brge	.+10     	; 0x23fe <LCD_WRITE_CHR+0x29a>
		__ticks = 1;
    23f4:	81 e0       	ldi	r24, 0x01	; 1
    23f6:	90 e0       	ldi	r25, 0x00	; 0
    23f8:	9e 83       	std	Y+6, r25	; 0x06
    23fa:	8d 83       	std	Y+5, r24	; 0x05
    23fc:	3f c0       	rjmp	.+126    	; 0x247c <LCD_WRITE_CHR+0x318>
	else if (__tmp > 65535)
    23fe:	6f 81       	ldd	r22, Y+7	; 0x07
    2400:	78 85       	ldd	r23, Y+8	; 0x08
    2402:	89 85       	ldd	r24, Y+9	; 0x09
    2404:	9a 85       	ldd	r25, Y+10	; 0x0a
    2406:	20 e0       	ldi	r18, 0x00	; 0
    2408:	3f ef       	ldi	r19, 0xFF	; 255
    240a:	4f e7       	ldi	r20, 0x7F	; 127
    240c:	57 e4       	ldi	r21, 0x47	; 71
    240e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2412:	18 16       	cp	r1, r24
    2414:	4c f5       	brge	.+82     	; 0x2468 <LCD_WRITE_CHR+0x304>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2416:	6b 85       	ldd	r22, Y+11	; 0x0b
    2418:	7c 85       	ldd	r23, Y+12	; 0x0c
    241a:	8d 85       	ldd	r24, Y+13	; 0x0d
    241c:	9e 85       	ldd	r25, Y+14	; 0x0e
    241e:	20 e0       	ldi	r18, 0x00	; 0
    2420:	30 e0       	ldi	r19, 0x00	; 0
    2422:	40 e2       	ldi	r20, 0x20	; 32
    2424:	51 e4       	ldi	r21, 0x41	; 65
    2426:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    242a:	dc 01       	movw	r26, r24
    242c:	cb 01       	movw	r24, r22
    242e:	bc 01       	movw	r22, r24
    2430:	cd 01       	movw	r24, r26
    2432:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2436:	dc 01       	movw	r26, r24
    2438:	cb 01       	movw	r24, r22
    243a:	9e 83       	std	Y+6, r25	; 0x06
    243c:	8d 83       	std	Y+5, r24	; 0x05
    243e:	0f c0       	rjmp	.+30     	; 0x245e <LCD_WRITE_CHR+0x2fa>
    2440:	88 ec       	ldi	r24, 0xC8	; 200
    2442:	90 e0       	ldi	r25, 0x00	; 0
    2444:	9c 83       	std	Y+4, r25	; 0x04
    2446:	8b 83       	std	Y+3, r24	; 0x03
    2448:	8b 81       	ldd	r24, Y+3	; 0x03
    244a:	9c 81       	ldd	r25, Y+4	; 0x04
    244c:	01 97       	sbiw	r24, 0x01	; 1
    244e:	f1 f7       	brne	.-4      	; 0x244c <LCD_WRITE_CHR+0x2e8>
    2450:	9c 83       	std	Y+4, r25	; 0x04
    2452:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2454:	8d 81       	ldd	r24, Y+5	; 0x05
    2456:	9e 81       	ldd	r25, Y+6	; 0x06
    2458:	01 97       	sbiw	r24, 0x01	; 1
    245a:	9e 83       	std	Y+6, r25	; 0x06
    245c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    245e:	8d 81       	ldd	r24, Y+5	; 0x05
    2460:	9e 81       	ldd	r25, Y+6	; 0x06
    2462:	00 97       	sbiw	r24, 0x00	; 0
    2464:	69 f7       	brne	.-38     	; 0x2440 <LCD_WRITE_CHR+0x2dc>
    2466:	14 c0       	rjmp	.+40     	; 0x2490 <LCD_WRITE_CHR+0x32c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2468:	6f 81       	ldd	r22, Y+7	; 0x07
    246a:	78 85       	ldd	r23, Y+8	; 0x08
    246c:	89 85       	ldd	r24, Y+9	; 0x09
    246e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2470:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2474:	dc 01       	movw	r26, r24
    2476:	cb 01       	movw	r24, r22
    2478:	9e 83       	std	Y+6, r25	; 0x06
    247a:	8d 83       	std	Y+5, r24	; 0x05
    247c:	8d 81       	ldd	r24, Y+5	; 0x05
    247e:	9e 81       	ldd	r25, Y+6	; 0x06
    2480:	9a 83       	std	Y+2, r25	; 0x02
    2482:	89 83       	std	Y+1, r24	; 0x01
    2484:	89 81       	ldd	r24, Y+1	; 0x01
    2486:	9a 81       	ldd	r25, Y+2	; 0x02
    2488:	01 97       	sbiw	r24, 0x01	; 1
    248a:	f1 f7       	brne	.-4      	; 0x2488 <LCD_WRITE_CHR+0x324>
    248c:	9a 83       	std	Y+2, r25	; 0x02
    248e:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(5);

}
    2490:	ab 96       	adiw	r28, 0x2b	; 43
    2492:	0f b6       	in	r0, 0x3f	; 63
    2494:	f8 94       	cli
    2496:	de bf       	out	0x3e, r29	; 62
    2498:	0f be       	out	0x3f, r0	; 63
    249a:	cd bf       	out	0x3d, r28	; 61
    249c:	cf 91       	pop	r28
    249e:	df 91       	pop	r29
    24a0:	08 95       	ret

000024a2 <LCD_WRITE_STR>:

void LCD_WRITE_STR(s8*p)
{
    24a2:	df 93       	push	r29
    24a4:	cf 93       	push	r28
    24a6:	00 d0       	rcall	.+0      	; 0x24a8 <LCD_WRITE_STR+0x6>
    24a8:	0f 92       	push	r0
    24aa:	cd b7       	in	r28, 0x3d	; 61
    24ac:	de b7       	in	r29, 0x3e	; 62
    24ae:	9b 83       	std	Y+3, r25	; 0x03
    24b0:	8a 83       	std	Y+2, r24	; 0x02
	u8 i = 0;
    24b2:	19 82       	std	Y+1, r1	; 0x01
    24b4:	0e c0       	rjmp	.+28     	; 0x24d2 <LCD_WRITE_STR+0x30>
	while(p[i] != '\0')
	{
	LCD_WRITE_CHR(p[i]);
    24b6:	89 81       	ldd	r24, Y+1	; 0x01
    24b8:	28 2f       	mov	r18, r24
    24ba:	30 e0       	ldi	r19, 0x00	; 0
    24bc:	8a 81       	ldd	r24, Y+2	; 0x02
    24be:	9b 81       	ldd	r25, Y+3	; 0x03
    24c0:	fc 01       	movw	r30, r24
    24c2:	e2 0f       	add	r30, r18
    24c4:	f3 1f       	adc	r31, r19
    24c6:	80 81       	ld	r24, Z
    24c8:	0e 94 b2 10 	call	0x2164	; 0x2164 <LCD_WRITE_CHR>
	i++;
    24cc:	89 81       	ldd	r24, Y+1	; 0x01
    24ce:	8f 5f       	subi	r24, 0xFF	; 255
    24d0:	89 83       	std	Y+1, r24	; 0x01
}

void LCD_WRITE_STR(s8*p)
{
	u8 i = 0;
	while(p[i] != '\0')
    24d2:	89 81       	ldd	r24, Y+1	; 0x01
    24d4:	28 2f       	mov	r18, r24
    24d6:	30 e0       	ldi	r19, 0x00	; 0
    24d8:	8a 81       	ldd	r24, Y+2	; 0x02
    24da:	9b 81       	ldd	r25, Y+3	; 0x03
    24dc:	fc 01       	movw	r30, r24
    24de:	e2 0f       	add	r30, r18
    24e0:	f3 1f       	adc	r31, r19
    24e2:	80 81       	ld	r24, Z
    24e4:	88 23       	and	r24, r24
    24e6:	39 f7       	brne	.-50     	; 0x24b6 <LCD_WRITE_STR+0x14>
	{
	LCD_WRITE_CHR(p[i]);
	i++;
	}

}
    24e8:	0f 90       	pop	r0
    24ea:	0f 90       	pop	r0
    24ec:	0f 90       	pop	r0
    24ee:	cf 91       	pop	r28
    24f0:	df 91       	pop	r29
    24f2:	08 95       	ret

000024f4 <LCD_WRITE_INT>:

void LCD_WRITE_INT(u32 num)
{
    24f4:	df 93       	push	r29
    24f6:	cf 93       	push	r28
    24f8:	cd b7       	in	r28, 0x3d	; 61
    24fa:	de b7       	in	r29, 0x3e	; 62
    24fc:	6a 97       	sbiw	r28, 0x1a	; 26
    24fe:	0f b6       	in	r0, 0x3f	; 63
    2500:	f8 94       	cli
    2502:	de bf       	out	0x3e, r29	; 62
    2504:	0f be       	out	0x3f, r0	; 63
    2506:	cd bf       	out	0x3d, r28	; 61
    2508:	6f 8b       	std	Y+23, r22	; 0x17
    250a:	78 8f       	std	Y+24, r23	; 0x18
    250c:	89 8f       	std	Y+25, r24	; 0x19
    250e:	9a 8f       	std	Y+26, r25	; 0x1a

	u32 rem = 0;
    2510:	1a 82       	std	Y+2, r1	; 0x02
    2512:	1b 82       	std	Y+3, r1	; 0x03
    2514:	1c 82       	std	Y+4, r1	; 0x04
    2516:	1d 82       	std	Y+5, r1	; 0x05
	u8 arr [17];
	s8 i = 0;
    2518:	19 82       	std	Y+1, r1	; 0x01
    251a:	35 c0       	rjmp	.+106    	; 0x2586 <LCD_WRITE_INT+0x92>
	while(num != 0)
	{
		rem = num % 10;
    251c:	8f 89       	ldd	r24, Y+23	; 0x17
    251e:	98 8d       	ldd	r25, Y+24	; 0x18
    2520:	a9 8d       	ldd	r26, Y+25	; 0x19
    2522:	ba 8d       	ldd	r27, Y+26	; 0x1a
    2524:	2a e0       	ldi	r18, 0x0A	; 10
    2526:	30 e0       	ldi	r19, 0x00	; 0
    2528:	40 e0       	ldi	r20, 0x00	; 0
    252a:	50 e0       	ldi	r21, 0x00	; 0
    252c:	bc 01       	movw	r22, r24
    252e:	cd 01       	movw	r24, r26
    2530:	0e 94 1b 17 	call	0x2e36	; 0x2e36 <__udivmodsi4>
    2534:	dc 01       	movw	r26, r24
    2536:	cb 01       	movw	r24, r22
    2538:	8a 83       	std	Y+2, r24	; 0x02
    253a:	9b 83       	std	Y+3, r25	; 0x03
    253c:	ac 83       	std	Y+4, r26	; 0x04
    253e:	bd 83       	std	Y+5, r27	; 0x05
		arr[i] = rem + 48;
    2540:	89 81       	ldd	r24, Y+1	; 0x01
    2542:	28 2f       	mov	r18, r24
    2544:	33 27       	eor	r19, r19
    2546:	27 fd       	sbrc	r18, 7
    2548:	30 95       	com	r19
    254a:	8a 81       	ldd	r24, Y+2	; 0x02
    254c:	48 2f       	mov	r20, r24
    254e:	40 5d       	subi	r20, 0xD0	; 208
    2550:	ce 01       	movw	r24, r28
    2552:	06 96       	adiw	r24, 0x06	; 6
    2554:	fc 01       	movw	r30, r24
    2556:	e2 0f       	add	r30, r18
    2558:	f3 1f       	adc	r31, r19
    255a:	40 83       	st	Z, r20
		i++;
    255c:	89 81       	ldd	r24, Y+1	; 0x01
    255e:	8f 5f       	subi	r24, 0xFF	; 255
    2560:	89 83       	std	Y+1, r24	; 0x01
		num = num / 10;
    2562:	8f 89       	ldd	r24, Y+23	; 0x17
    2564:	98 8d       	ldd	r25, Y+24	; 0x18
    2566:	a9 8d       	ldd	r26, Y+25	; 0x19
    2568:	ba 8d       	ldd	r27, Y+26	; 0x1a
    256a:	2a e0       	ldi	r18, 0x0A	; 10
    256c:	30 e0       	ldi	r19, 0x00	; 0
    256e:	40 e0       	ldi	r20, 0x00	; 0
    2570:	50 e0       	ldi	r21, 0x00	; 0
    2572:	bc 01       	movw	r22, r24
    2574:	cd 01       	movw	r24, r26
    2576:	0e 94 1b 17 	call	0x2e36	; 0x2e36 <__udivmodsi4>
    257a:	da 01       	movw	r26, r20
    257c:	c9 01       	movw	r24, r18
    257e:	8f 8b       	std	Y+23, r24	; 0x17
    2580:	98 8f       	std	Y+24, r25	; 0x18
    2582:	a9 8f       	std	Y+25, r26	; 0x19
    2584:	ba 8f       	std	Y+26, r27	; 0x1a
{

	u32 rem = 0;
	u8 arr [17];
	s8 i = 0;
	while(num != 0)
    2586:	8f 89       	ldd	r24, Y+23	; 0x17
    2588:	98 8d       	ldd	r25, Y+24	; 0x18
    258a:	a9 8d       	ldd	r26, Y+25	; 0x19
    258c:	ba 8d       	ldd	r27, Y+26	; 0x1a
    258e:	00 97       	sbiw	r24, 0x00	; 0
    2590:	a1 05       	cpc	r26, r1
    2592:	b1 05       	cpc	r27, r1
    2594:	19 f6       	brne	.-122    	; 0x251c <LCD_WRITE_INT+0x28>
		rem = num % 10;
		arr[i] = rem + 48;
		i++;
		num = num / 10;
	}
	i--;
    2596:	89 81       	ldd	r24, Y+1	; 0x01
    2598:	81 50       	subi	r24, 0x01	; 1
    259a:	89 83       	std	Y+1, r24	; 0x01
    259c:	10 c0       	rjmp	.+32     	; 0x25be <LCD_WRITE_INT+0xca>
	while(i > -1)
	{
	    LCD_WRITE_CHR(arr[i]);
    259e:	89 81       	ldd	r24, Y+1	; 0x01
    25a0:	28 2f       	mov	r18, r24
    25a2:	33 27       	eor	r19, r19
    25a4:	27 fd       	sbrc	r18, 7
    25a6:	30 95       	com	r19
    25a8:	ce 01       	movw	r24, r28
    25aa:	06 96       	adiw	r24, 0x06	; 6
    25ac:	fc 01       	movw	r30, r24
    25ae:	e2 0f       	add	r30, r18
    25b0:	f3 1f       	adc	r31, r19
    25b2:	80 81       	ld	r24, Z
    25b4:	0e 94 b2 10 	call	0x2164	; 0x2164 <LCD_WRITE_CHR>
	    i--;
    25b8:	89 81       	ldd	r24, Y+1	; 0x01
    25ba:	81 50       	subi	r24, 0x01	; 1
    25bc:	89 83       	std	Y+1, r24	; 0x01
		arr[i] = rem + 48;
		i++;
		num = num / 10;
	}
	i--;
	while(i > -1)
    25be:	89 81       	ldd	r24, Y+1	; 0x01
    25c0:	88 23       	and	r24, r24
    25c2:	6c f7       	brge	.-38     	; 0x259e <LCD_WRITE_INT+0xaa>
	{
	    LCD_WRITE_CHR(arr[i]);
	    i--;
	}

}
    25c4:	6a 96       	adiw	r28, 0x1a	; 26
    25c6:	0f b6       	in	r0, 0x3f	; 63
    25c8:	f8 94       	cli
    25ca:	de bf       	out	0x3e, r29	; 62
    25cc:	0f be       	out	0x3f, r0	; 63
    25ce:	cd bf       	out	0x3d, r28	; 61
    25d0:	cf 91       	pop	r28
    25d2:	df 91       	pop	r29
    25d4:	08 95       	ret

000025d6 <LCD_CLEAR>:

void LCD_CLEAR()
{
    25d6:	df 93       	push	r29
    25d8:	cf 93       	push	r28
    25da:	cd b7       	in	r28, 0x3d	; 61
    25dc:	de b7       	in	r29, 0x3e	; 62
	LCD_WRITE_CMD(0x01);
    25de:	81 e0       	ldi	r24, 0x01	; 1
    25e0:	0e 94 13 0f 	call	0x1e26	; 0x1e26 <LCD_WRITE_CMD>
}
    25e4:	cf 91       	pop	r28
    25e6:	df 91       	pop	r29
    25e8:	08 95       	ret

000025ea <KEY_PAD_INIT>:
				 {'c','0','=','+'},
               };


void KEY_PAD_INIT()
{
    25ea:	df 93       	push	r29
    25ec:	cf 93       	push	r28
    25ee:	cd b7       	in	r28, 0x3d	; 61
    25f0:	de b7       	in	r29, 0x3e	; 62
	/*_ALL_ROWS_ARE_OUTPUTS_*/
	DIO_PIN_DIRECTION(KEY_PAD_PORT,KEY_PAD_R0_PIN,OUTPUT);
    25f2:	82 e0       	ldi	r24, 0x02	; 2
    25f4:	60 e0       	ldi	r22, 0x00	; 0
    25f6:	41 e0       	ldi	r20, 0x01	; 1
    25f8:	0e 94 be 05 	call	0xb7c	; 0xb7c <DIO_PIN_DIRECTION>
	DIO_PIN_DIRECTION(KEY_PAD_PORT,KEY_PAD_R1_PIN,OUTPUT);
    25fc:	82 e0       	ldi	r24, 0x02	; 2
    25fe:	61 e0       	ldi	r22, 0x01	; 1
    2600:	41 e0       	ldi	r20, 0x01	; 1
    2602:	0e 94 be 05 	call	0xb7c	; 0xb7c <DIO_PIN_DIRECTION>
	DIO_PIN_DIRECTION(KEY_PAD_PORT,KEY_PAD_R2_PIN,OUTPUT);
    2606:	82 e0       	ldi	r24, 0x02	; 2
    2608:	62 e0       	ldi	r22, 0x02	; 2
    260a:	41 e0       	ldi	r20, 0x01	; 1
    260c:	0e 94 be 05 	call	0xb7c	; 0xb7c <DIO_PIN_DIRECTION>
	DIO_PIN_DIRECTION(KEY_PAD_PORT,KEY_PAD_R3_PIN,OUTPUT);
    2610:	82 e0       	ldi	r24, 0x02	; 2
    2612:	63 e0       	ldi	r22, 0x03	; 3
    2614:	41 e0       	ldi	r20, 0x01	; 1
    2616:	0e 94 be 05 	call	0xb7c	; 0xb7c <DIO_PIN_DIRECTION>
	/*_ALL_OUTPUTS_ARE_HIGH_*/
    DIO_PIN_WRITE(KEY_PAD_PORT,KEY_PAD_R0_PIN,HIGH);
    261a:	82 e0       	ldi	r24, 0x02	; 2
    261c:	60 e0       	ldi	r22, 0x00	; 0
    261e:	41 e0       	ldi	r20, 0x01	; 1
    2620:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    DIO_PIN_WRITE(KEY_PAD_PORT,KEY_PAD_R1_PIN,HIGH);
    2624:	82 e0       	ldi	r24, 0x02	; 2
    2626:	61 e0       	ldi	r22, 0x01	; 1
    2628:	41 e0       	ldi	r20, 0x01	; 1
    262a:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    DIO_PIN_WRITE(KEY_PAD_PORT,KEY_PAD_R2_PIN,HIGH);
    262e:	82 e0       	ldi	r24, 0x02	; 2
    2630:	62 e0       	ldi	r22, 0x02	; 2
    2632:	41 e0       	ldi	r20, 0x01	; 1
    2634:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    DIO_PIN_WRITE(KEY_PAD_PORT,KEY_PAD_R3_PIN,HIGH);
    2638:	82 e0       	ldi	r24, 0x02	; 2
    263a:	63 e0       	ldi	r22, 0x03	; 3
    263c:	41 e0       	ldi	r20, 0x01	; 1
    263e:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
	/*_ALL_COULMNS_ARE_INPUTS_*/
    DIO_PIN_DIRECTION(KEY_PAD_PORT,KEY_PAD_C0_PIN,INPUT);
    2642:	82 e0       	ldi	r24, 0x02	; 2
    2644:	64 e0       	ldi	r22, 0x04	; 4
    2646:	40 e0       	ldi	r20, 0x00	; 0
    2648:	0e 94 be 05 	call	0xb7c	; 0xb7c <DIO_PIN_DIRECTION>
    DIO_PIN_DIRECTION(KEY_PAD_PORT,KEY_PAD_C1_PIN,INPUT);
    264c:	82 e0       	ldi	r24, 0x02	; 2
    264e:	65 e0       	ldi	r22, 0x05	; 5
    2650:	40 e0       	ldi	r20, 0x00	; 0
    2652:	0e 94 be 05 	call	0xb7c	; 0xb7c <DIO_PIN_DIRECTION>
    DIO_PIN_DIRECTION(KEY_PAD_PORT,KEY_PAD_C2_PIN,INPUT);
    2656:	82 e0       	ldi	r24, 0x02	; 2
    2658:	66 e0       	ldi	r22, 0x06	; 6
    265a:	40 e0       	ldi	r20, 0x00	; 0
    265c:	0e 94 be 05 	call	0xb7c	; 0xb7c <DIO_PIN_DIRECTION>
    DIO_PIN_DIRECTION(KEY_PAD_PORT,KEY_PAD_C3_PIN,INPUT);
    2660:	82 e0       	ldi	r24, 0x02	; 2
    2662:	67 e0       	ldi	r22, 0x07	; 7
    2664:	40 e0       	ldi	r20, 0x00	; 0
    2666:	0e 94 be 05 	call	0xb7c	; 0xb7c <DIO_PIN_DIRECTION>
	/*_ENABLE_PULL_UP_RES_FOR_ALL_INPUTS_*/
    DIO_PIN_WRITE(KEY_PAD_PORT,KEY_PAD_C0_PIN,HIGH);
    266a:	82 e0       	ldi	r24, 0x02	; 2
    266c:	64 e0       	ldi	r22, 0x04	; 4
    266e:	41 e0       	ldi	r20, 0x01	; 1
    2670:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    DIO_PIN_WRITE(KEY_PAD_PORT,KEY_PAD_C1_PIN,HIGH);
    2674:	82 e0       	ldi	r24, 0x02	; 2
    2676:	65 e0       	ldi	r22, 0x05	; 5
    2678:	41 e0       	ldi	r20, 0x01	; 1
    267a:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    DIO_PIN_WRITE(KEY_PAD_PORT,KEY_PAD_C2_PIN,HIGH);
    267e:	82 e0       	ldi	r24, 0x02	; 2
    2680:	66 e0       	ldi	r22, 0x06	; 6
    2682:	41 e0       	ldi	r20, 0x01	; 1
    2684:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
    DIO_PIN_WRITE(KEY_PAD_PORT,KEY_PAD_C3_PIN,HIGH);
    2688:	82 e0       	ldi	r24, 0x02	; 2
    268a:	67 e0       	ldi	r22, 0x07	; 7
    268c:	41 e0       	ldi	r20, 0x01	; 1
    268e:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
}
    2692:	cf 91       	pop	r28
    2694:	df 91       	pop	r29
    2696:	08 95       	ret

00002698 <KEY_PAD_READ>:
u8 KEY_PAD_READ()
{
    2698:	df 93       	push	r29
    269a:	cf 93       	push	r28
    269c:	cd b7       	in	r28, 0x3d	; 61
    269e:	de b7       	in	r29, 0x3e	; 62
    26a0:	62 97       	sbiw	r28, 0x12	; 18
    26a2:	0f b6       	in	r0, 0x3f	; 63
    26a4:	f8 94       	cli
    26a6:	de bf       	out	0x3e, r29	; 62
    26a8:	0f be       	out	0x3f, r0	; 63
    26aa:	cd bf       	out	0x3d, r28	; 61
	u8 temp = 1;
    26ac:	81 e0       	ldi	r24, 0x01	; 1
    26ae:	8a 8b       	std	Y+18, r24	; 0x12
	u8 value = 0;
    26b0:	19 8a       	std	Y+17, r1	; 0x11
	u8 r,c;

	for(r=0;r<=3;r++)
    26b2:	18 8a       	std	Y+16, r1	; 0x10
    26b4:	b1 c0       	rjmp	.+354    	; 0x2818 <KEY_PAD_READ+0x180>
	{
	    DIO_PIN_WRITE(KEY_PAD_PORT,r,LOW);
    26b6:	82 e0       	ldi	r24, 0x02	; 2
    26b8:	68 89       	ldd	r22, Y+16	; 0x10
    26ba:	40 e0       	ldi	r20, 0x00	; 0
    26bc:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
	    for(c=0;c<=3;c++)
    26c0:	1f 86       	std	Y+15, r1	; 0x0f
    26c2:	9e c0       	rjmp	.+316    	; 0x2800 <KEY_PAD_READ+0x168>
	    {
	        temp = DIO_PIN_READ(KEY_PAD_PORT,c+4);
    26c4:	8f 85       	ldd	r24, Y+15	; 0x0f
    26c6:	98 2f       	mov	r25, r24
    26c8:	9c 5f       	subi	r25, 0xFC	; 252
    26ca:	82 e0       	ldi	r24, 0x02	; 2
    26cc:	69 2f       	mov	r22, r25
    26ce:	0e 94 cd 08 	call	0x119a	; 0x119a <DIO_PIN_READ>
    26d2:	8a 8b       	std	Y+18, r24	; 0x12
	        if(temp == 0)
    26d4:	8a 89       	ldd	r24, Y+18	; 0x12
    26d6:	88 23       	and	r24, r24
    26d8:	09 f0       	breq	.+2      	; 0x26dc <KEY_PAD_READ+0x44>
    26da:	8f c0       	rjmp	.+286    	; 0x27fa <KEY_PAD_READ+0x162>
    26dc:	80 e0       	ldi	r24, 0x00	; 0
    26de:	90 e0       	ldi	r25, 0x00	; 0
    26e0:	a8 ec       	ldi	r26, 0xC8	; 200
    26e2:	b2 e4       	ldi	r27, 0x42	; 66
    26e4:	8b 87       	std	Y+11, r24	; 0x0b
    26e6:	9c 87       	std	Y+12, r25	; 0x0c
    26e8:	ad 87       	std	Y+13, r26	; 0x0d
    26ea:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    26ec:	6b 85       	ldd	r22, Y+11	; 0x0b
    26ee:	7c 85       	ldd	r23, Y+12	; 0x0c
    26f0:	8d 85       	ldd	r24, Y+13	; 0x0d
    26f2:	9e 85       	ldd	r25, Y+14	; 0x0e
    26f4:	20 e0       	ldi	r18, 0x00	; 0
    26f6:	30 e0       	ldi	r19, 0x00	; 0
    26f8:	4a ef       	ldi	r20, 0xFA	; 250
    26fa:	54 e4       	ldi	r21, 0x44	; 68
    26fc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2700:	dc 01       	movw	r26, r24
    2702:	cb 01       	movw	r24, r22
    2704:	8f 83       	std	Y+7, r24	; 0x07
    2706:	98 87       	std	Y+8, r25	; 0x08
    2708:	a9 87       	std	Y+9, r26	; 0x09
    270a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    270c:	6f 81       	ldd	r22, Y+7	; 0x07
    270e:	78 85       	ldd	r23, Y+8	; 0x08
    2710:	89 85       	ldd	r24, Y+9	; 0x09
    2712:	9a 85       	ldd	r25, Y+10	; 0x0a
    2714:	20 e0       	ldi	r18, 0x00	; 0
    2716:	30 e0       	ldi	r19, 0x00	; 0
    2718:	40 e8       	ldi	r20, 0x80	; 128
    271a:	5f e3       	ldi	r21, 0x3F	; 63
    271c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2720:	88 23       	and	r24, r24
    2722:	2c f4       	brge	.+10     	; 0x272e <KEY_PAD_READ+0x96>
		__ticks = 1;
    2724:	81 e0       	ldi	r24, 0x01	; 1
    2726:	90 e0       	ldi	r25, 0x00	; 0
    2728:	9e 83       	std	Y+6, r25	; 0x06
    272a:	8d 83       	std	Y+5, r24	; 0x05
    272c:	3f c0       	rjmp	.+126    	; 0x27ac <KEY_PAD_READ+0x114>
	else if (__tmp > 65535)
    272e:	6f 81       	ldd	r22, Y+7	; 0x07
    2730:	78 85       	ldd	r23, Y+8	; 0x08
    2732:	89 85       	ldd	r24, Y+9	; 0x09
    2734:	9a 85       	ldd	r25, Y+10	; 0x0a
    2736:	20 e0       	ldi	r18, 0x00	; 0
    2738:	3f ef       	ldi	r19, 0xFF	; 255
    273a:	4f e7       	ldi	r20, 0x7F	; 127
    273c:	57 e4       	ldi	r21, 0x47	; 71
    273e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2742:	18 16       	cp	r1, r24
    2744:	4c f5       	brge	.+82     	; 0x2798 <KEY_PAD_READ+0x100>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2746:	6b 85       	ldd	r22, Y+11	; 0x0b
    2748:	7c 85       	ldd	r23, Y+12	; 0x0c
    274a:	8d 85       	ldd	r24, Y+13	; 0x0d
    274c:	9e 85       	ldd	r25, Y+14	; 0x0e
    274e:	20 e0       	ldi	r18, 0x00	; 0
    2750:	30 e0       	ldi	r19, 0x00	; 0
    2752:	40 e2       	ldi	r20, 0x20	; 32
    2754:	51 e4       	ldi	r21, 0x41	; 65
    2756:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    275a:	dc 01       	movw	r26, r24
    275c:	cb 01       	movw	r24, r22
    275e:	bc 01       	movw	r22, r24
    2760:	cd 01       	movw	r24, r26
    2762:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2766:	dc 01       	movw	r26, r24
    2768:	cb 01       	movw	r24, r22
    276a:	9e 83       	std	Y+6, r25	; 0x06
    276c:	8d 83       	std	Y+5, r24	; 0x05
    276e:	0f c0       	rjmp	.+30     	; 0x278e <KEY_PAD_READ+0xf6>
    2770:	88 ec       	ldi	r24, 0xC8	; 200
    2772:	90 e0       	ldi	r25, 0x00	; 0
    2774:	9c 83       	std	Y+4, r25	; 0x04
    2776:	8b 83       	std	Y+3, r24	; 0x03
    2778:	8b 81       	ldd	r24, Y+3	; 0x03
    277a:	9c 81       	ldd	r25, Y+4	; 0x04
    277c:	01 97       	sbiw	r24, 0x01	; 1
    277e:	f1 f7       	brne	.-4      	; 0x277c <KEY_PAD_READ+0xe4>
    2780:	9c 83       	std	Y+4, r25	; 0x04
    2782:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2784:	8d 81       	ldd	r24, Y+5	; 0x05
    2786:	9e 81       	ldd	r25, Y+6	; 0x06
    2788:	01 97       	sbiw	r24, 0x01	; 1
    278a:	9e 83       	std	Y+6, r25	; 0x06
    278c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    278e:	8d 81       	ldd	r24, Y+5	; 0x05
    2790:	9e 81       	ldd	r25, Y+6	; 0x06
    2792:	00 97       	sbiw	r24, 0x00	; 0
    2794:	69 f7       	brne	.-38     	; 0x2770 <KEY_PAD_READ+0xd8>
    2796:	14 c0       	rjmp	.+40     	; 0x27c0 <KEY_PAD_READ+0x128>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2798:	6f 81       	ldd	r22, Y+7	; 0x07
    279a:	78 85       	ldd	r23, Y+8	; 0x08
    279c:	89 85       	ldd	r24, Y+9	; 0x09
    279e:	9a 85       	ldd	r25, Y+10	; 0x0a
    27a0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27a4:	dc 01       	movw	r26, r24
    27a6:	cb 01       	movw	r24, r22
    27a8:	9e 83       	std	Y+6, r25	; 0x06
    27aa:	8d 83       	std	Y+5, r24	; 0x05
    27ac:	8d 81       	ldd	r24, Y+5	; 0x05
    27ae:	9e 81       	ldd	r25, Y+6	; 0x06
    27b0:	9a 83       	std	Y+2, r25	; 0x02
    27b2:	89 83       	std	Y+1, r24	; 0x01
    27b4:	89 81       	ldd	r24, Y+1	; 0x01
    27b6:	9a 81       	ldd	r25, Y+2	; 0x02
    27b8:	01 97       	sbiw	r24, 0x01	; 1
    27ba:	f1 f7       	brne	.-4      	; 0x27b8 <KEY_PAD_READ+0x120>
    27bc:	9a 83       	std	Y+2, r25	; 0x02
    27be:	89 83       	std	Y+1, r24	; 0x01
	        {
	        	_delay_ms(100);
	        	temp = DIO_PIN_READ(KEY_PAD_PORT,c+4);
    27c0:	8f 85       	ldd	r24, Y+15	; 0x0f
    27c2:	98 2f       	mov	r25, r24
    27c4:	9c 5f       	subi	r25, 0xFC	; 252
    27c6:	82 e0       	ldi	r24, 0x02	; 2
    27c8:	69 2f       	mov	r22, r25
    27ca:	0e 94 cd 08 	call	0x119a	; 0x119a <DIO_PIN_READ>
    27ce:	8a 8b       	std	Y+18, r24	; 0x12
	        	 if(temp == 0)
    27d0:	8a 89       	ldd	r24, Y+18	; 0x12
    27d2:	88 23       	and	r24, r24
    27d4:	91 f4       	brne	.+36     	; 0x27fa <KEY_PAD_READ+0x162>
	        	 {
	        	value = arr[r][c];
    27d6:	88 89       	ldd	r24, Y+16	; 0x10
    27d8:	48 2f       	mov	r20, r24
    27da:	50 e0       	ldi	r21, 0x00	; 0
    27dc:	8f 85       	ldd	r24, Y+15	; 0x0f
    27de:	28 2f       	mov	r18, r24
    27e0:	30 e0       	ldi	r19, 0x00	; 0
    27e2:	ca 01       	movw	r24, r20
    27e4:	88 0f       	add	r24, r24
    27e6:	99 1f       	adc	r25, r25
    27e8:	88 0f       	add	r24, r24
    27ea:	99 1f       	adc	r25, r25
    27ec:	82 0f       	add	r24, r18
    27ee:	93 1f       	adc	r25, r19
    27f0:	fc 01       	movw	r30, r24
    27f2:	e8 59       	subi	r30, 0x98	; 152
    27f4:	ff 4f       	sbci	r31, 0xFF	; 255
    27f6:	80 81       	ld	r24, Z
    27f8:	89 8b       	std	Y+17, r24	; 0x11
	u8 r,c;

	for(r=0;r<=3;r++)
	{
	    DIO_PIN_WRITE(KEY_PAD_PORT,r,LOW);
	    for(c=0;c<=3;c++)
    27fa:	8f 85       	ldd	r24, Y+15	; 0x0f
    27fc:	8f 5f       	subi	r24, 0xFF	; 255
    27fe:	8f 87       	std	Y+15, r24	; 0x0f
    2800:	8f 85       	ldd	r24, Y+15	; 0x0f
    2802:	84 30       	cpi	r24, 0x04	; 4
    2804:	08 f4       	brcc	.+2      	; 0x2808 <KEY_PAD_READ+0x170>
    2806:	5e cf       	rjmp	.-324    	; 0x26c4 <KEY_PAD_READ+0x2c>
	        	value = arr[r][c];
	        	 }
	        }

	    }
	    DIO_PIN_WRITE(KEY_PAD_PORT,r,HIGH);
    2808:	82 e0       	ldi	r24, 0x02	; 2
    280a:	68 89       	ldd	r22, Y+16	; 0x10
    280c:	41 e0       	ldi	r20, 0x01	; 1
    280e:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_PIN_WRITE>
{
	u8 temp = 1;
	u8 value = 0;
	u8 r,c;

	for(r=0;r<=3;r++)
    2812:	88 89       	ldd	r24, Y+16	; 0x10
    2814:	8f 5f       	subi	r24, 0xFF	; 255
    2816:	88 8b       	std	Y+16, r24	; 0x10
    2818:	88 89       	ldd	r24, Y+16	; 0x10
    281a:	84 30       	cpi	r24, 0x04	; 4
    281c:	08 f4       	brcc	.+2      	; 0x2820 <KEY_PAD_READ+0x188>
    281e:	4b cf       	rjmp	.-362    	; 0x26b6 <KEY_PAD_READ+0x1e>
	        }

	    }
	    DIO_PIN_WRITE(KEY_PAD_PORT,r,HIGH);
	}
	return value;
    2820:	89 89       	ldd	r24, Y+17	; 0x11
}
    2822:	62 96       	adiw	r28, 0x12	; 18
    2824:	0f b6       	in	r0, 0x3f	; 63
    2826:	f8 94       	cli
    2828:	de bf       	out	0x3e, r29	; 62
    282a:	0f be       	out	0x3f, r0	; 63
    282c:	cd bf       	out	0x3d, r28	; 61
    282e:	cf 91       	pop	r28
    2830:	df 91       	pop	r29
    2832:	08 95       	ret

00002834 <main>:
#define F_CPU 8000000UL
#include <util/delay.h>
#include "INT.h"
u32 char_to_int(u8  );
int main(void)
{
    2834:	ef 92       	push	r14
    2836:	ff 92       	push	r15
    2838:	0f 93       	push	r16
    283a:	1f 93       	push	r17
    283c:	df 93       	push	r29
    283e:	cf 93       	push	r28
    2840:	cd b7       	in	r28, 0x3d	; 61
    2842:	de b7       	in	r29, 0x3e	; 62
    2844:	c3 5b       	subi	r28, 0xB3	; 179
    2846:	d0 40       	sbci	r29, 0x00	; 0
    2848:	0f b6       	in	r0, 0x3f	; 63
    284a:	f8 94       	cli
    284c:	de bf       	out	0x3e, r29	; 62
    284e:	0f be       	out	0x3f, r0	; 63
    2850:	cd bf       	out	0x3d, r28	; 61
	KEY_PAD_INIT();
    2852:	0e 94 f5 12 	call	0x25ea	; 0x25ea <KEY_PAD_INIT>
	LCD_INIT();
    2856:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <LCD_INIT>
	LED_INIT();
    285a:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <LED_INIT>
	u8 i = 0 ;
    285e:	1a a6       	std	Y+42, r1	; 0x2a
	u8 x = 0 ;
    2860:	19 a6       	std	Y+41, r1	; 0x29
	u8 arr[60];
	u32 numbers [15];
	u8 operator[15];
	u8 num_arr_count =0 ;
    2862:	18 a6       	std	Y+40, r1	; 0x28
	u8 op_count=0 ;
    2864:	1f a2       	std	Y+39, r1	; 0x27
	while(1)
	{	x = KEY_PAD_READ();
    2866:	0e 94 4c 13 	call	0x2698	; 0x2698 <KEY_PAD_READ>
    286a:	89 a7       	std	Y+41, r24	; 0x29
		if( x != 0)
    286c:	89 a5       	ldd	r24, Y+41	; 0x29
    286e:	88 23       	and	r24, r24
    2870:	d1 f3       	breq	.-12     	; 0x2866 <main+0x32>
		{	LCD_WRITE_CHR(x);
    2872:	89 a5       	ldd	r24, Y+41	; 0x29
    2874:	0e 94 b2 10 	call	0x2164	; 0x2164 <LCD_WRITE_CHR>
			arr[i] = x ;
    2878:	8a a5       	ldd	r24, Y+42	; 0x2a
    287a:	28 2f       	mov	r18, r24
    287c:	30 e0       	ldi	r19, 0x00	; 0
    287e:	ce 01       	movw	r24, r28
    2880:	8b 96       	adiw	r24, 0x2b	; 43
    2882:	fc 01       	movw	r30, r24
    2884:	e2 0f       	add	r30, r18
    2886:	f3 1f       	adc	r31, r19
    2888:	89 a5       	ldd	r24, Y+41	; 0x29
    288a:	80 83       	st	Z, r24
			i++ ;
    288c:	8a a5       	ldd	r24, Y+42	; 0x2a
    288e:	8f 5f       	subi	r24, 0xFF	; 255
    2890:	8a a7       	std	Y+42, r24	; 0x2a
			if ( x == '=' ){
    2892:	89 a5       	ldd	r24, Y+41	; 0x29
    2894:	8d 33       	cpi	r24, 0x3D	; 61
    2896:	39 f7       	brne	.-50     	; 0x2866 <main+0x32>
				u8 check = -1 ;
    2898:	8f ef       	ldi	r24, 0xFF	; 255
    289a:	8e a3       	std	Y+38, r24	; 0x26
				u8 j  ;
				for (j = 0 ; j < i ; j++ ){
    289c:	1d a2       	std	Y+37, r1	; 0x25
    289e:	cc c0       	rjmp	.+408    	; 0x2a38 <main+0x204>
					LED_TOG_BLUE();
    28a0:	0e 94 45 0e 	call	0x1c8a	; 0x1c8a <LED_TOG_BLUE>
					if (arr[j] == '+' || arr[j] == '-' || arr[j] == '*' || arr[j] == '/' || arr[j] =='=' ){
    28a4:	8d a1       	ldd	r24, Y+37	; 0x25
    28a6:	28 2f       	mov	r18, r24
    28a8:	30 e0       	ldi	r19, 0x00	; 0
    28aa:	ce 01       	movw	r24, r28
    28ac:	8b 96       	adiw	r24, 0x2b	; 43
    28ae:	fc 01       	movw	r30, r24
    28b0:	e2 0f       	add	r30, r18
    28b2:	f3 1f       	adc	r31, r19
    28b4:	80 81       	ld	r24, Z
    28b6:	8b 32       	cpi	r24, 0x2B	; 43
    28b8:	69 f1       	breq	.+90     	; 0x2914 <main+0xe0>
    28ba:	8d a1       	ldd	r24, Y+37	; 0x25
    28bc:	28 2f       	mov	r18, r24
    28be:	30 e0       	ldi	r19, 0x00	; 0
    28c0:	ce 01       	movw	r24, r28
    28c2:	8b 96       	adiw	r24, 0x2b	; 43
    28c4:	fc 01       	movw	r30, r24
    28c6:	e2 0f       	add	r30, r18
    28c8:	f3 1f       	adc	r31, r19
    28ca:	80 81       	ld	r24, Z
    28cc:	8d 32       	cpi	r24, 0x2D	; 45
    28ce:	11 f1       	breq	.+68     	; 0x2914 <main+0xe0>
    28d0:	8d a1       	ldd	r24, Y+37	; 0x25
    28d2:	28 2f       	mov	r18, r24
    28d4:	30 e0       	ldi	r19, 0x00	; 0
    28d6:	ce 01       	movw	r24, r28
    28d8:	8b 96       	adiw	r24, 0x2b	; 43
    28da:	fc 01       	movw	r30, r24
    28dc:	e2 0f       	add	r30, r18
    28de:	f3 1f       	adc	r31, r19
    28e0:	80 81       	ld	r24, Z
    28e2:	8a 32       	cpi	r24, 0x2A	; 42
    28e4:	b9 f0       	breq	.+46     	; 0x2914 <main+0xe0>
    28e6:	8d a1       	ldd	r24, Y+37	; 0x25
    28e8:	28 2f       	mov	r18, r24
    28ea:	30 e0       	ldi	r19, 0x00	; 0
    28ec:	ce 01       	movw	r24, r28
    28ee:	8b 96       	adiw	r24, 0x2b	; 43
    28f0:	fc 01       	movw	r30, r24
    28f2:	e2 0f       	add	r30, r18
    28f4:	f3 1f       	adc	r31, r19
    28f6:	80 81       	ld	r24, Z
    28f8:	8f 32       	cpi	r24, 0x2F	; 47
    28fa:	61 f0       	breq	.+24     	; 0x2914 <main+0xe0>
    28fc:	8d a1       	ldd	r24, Y+37	; 0x25
    28fe:	28 2f       	mov	r18, r24
    2900:	30 e0       	ldi	r19, 0x00	; 0
    2902:	ce 01       	movw	r24, r28
    2904:	8b 96       	adiw	r24, 0x2b	; 43
    2906:	fc 01       	movw	r30, r24
    2908:	e2 0f       	add	r30, r18
    290a:	f3 1f       	adc	r31, r19
    290c:	80 81       	ld	r24, Z
    290e:	8d 33       	cpi	r24, 0x3D	; 61
    2910:	09 f0       	breq	.+2      	; 0x2914 <main+0xe0>
    2912:	8f c0       	rjmp	.+286    	; 0x2a32 <main+0x1fe>
						u32 c = 0 ;
    2914:	18 a2       	std	Y+32, r1	; 0x20
    2916:	19 a2       	std	Y+33, r1	; 0x21
    2918:	1a a2       	std	Y+34, r1	; 0x22
    291a:	1b a2       	std	Y+35, r1	; 0x23
						u32 mult = 1 ;
    291c:	81 e0       	ldi	r24, 0x01	; 1
    291e:	90 e0       	ldi	r25, 0x00	; 0
    2920:	a0 e0       	ldi	r26, 0x00	; 0
    2922:	b0 e0       	ldi	r27, 0x00	; 0
    2924:	8c 8f       	std	Y+28, r24	; 0x1c
    2926:	9d 8f       	std	Y+29, r25	; 0x1d
    2928:	ae 8f       	std	Y+30, r26	; 0x1e
    292a:	bf 8f       	std	Y+31, r27	; 0x1f
						u8 a = j-1;
    292c:	8d a1       	ldd	r24, Y+37	; 0x25
    292e:	81 50       	subi	r24, 0x01	; 1
    2930:	8b 8f       	std	Y+27, r24	; 0x1b
    2932:	4a c0       	rjmp	.+148    	; 0x29c8 <main+0x194>
						while (a != check){
							LED_TOG();
    2934:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <LED_TOG>
							u32 num = char_to_int(arr[a]);
    2938:	8b 8d       	ldd	r24, Y+27	; 0x1b
    293a:	28 2f       	mov	r18, r24
    293c:	30 e0       	ldi	r19, 0x00	; 0
    293e:	ce 01       	movw	r24, r28
    2940:	8b 96       	adiw	r24, 0x2b	; 43
    2942:	fc 01       	movw	r30, r24
    2944:	e2 0f       	add	r30, r18
    2946:	f3 1f       	adc	r31, r19
    2948:	80 81       	ld	r24, Z
    294a:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <char_to_int>
    294e:	dc 01       	movw	r26, r24
    2950:	cb 01       	movw	r24, r22
    2952:	8f 8b       	std	Y+23, r24	; 0x17
    2954:	98 8f       	std	Y+24, r25	; 0x18
    2956:	a9 8f       	std	Y+25, r26	; 0x19
    2958:	ba 8f       	std	Y+26, r27	; 0x1a
							u32 nom2 = num*mult ;
    295a:	8f 89       	ldd	r24, Y+23	; 0x17
    295c:	98 8d       	ldd	r25, Y+24	; 0x18
    295e:	a9 8d       	ldd	r26, Y+25	; 0x19
    2960:	ba 8d       	ldd	r27, Y+26	; 0x1a
    2962:	2c 8d       	ldd	r18, Y+28	; 0x1c
    2964:	3d 8d       	ldd	r19, Y+29	; 0x1d
    2966:	4e 8d       	ldd	r20, Y+30	; 0x1e
    2968:	5f 8d       	ldd	r21, Y+31	; 0x1f
    296a:	bc 01       	movw	r22, r24
    296c:	cd 01       	movw	r24, r26
    296e:	0e 94 f0 16 	call	0x2de0	; 0x2de0 <__mulsi3>
    2972:	dc 01       	movw	r26, r24
    2974:	cb 01       	movw	r24, r22
    2976:	8b 8b       	std	Y+19, r24	; 0x13
    2978:	9c 8b       	std	Y+20, r25	; 0x14
    297a:	ad 8b       	std	Y+21, r26	; 0x15
    297c:	be 8b       	std	Y+22, r27	; 0x16
							c = c + nom2 ;
    297e:	28 a1       	ldd	r18, Y+32	; 0x20
    2980:	39 a1       	ldd	r19, Y+33	; 0x21
    2982:	4a a1       	ldd	r20, Y+34	; 0x22
    2984:	5b a1       	ldd	r21, Y+35	; 0x23
    2986:	8b 89       	ldd	r24, Y+19	; 0x13
    2988:	9c 89       	ldd	r25, Y+20	; 0x14
    298a:	ad 89       	ldd	r26, Y+21	; 0x15
    298c:	be 89       	ldd	r27, Y+22	; 0x16
    298e:	82 0f       	add	r24, r18
    2990:	93 1f       	adc	r25, r19
    2992:	a4 1f       	adc	r26, r20
    2994:	b5 1f       	adc	r27, r21
    2996:	88 a3       	std	Y+32, r24	; 0x20
    2998:	99 a3       	std	Y+33, r25	; 0x21
    299a:	aa a3       	std	Y+34, r26	; 0x22
    299c:	bb a3       	std	Y+35, r27	; 0x23
							mult = mult * 10 ;
    299e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    29a0:	9d 8d       	ldd	r25, Y+29	; 0x1d
    29a2:	ae 8d       	ldd	r26, Y+30	; 0x1e
    29a4:	bf 8d       	ldd	r27, Y+31	; 0x1f
    29a6:	2a e0       	ldi	r18, 0x0A	; 10
    29a8:	30 e0       	ldi	r19, 0x00	; 0
    29aa:	40 e0       	ldi	r20, 0x00	; 0
    29ac:	50 e0       	ldi	r21, 0x00	; 0
    29ae:	bc 01       	movw	r22, r24
    29b0:	cd 01       	movw	r24, r26
    29b2:	0e 94 f0 16 	call	0x2de0	; 0x2de0 <__mulsi3>
    29b6:	dc 01       	movw	r26, r24
    29b8:	cb 01       	movw	r24, r22
    29ba:	8c 8f       	std	Y+28, r24	; 0x1c
    29bc:	9d 8f       	std	Y+29, r25	; 0x1d
    29be:	ae 8f       	std	Y+30, r26	; 0x1e
    29c0:	bf 8f       	std	Y+31, r27	; 0x1f
							a = a-1;
    29c2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    29c4:	81 50       	subi	r24, 0x01	; 1
    29c6:	8b 8f       	std	Y+27, r24	; 0x1b
					LED_TOG_BLUE();
					if (arr[j] == '+' || arr[j] == '-' || arr[j] == '*' || arr[j] == '/' || arr[j] =='=' ){
						u32 c = 0 ;
						u32 mult = 1 ;
						u8 a = j-1;
						while (a != check){
    29c8:	9b 8d       	ldd	r25, Y+27	; 0x1b
    29ca:	8e a1       	ldd	r24, Y+38	; 0x26
    29cc:	98 17       	cp	r25, r24
    29ce:	09 f0       	breq	.+2      	; 0x29d2 <main+0x19e>
    29d0:	b1 cf       	rjmp	.-158    	; 0x2934 <main+0x100>
							u32 nom2 = num*mult ;
							c = c + nom2 ;
							mult = mult * 10 ;
							a = a-1;
						}
						check = j ;
    29d2:	8d a1       	ldd	r24, Y+37	; 0x25
    29d4:	8e a3       	std	Y+38, r24	; 0x26
						numbers[num_arr_count] = c ;
    29d6:	88 a5       	ldd	r24, Y+40	; 0x28
    29d8:	88 2f       	mov	r24, r24
    29da:	90 e0       	ldi	r25, 0x00	; 0
    29dc:	9e 01       	movw	r18, r28
    29de:	29 59       	subi	r18, 0x99	; 153
    29e0:	3f 4f       	sbci	r19, 0xFF	; 255
    29e2:	88 0f       	add	r24, r24
    29e4:	99 1f       	adc	r25, r25
    29e6:	88 0f       	add	r24, r24
    29e8:	99 1f       	adc	r25, r25
    29ea:	f9 01       	movw	r30, r18
    29ec:	e8 0f       	add	r30, r24
    29ee:	f9 1f       	adc	r31, r25
    29f0:	88 a1       	ldd	r24, Y+32	; 0x20
    29f2:	99 a1       	ldd	r25, Y+33	; 0x21
    29f4:	aa a1       	ldd	r26, Y+34	; 0x22
    29f6:	bb a1       	ldd	r27, Y+35	; 0x23
    29f8:	80 83       	st	Z, r24
    29fa:	91 83       	std	Z+1, r25	; 0x01
    29fc:	a2 83       	std	Z+2, r26	; 0x02
    29fe:	b3 83       	std	Z+3, r27	; 0x03
						num_arr_count =num_arr_count+ 1;
    2a00:	88 a5       	ldd	r24, Y+40	; 0x28
    2a02:	8f 5f       	subi	r24, 0xFF	; 255
    2a04:	88 a7       	std	Y+40, r24	; 0x28
						operator[op_count] = arr[j] ;
    2a06:	8f a1       	ldd	r24, Y+39	; 0x27
    2a08:	48 2f       	mov	r20, r24
    2a0a:	50 e0       	ldi	r21, 0x00	; 0
    2a0c:	8d a1       	ldd	r24, Y+37	; 0x25
    2a0e:	28 2f       	mov	r18, r24
    2a10:	30 e0       	ldi	r19, 0x00	; 0
    2a12:	ce 01       	movw	r24, r28
    2a14:	8b 96       	adiw	r24, 0x2b	; 43
    2a16:	fc 01       	movw	r30, r24
    2a18:	e2 0f       	add	r30, r18
    2a1a:	f3 1f       	adc	r31, r19
    2a1c:	20 81       	ld	r18, Z
    2a1e:	ce 01       	movw	r24, r28
    2a20:	8d 55       	subi	r24, 0x5D	; 93
    2a22:	9f 4f       	sbci	r25, 0xFF	; 255
    2a24:	fc 01       	movw	r30, r24
    2a26:	e4 0f       	add	r30, r20
    2a28:	f5 1f       	adc	r31, r21
    2a2a:	20 83       	st	Z, r18
						op_count = op_count + 1;
    2a2c:	8f a1       	ldd	r24, Y+39	; 0x27
    2a2e:	8f 5f       	subi	r24, 0xFF	; 255
    2a30:	8f a3       	std	Y+39, r24	; 0x27
			arr[i] = x ;
			i++ ;
			if ( x == '=' ){
				u8 check = -1 ;
				u8 j  ;
				for (j = 0 ; j < i ; j++ ){
    2a32:	8d a1       	ldd	r24, Y+37	; 0x25
    2a34:	8f 5f       	subi	r24, 0xFF	; 255
    2a36:	8d a3       	std	Y+37, r24	; 0x25
    2a38:	9d a1       	ldd	r25, Y+37	; 0x25
    2a3a:	8a a5       	ldd	r24, Y+42	; 0x2a
    2a3c:	98 17       	cp	r25, r24
    2a3e:	08 f4       	brcc	.+2      	; 0x2a42 <main+0x20e>
    2a40:	2f cf       	rjmp	.-418    	; 0x28a0 <main+0x6c>
						operator[op_count] = arr[j] ;
						op_count = op_count + 1;
					}
				}
				u8 v ;
				for ( v = 0 ; v < num_arr_count-1 ; v++){
    2a42:	1c a2       	std	Y+36, r1	; 0x24
    2a44:	15 c1       	rjmp	.+554    	; 0x2c70 <main+0x43c>
						LED_TOG_GREEN();
    2a46:	0e 94 50 0e 	call	0x1ca0	; 0x1ca0 <LED_TOG_GREEN>
						u32 res ;
						switch (operator[v]){
    2a4a:	8c a1       	ldd	r24, Y+36	; 0x24
    2a4c:	28 2f       	mov	r18, r24
    2a4e:	30 e0       	ldi	r19, 0x00	; 0
    2a50:	ce 01       	movw	r24, r28
    2a52:	8d 55       	subi	r24, 0x5D	; 93
    2a54:	9f 4f       	sbci	r25, 0xFF	; 255
    2a56:	fc 01       	movw	r30, r24
    2a58:	e2 0f       	add	r30, r18
    2a5a:	f3 1f       	adc	r31, r19
    2a5c:	80 81       	ld	r24, Z
    2a5e:	08 2f       	mov	r16, r24
    2a60:	10 e0       	ldi	r17, 0x00	; 0
    2a62:	ce 54       	subi	r28, 0x4E	; 78
    2a64:	df 4f       	sbci	r29, 0xFF	; 255
    2a66:	19 83       	std	Y+1, r17	; 0x01
    2a68:	08 83       	st	Y, r16
    2a6a:	c2 5b       	subi	r28, 0xB2	; 178
    2a6c:	d0 40       	sbci	r29, 0x00	; 0
    2a6e:	ce 54       	subi	r28, 0x4E	; 78
    2a70:	df 4f       	sbci	r29, 0xFF	; 255
    2a72:	28 81       	ld	r18, Y
    2a74:	39 81       	ldd	r19, Y+1	; 0x01
    2a76:	c2 5b       	subi	r28, 0xB2	; 178
    2a78:	d0 40       	sbci	r29, 0x00	; 0
    2a7a:	2b 32       	cpi	r18, 0x2B	; 43
    2a7c:	31 05       	cpc	r19, r1
    2a7e:	41 f1       	breq	.+80     	; 0x2ad0 <main+0x29c>
    2a80:	ce 54       	subi	r28, 0x4E	; 78
    2a82:	df 4f       	sbci	r29, 0xFF	; 255
    2a84:	88 81       	ld	r24, Y
    2a86:	99 81       	ldd	r25, Y+1	; 0x01
    2a88:	c2 5b       	subi	r28, 0xB2	; 178
    2a8a:	d0 40       	sbci	r29, 0x00	; 0
    2a8c:	8c 32       	cpi	r24, 0x2C	; 44
    2a8e:	91 05       	cpc	r25, r1
    2a90:	5c f4       	brge	.+22     	; 0x2aa8 <main+0x274>
    2a92:	ce 54       	subi	r28, 0x4E	; 78
    2a94:	df 4f       	sbci	r29, 0xFF	; 255
    2a96:	08 81       	ld	r16, Y
    2a98:	19 81       	ldd	r17, Y+1	; 0x01
    2a9a:	c2 5b       	subi	r28, 0xB2	; 178
    2a9c:	d0 40       	sbci	r29, 0x00	; 0
    2a9e:	0a 32       	cpi	r16, 0x2A	; 42
    2aa0:	11 05       	cpc	r17, r1
    2aa2:	09 f4       	brne	.+2      	; 0x2aa6 <main+0x272>
    2aa4:	71 c0       	rjmp	.+226    	; 0x2b88 <main+0x354>
    2aa6:	cb c0       	rjmp	.+406    	; 0x2c3e <main+0x40a>
    2aa8:	ce 54       	subi	r28, 0x4E	; 78
    2aaa:	df 4f       	sbci	r29, 0xFF	; 255
    2aac:	28 81       	ld	r18, Y
    2aae:	39 81       	ldd	r19, Y+1	; 0x01
    2ab0:	c2 5b       	subi	r28, 0xB2	; 178
    2ab2:	d0 40       	sbci	r29, 0x00	; 0
    2ab4:	2d 32       	cpi	r18, 0x2D	; 45
    2ab6:	31 05       	cpc	r19, r1
    2ab8:	b9 f1       	breq	.+110    	; 0x2b28 <main+0x2f4>
    2aba:	ce 54       	subi	r28, 0x4E	; 78
    2abc:	df 4f       	sbci	r29, 0xFF	; 255
    2abe:	88 81       	ld	r24, Y
    2ac0:	99 81       	ldd	r25, Y+1	; 0x01
    2ac2:	c2 5b       	subi	r28, 0xB2	; 178
    2ac4:	d0 40       	sbci	r29, 0x00	; 0
    2ac6:	8f 32       	cpi	r24, 0x2F	; 47
    2ac8:	91 05       	cpc	r25, r1
    2aca:	09 f4       	brne	.+2      	; 0x2ace <main+0x29a>
    2acc:	8b c0       	rjmp	.+278    	; 0x2be4 <main+0x3b0>
    2ace:	b7 c0       	rjmp	.+366    	; 0x2c3e <main+0x40a>
						case '+':
							res = numbers[v] + numbers[v+1] ;
    2ad0:	8c a1       	ldd	r24, Y+36	; 0x24
    2ad2:	88 2f       	mov	r24, r24
    2ad4:	90 e0       	ldi	r25, 0x00	; 0
    2ad6:	9e 01       	movw	r18, r28
    2ad8:	29 59       	subi	r18, 0x99	; 153
    2ada:	3f 4f       	sbci	r19, 0xFF	; 255
    2adc:	88 0f       	add	r24, r24
    2ade:	99 1f       	adc	r25, r25
    2ae0:	88 0f       	add	r24, r24
    2ae2:	99 1f       	adc	r25, r25
    2ae4:	f9 01       	movw	r30, r18
    2ae6:	e8 0f       	add	r30, r24
    2ae8:	f9 1f       	adc	r31, r25
    2aea:	40 81       	ld	r20, Z
    2aec:	51 81       	ldd	r21, Z+1	; 0x01
    2aee:	62 81       	ldd	r22, Z+2	; 0x02
    2af0:	73 81       	ldd	r23, Z+3	; 0x03
    2af2:	8c a1       	ldd	r24, Y+36	; 0x24
    2af4:	88 2f       	mov	r24, r24
    2af6:	90 e0       	ldi	r25, 0x00	; 0
    2af8:	01 96       	adiw	r24, 0x01	; 1
    2afa:	9e 01       	movw	r18, r28
    2afc:	29 59       	subi	r18, 0x99	; 153
    2afe:	3f 4f       	sbci	r19, 0xFF	; 255
    2b00:	88 0f       	add	r24, r24
    2b02:	99 1f       	adc	r25, r25
    2b04:	88 0f       	add	r24, r24
    2b06:	99 1f       	adc	r25, r25
    2b08:	f9 01       	movw	r30, r18
    2b0a:	e8 0f       	add	r30, r24
    2b0c:	f9 1f       	adc	r31, r25
    2b0e:	80 81       	ld	r24, Z
    2b10:	91 81       	ldd	r25, Z+1	; 0x01
    2b12:	a2 81       	ldd	r26, Z+2	; 0x02
    2b14:	b3 81       	ldd	r27, Z+3	; 0x03
    2b16:	84 0f       	add	r24, r20
    2b18:	95 1f       	adc	r25, r21
    2b1a:	a6 1f       	adc	r26, r22
    2b1c:	b7 1f       	adc	r27, r23
    2b1e:	8f 87       	std	Y+15, r24	; 0x0f
    2b20:	98 8b       	std	Y+16, r25	; 0x10
    2b22:	a9 8b       	std	Y+17, r26	; 0x11
    2b24:	ba 8b       	std	Y+18, r27	; 0x12
    2b26:	8b c0       	rjmp	.+278    	; 0x2c3e <main+0x40a>
							break ;
						case '-':
							res = numbers[v] - numbers[v+1] ;
    2b28:	8c a1       	ldd	r24, Y+36	; 0x24
    2b2a:	88 2f       	mov	r24, r24
    2b2c:	90 e0       	ldi	r25, 0x00	; 0
    2b2e:	9e 01       	movw	r18, r28
    2b30:	29 59       	subi	r18, 0x99	; 153
    2b32:	3f 4f       	sbci	r19, 0xFF	; 255
    2b34:	88 0f       	add	r24, r24
    2b36:	99 1f       	adc	r25, r25
    2b38:	88 0f       	add	r24, r24
    2b3a:	99 1f       	adc	r25, r25
    2b3c:	f9 01       	movw	r30, r18
    2b3e:	e8 0f       	add	r30, r24
    2b40:	f9 1f       	adc	r31, r25
    2b42:	40 81       	ld	r20, Z
    2b44:	51 81       	ldd	r21, Z+1	; 0x01
    2b46:	62 81       	ldd	r22, Z+2	; 0x02
    2b48:	73 81       	ldd	r23, Z+3	; 0x03
    2b4a:	8c a1       	ldd	r24, Y+36	; 0x24
    2b4c:	88 2f       	mov	r24, r24
    2b4e:	90 e0       	ldi	r25, 0x00	; 0
    2b50:	01 96       	adiw	r24, 0x01	; 1
    2b52:	9e 01       	movw	r18, r28
    2b54:	29 59       	subi	r18, 0x99	; 153
    2b56:	3f 4f       	sbci	r19, 0xFF	; 255
    2b58:	88 0f       	add	r24, r24
    2b5a:	99 1f       	adc	r25, r25
    2b5c:	88 0f       	add	r24, r24
    2b5e:	99 1f       	adc	r25, r25
    2b60:	f9 01       	movw	r30, r18
    2b62:	e8 0f       	add	r30, r24
    2b64:	f9 1f       	adc	r31, r25
    2b66:	80 81       	ld	r24, Z
    2b68:	91 81       	ldd	r25, Z+1	; 0x01
    2b6a:	a2 81       	ldd	r26, Z+2	; 0x02
    2b6c:	b3 81       	ldd	r27, Z+3	; 0x03
    2b6e:	8a 01       	movw	r16, r20
    2b70:	9b 01       	movw	r18, r22
    2b72:	08 1b       	sub	r16, r24
    2b74:	19 0b       	sbc	r17, r25
    2b76:	2a 0b       	sbc	r18, r26
    2b78:	3b 0b       	sbc	r19, r27
    2b7a:	d9 01       	movw	r26, r18
    2b7c:	c8 01       	movw	r24, r16
    2b7e:	8f 87       	std	Y+15, r24	; 0x0f
    2b80:	98 8b       	std	Y+16, r25	; 0x10
    2b82:	a9 8b       	std	Y+17, r26	; 0x11
    2b84:	ba 8b       	std	Y+18, r27	; 0x12
    2b86:	5b c0       	rjmp	.+182    	; 0x2c3e <main+0x40a>
							break ;
						case '*':
							res = numbers[v] * numbers[v+1] ;
    2b88:	8c a1       	ldd	r24, Y+36	; 0x24
    2b8a:	88 2f       	mov	r24, r24
    2b8c:	90 e0       	ldi	r25, 0x00	; 0
    2b8e:	9e 01       	movw	r18, r28
    2b90:	29 59       	subi	r18, 0x99	; 153
    2b92:	3f 4f       	sbci	r19, 0xFF	; 255
    2b94:	88 0f       	add	r24, r24
    2b96:	99 1f       	adc	r25, r25
    2b98:	88 0f       	add	r24, r24
    2b9a:	99 1f       	adc	r25, r25
    2b9c:	f9 01       	movw	r30, r18
    2b9e:	e8 0f       	add	r30, r24
    2ba0:	f9 1f       	adc	r31, r25
    2ba2:	e0 80       	ld	r14, Z
    2ba4:	f1 80       	ldd	r15, Z+1	; 0x01
    2ba6:	02 81       	ldd	r16, Z+2	; 0x02
    2ba8:	13 81       	ldd	r17, Z+3	; 0x03
    2baa:	8c a1       	ldd	r24, Y+36	; 0x24
    2bac:	88 2f       	mov	r24, r24
    2bae:	90 e0       	ldi	r25, 0x00	; 0
    2bb0:	01 96       	adiw	r24, 0x01	; 1
    2bb2:	9e 01       	movw	r18, r28
    2bb4:	29 59       	subi	r18, 0x99	; 153
    2bb6:	3f 4f       	sbci	r19, 0xFF	; 255
    2bb8:	88 0f       	add	r24, r24
    2bba:	99 1f       	adc	r25, r25
    2bbc:	88 0f       	add	r24, r24
    2bbe:	99 1f       	adc	r25, r25
    2bc0:	f9 01       	movw	r30, r18
    2bc2:	e8 0f       	add	r30, r24
    2bc4:	f9 1f       	adc	r31, r25
    2bc6:	20 81       	ld	r18, Z
    2bc8:	31 81       	ldd	r19, Z+1	; 0x01
    2bca:	42 81       	ldd	r20, Z+2	; 0x02
    2bcc:	53 81       	ldd	r21, Z+3	; 0x03
    2bce:	c8 01       	movw	r24, r16
    2bd0:	b7 01       	movw	r22, r14
    2bd2:	0e 94 f0 16 	call	0x2de0	; 0x2de0 <__mulsi3>
    2bd6:	dc 01       	movw	r26, r24
    2bd8:	cb 01       	movw	r24, r22
    2bda:	8f 87       	std	Y+15, r24	; 0x0f
    2bdc:	98 8b       	std	Y+16, r25	; 0x10
    2bde:	a9 8b       	std	Y+17, r26	; 0x11
    2be0:	ba 8b       	std	Y+18, r27	; 0x12
    2be2:	2d c0       	rjmp	.+90     	; 0x2c3e <main+0x40a>
							break ;
						case '/':
							res = numbers[v] / numbers[v+1] ;
    2be4:	8c a1       	ldd	r24, Y+36	; 0x24
    2be6:	88 2f       	mov	r24, r24
    2be8:	90 e0       	ldi	r25, 0x00	; 0
    2bea:	9e 01       	movw	r18, r28
    2bec:	29 59       	subi	r18, 0x99	; 153
    2bee:	3f 4f       	sbci	r19, 0xFF	; 255
    2bf0:	88 0f       	add	r24, r24
    2bf2:	99 1f       	adc	r25, r25
    2bf4:	88 0f       	add	r24, r24
    2bf6:	99 1f       	adc	r25, r25
    2bf8:	f9 01       	movw	r30, r18
    2bfa:	e8 0f       	add	r30, r24
    2bfc:	f9 1f       	adc	r31, r25
    2bfe:	e0 80       	ld	r14, Z
    2c00:	f1 80       	ldd	r15, Z+1	; 0x01
    2c02:	02 81       	ldd	r16, Z+2	; 0x02
    2c04:	13 81       	ldd	r17, Z+3	; 0x03
    2c06:	8c a1       	ldd	r24, Y+36	; 0x24
    2c08:	88 2f       	mov	r24, r24
    2c0a:	90 e0       	ldi	r25, 0x00	; 0
    2c0c:	01 96       	adiw	r24, 0x01	; 1
    2c0e:	9e 01       	movw	r18, r28
    2c10:	29 59       	subi	r18, 0x99	; 153
    2c12:	3f 4f       	sbci	r19, 0xFF	; 255
    2c14:	88 0f       	add	r24, r24
    2c16:	99 1f       	adc	r25, r25
    2c18:	88 0f       	add	r24, r24
    2c1a:	99 1f       	adc	r25, r25
    2c1c:	f9 01       	movw	r30, r18
    2c1e:	e8 0f       	add	r30, r24
    2c20:	f9 1f       	adc	r31, r25
    2c22:	20 81       	ld	r18, Z
    2c24:	31 81       	ldd	r19, Z+1	; 0x01
    2c26:	42 81       	ldd	r20, Z+2	; 0x02
    2c28:	53 81       	ldd	r21, Z+3	; 0x03
    2c2a:	c8 01       	movw	r24, r16
    2c2c:	b7 01       	movw	r22, r14
    2c2e:	0e 94 1b 17 	call	0x2e36	; 0x2e36 <__udivmodsi4>
    2c32:	da 01       	movw	r26, r20
    2c34:	c9 01       	movw	r24, r18
    2c36:	8f 87       	std	Y+15, r24	; 0x0f
    2c38:	98 8b       	std	Y+16, r25	; 0x10
    2c3a:	a9 8b       	std	Y+17, r26	; 0x11
    2c3c:	ba 8b       	std	Y+18, r27	; 0x12
							break ;
						}
						numbers[v+1] = res ;
    2c3e:	8c a1       	ldd	r24, Y+36	; 0x24
    2c40:	88 2f       	mov	r24, r24
    2c42:	90 e0       	ldi	r25, 0x00	; 0
    2c44:	01 96       	adiw	r24, 0x01	; 1
    2c46:	9e 01       	movw	r18, r28
    2c48:	29 59       	subi	r18, 0x99	; 153
    2c4a:	3f 4f       	sbci	r19, 0xFF	; 255
    2c4c:	88 0f       	add	r24, r24
    2c4e:	99 1f       	adc	r25, r25
    2c50:	88 0f       	add	r24, r24
    2c52:	99 1f       	adc	r25, r25
    2c54:	f9 01       	movw	r30, r18
    2c56:	e8 0f       	add	r30, r24
    2c58:	f9 1f       	adc	r31, r25
    2c5a:	8f 85       	ldd	r24, Y+15	; 0x0f
    2c5c:	98 89       	ldd	r25, Y+16	; 0x10
    2c5e:	a9 89       	ldd	r26, Y+17	; 0x11
    2c60:	ba 89       	ldd	r27, Y+18	; 0x12
    2c62:	80 83       	st	Z, r24
    2c64:	91 83       	std	Z+1, r25	; 0x01
    2c66:	a2 83       	std	Z+2, r26	; 0x02
    2c68:	b3 83       	std	Z+3, r27	; 0x03
						operator[op_count] = arr[j] ;
						op_count = op_count + 1;
					}
				}
				u8 v ;
				for ( v = 0 ; v < num_arr_count-1 ; v++){
    2c6a:	8c a1       	ldd	r24, Y+36	; 0x24
    2c6c:	8f 5f       	subi	r24, 0xFF	; 255
    2c6e:	8c a3       	std	Y+36, r24	; 0x24
    2c70:	8c a1       	ldd	r24, Y+36	; 0x24
    2c72:	28 2f       	mov	r18, r24
    2c74:	30 e0       	ldi	r19, 0x00	; 0
    2c76:	88 a5       	ldd	r24, Y+40	; 0x28
    2c78:	88 2f       	mov	r24, r24
    2c7a:	90 e0       	ldi	r25, 0x00	; 0
    2c7c:	01 97       	sbiw	r24, 0x01	; 1
    2c7e:	28 17       	cp	r18, r24
    2c80:	39 07       	cpc	r19, r25
    2c82:	0c f4       	brge	.+2      	; 0x2c86 <main+0x452>
    2c84:	e0 ce       	rjmp	.-576    	; 0x2a46 <main+0x212>
							res = numbers[v] / numbers[v+1] ;
							break ;
						}
						numbers[v+1] = res ;
				}
				LCD_WRITE_INT(numbers[num_arr_count-1]);
    2c86:	88 a5       	ldd	r24, Y+40	; 0x28
    2c88:	88 2f       	mov	r24, r24
    2c8a:	90 e0       	ldi	r25, 0x00	; 0
    2c8c:	01 97       	sbiw	r24, 0x01	; 1
    2c8e:	9e 01       	movw	r18, r28
    2c90:	29 59       	subi	r18, 0x99	; 153
    2c92:	3f 4f       	sbci	r19, 0xFF	; 255
    2c94:	88 0f       	add	r24, r24
    2c96:	99 1f       	adc	r25, r25
    2c98:	88 0f       	add	r24, r24
    2c9a:	99 1f       	adc	r25, r25
    2c9c:	f9 01       	movw	r30, r18
    2c9e:	e8 0f       	add	r30, r24
    2ca0:	f9 1f       	adc	r31, r25
    2ca2:	80 81       	ld	r24, Z
    2ca4:	91 81       	ldd	r25, Z+1	; 0x01
    2ca6:	a2 81       	ldd	r26, Z+2	; 0x02
    2ca8:	b3 81       	ldd	r27, Z+3	; 0x03
    2caa:	bc 01       	movw	r22, r24
    2cac:	cd 01       	movw	r24, r26
    2cae:	0e 94 7a 12 	call	0x24f4	; 0x24f4 <LCD_WRITE_INT>
    2cb2:	80 e0       	ldi	r24, 0x00	; 0
    2cb4:	90 e0       	ldi	r25, 0x00	; 0
    2cb6:	aa e7       	ldi	r26, 0x7A	; 122
    2cb8:	b4 e4       	ldi	r27, 0x44	; 68
    2cba:	8b 87       	std	Y+11, r24	; 0x0b
    2cbc:	9c 87       	std	Y+12, r25	; 0x0c
    2cbe:	ad 87       	std	Y+13, r26	; 0x0d
    2cc0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2cc2:	6b 85       	ldd	r22, Y+11	; 0x0b
    2cc4:	7c 85       	ldd	r23, Y+12	; 0x0c
    2cc6:	8d 85       	ldd	r24, Y+13	; 0x0d
    2cc8:	9e 85       	ldd	r25, Y+14	; 0x0e
    2cca:	20 e0       	ldi	r18, 0x00	; 0
    2ccc:	30 e0       	ldi	r19, 0x00	; 0
    2cce:	4a ef       	ldi	r20, 0xFA	; 250
    2cd0:	54 e4       	ldi	r21, 0x44	; 68
    2cd2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2cd6:	dc 01       	movw	r26, r24
    2cd8:	cb 01       	movw	r24, r22
    2cda:	8f 83       	std	Y+7, r24	; 0x07
    2cdc:	98 87       	std	Y+8, r25	; 0x08
    2cde:	a9 87       	std	Y+9, r26	; 0x09
    2ce0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2ce2:	6f 81       	ldd	r22, Y+7	; 0x07
    2ce4:	78 85       	ldd	r23, Y+8	; 0x08
    2ce6:	89 85       	ldd	r24, Y+9	; 0x09
    2ce8:	9a 85       	ldd	r25, Y+10	; 0x0a
    2cea:	20 e0       	ldi	r18, 0x00	; 0
    2cec:	30 e0       	ldi	r19, 0x00	; 0
    2cee:	40 e8       	ldi	r20, 0x80	; 128
    2cf0:	5f e3       	ldi	r21, 0x3F	; 63
    2cf2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2cf6:	88 23       	and	r24, r24
    2cf8:	2c f4       	brge	.+10     	; 0x2d04 <main+0x4d0>
		__ticks = 1;
    2cfa:	81 e0       	ldi	r24, 0x01	; 1
    2cfc:	90 e0       	ldi	r25, 0x00	; 0
    2cfe:	9e 83       	std	Y+6, r25	; 0x06
    2d00:	8d 83       	std	Y+5, r24	; 0x05
    2d02:	3f c0       	rjmp	.+126    	; 0x2d82 <main+0x54e>
	else if (__tmp > 65535)
    2d04:	6f 81       	ldd	r22, Y+7	; 0x07
    2d06:	78 85       	ldd	r23, Y+8	; 0x08
    2d08:	89 85       	ldd	r24, Y+9	; 0x09
    2d0a:	9a 85       	ldd	r25, Y+10	; 0x0a
    2d0c:	20 e0       	ldi	r18, 0x00	; 0
    2d0e:	3f ef       	ldi	r19, 0xFF	; 255
    2d10:	4f e7       	ldi	r20, 0x7F	; 127
    2d12:	57 e4       	ldi	r21, 0x47	; 71
    2d14:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2d18:	18 16       	cp	r1, r24
    2d1a:	4c f5       	brge	.+82     	; 0x2d6e <main+0x53a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d1c:	6b 85       	ldd	r22, Y+11	; 0x0b
    2d1e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2d20:	8d 85       	ldd	r24, Y+13	; 0x0d
    2d22:	9e 85       	ldd	r25, Y+14	; 0x0e
    2d24:	20 e0       	ldi	r18, 0x00	; 0
    2d26:	30 e0       	ldi	r19, 0x00	; 0
    2d28:	40 e2       	ldi	r20, 0x20	; 32
    2d2a:	51 e4       	ldi	r21, 0x41	; 65
    2d2c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d30:	dc 01       	movw	r26, r24
    2d32:	cb 01       	movw	r24, r22
    2d34:	bc 01       	movw	r22, r24
    2d36:	cd 01       	movw	r24, r26
    2d38:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d3c:	dc 01       	movw	r26, r24
    2d3e:	cb 01       	movw	r24, r22
    2d40:	9e 83       	std	Y+6, r25	; 0x06
    2d42:	8d 83       	std	Y+5, r24	; 0x05
    2d44:	0f c0       	rjmp	.+30     	; 0x2d64 <main+0x530>
    2d46:	88 ec       	ldi	r24, 0xC8	; 200
    2d48:	90 e0       	ldi	r25, 0x00	; 0
    2d4a:	9c 83       	std	Y+4, r25	; 0x04
    2d4c:	8b 83       	std	Y+3, r24	; 0x03
    2d4e:	8b 81       	ldd	r24, Y+3	; 0x03
    2d50:	9c 81       	ldd	r25, Y+4	; 0x04
    2d52:	01 97       	sbiw	r24, 0x01	; 1
    2d54:	f1 f7       	brne	.-4      	; 0x2d52 <main+0x51e>
    2d56:	9c 83       	std	Y+4, r25	; 0x04
    2d58:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d5a:	8d 81       	ldd	r24, Y+5	; 0x05
    2d5c:	9e 81       	ldd	r25, Y+6	; 0x06
    2d5e:	01 97       	sbiw	r24, 0x01	; 1
    2d60:	9e 83       	std	Y+6, r25	; 0x06
    2d62:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d64:	8d 81       	ldd	r24, Y+5	; 0x05
    2d66:	9e 81       	ldd	r25, Y+6	; 0x06
    2d68:	00 97       	sbiw	r24, 0x00	; 0
    2d6a:	69 f7       	brne	.-38     	; 0x2d46 <main+0x512>
    2d6c:	14 c0       	rjmp	.+40     	; 0x2d96 <main+0x562>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d6e:	6f 81       	ldd	r22, Y+7	; 0x07
    2d70:	78 85       	ldd	r23, Y+8	; 0x08
    2d72:	89 85       	ldd	r24, Y+9	; 0x09
    2d74:	9a 85       	ldd	r25, Y+10	; 0x0a
    2d76:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d7a:	dc 01       	movw	r26, r24
    2d7c:	cb 01       	movw	r24, r22
    2d7e:	9e 83       	std	Y+6, r25	; 0x06
    2d80:	8d 83       	std	Y+5, r24	; 0x05
    2d82:	8d 81       	ldd	r24, Y+5	; 0x05
    2d84:	9e 81       	ldd	r25, Y+6	; 0x06
    2d86:	9a 83       	std	Y+2, r25	; 0x02
    2d88:	89 83       	std	Y+1, r24	; 0x01
    2d8a:	89 81       	ldd	r24, Y+1	; 0x01
    2d8c:	9a 81       	ldd	r25, Y+2	; 0x02
    2d8e:	01 97       	sbiw	r24, 0x01	; 1
    2d90:	f1 f7       	brne	.-4      	; 0x2d8e <main+0x55a>
    2d92:	9a 83       	std	Y+2, r25	; 0x02
    2d94:	89 83       	std	Y+1, r24	; 0x01
				_delay_ms(1000);
				i = 0 ;
    2d96:	1a a6       	std	Y+42, r1	; 0x2a
				num_arr_count = 0;
    2d98:	18 a6       	std	Y+40, r1	; 0x28
    2d9a:	65 cd       	rjmp	.-1334   	; 0x2866 <main+0x32>

00002d9c <char_to_int>:
}
/*
ISR(INT0_vect){
	LED_TOG();
}*/
u32 char_to_int(u8 x ){
    2d9c:	df 93       	push	r29
    2d9e:	cf 93       	push	r28
    2da0:	00 d0       	rcall	.+0      	; 0x2da2 <char_to_int+0x6>
    2da2:	00 d0       	rcall	.+0      	; 0x2da4 <char_to_int+0x8>
    2da4:	0f 92       	push	r0
    2da6:	cd b7       	in	r28, 0x3d	; 61
    2da8:	de b7       	in	r29, 0x3e	; 62
    2daa:	8d 83       	std	Y+5, r24	; 0x05
	u32 y = x - 48 ;
    2dac:	8d 81       	ldd	r24, Y+5	; 0x05
    2dae:	88 2f       	mov	r24, r24
    2db0:	90 e0       	ldi	r25, 0x00	; 0
    2db2:	c0 97       	sbiw	r24, 0x30	; 48
    2db4:	aa 27       	eor	r26, r26
    2db6:	97 fd       	sbrc	r25, 7
    2db8:	a0 95       	com	r26
    2dba:	ba 2f       	mov	r27, r26
    2dbc:	89 83       	std	Y+1, r24	; 0x01
    2dbe:	9a 83       	std	Y+2, r25	; 0x02
    2dc0:	ab 83       	std	Y+3, r26	; 0x03
    2dc2:	bc 83       	std	Y+4, r27	; 0x04
	return y ;
    2dc4:	89 81       	ldd	r24, Y+1	; 0x01
    2dc6:	9a 81       	ldd	r25, Y+2	; 0x02
    2dc8:	ab 81       	ldd	r26, Y+3	; 0x03
    2dca:	bc 81       	ldd	r27, Y+4	; 0x04
}
    2dcc:	bc 01       	movw	r22, r24
    2dce:	cd 01       	movw	r24, r26
    2dd0:	0f 90       	pop	r0
    2dd2:	0f 90       	pop	r0
    2dd4:	0f 90       	pop	r0
    2dd6:	0f 90       	pop	r0
    2dd8:	0f 90       	pop	r0
    2dda:	cf 91       	pop	r28
    2ddc:	df 91       	pop	r29
    2dde:	08 95       	ret

00002de0 <__mulsi3>:
    2de0:	62 9f       	mul	r22, r18
    2de2:	d0 01       	movw	r26, r0
    2de4:	73 9f       	mul	r23, r19
    2de6:	f0 01       	movw	r30, r0
    2de8:	82 9f       	mul	r24, r18
    2dea:	e0 0d       	add	r30, r0
    2dec:	f1 1d       	adc	r31, r1
    2dee:	64 9f       	mul	r22, r20
    2df0:	e0 0d       	add	r30, r0
    2df2:	f1 1d       	adc	r31, r1
    2df4:	92 9f       	mul	r25, r18
    2df6:	f0 0d       	add	r31, r0
    2df8:	83 9f       	mul	r24, r19
    2dfa:	f0 0d       	add	r31, r0
    2dfc:	74 9f       	mul	r23, r20
    2dfe:	f0 0d       	add	r31, r0
    2e00:	65 9f       	mul	r22, r21
    2e02:	f0 0d       	add	r31, r0
    2e04:	99 27       	eor	r25, r25
    2e06:	72 9f       	mul	r23, r18
    2e08:	b0 0d       	add	r27, r0
    2e0a:	e1 1d       	adc	r30, r1
    2e0c:	f9 1f       	adc	r31, r25
    2e0e:	63 9f       	mul	r22, r19
    2e10:	b0 0d       	add	r27, r0
    2e12:	e1 1d       	adc	r30, r1
    2e14:	f9 1f       	adc	r31, r25
    2e16:	bd 01       	movw	r22, r26
    2e18:	cf 01       	movw	r24, r30
    2e1a:	11 24       	eor	r1, r1
    2e1c:	08 95       	ret

00002e1e <__udivmodqi4>:
    2e1e:	99 1b       	sub	r25, r25
    2e20:	79 e0       	ldi	r23, 0x09	; 9
    2e22:	04 c0       	rjmp	.+8      	; 0x2e2c <__udivmodqi4_ep>

00002e24 <__udivmodqi4_loop>:
    2e24:	99 1f       	adc	r25, r25
    2e26:	96 17       	cp	r25, r22
    2e28:	08 f0       	brcs	.+2      	; 0x2e2c <__udivmodqi4_ep>
    2e2a:	96 1b       	sub	r25, r22

00002e2c <__udivmodqi4_ep>:
    2e2c:	88 1f       	adc	r24, r24
    2e2e:	7a 95       	dec	r23
    2e30:	c9 f7       	brne	.-14     	; 0x2e24 <__udivmodqi4_loop>
    2e32:	80 95       	com	r24
    2e34:	08 95       	ret

00002e36 <__udivmodsi4>:
    2e36:	a1 e2       	ldi	r26, 0x21	; 33
    2e38:	1a 2e       	mov	r1, r26
    2e3a:	aa 1b       	sub	r26, r26
    2e3c:	bb 1b       	sub	r27, r27
    2e3e:	fd 01       	movw	r30, r26
    2e40:	0d c0       	rjmp	.+26     	; 0x2e5c <__udivmodsi4_ep>

00002e42 <__udivmodsi4_loop>:
    2e42:	aa 1f       	adc	r26, r26
    2e44:	bb 1f       	adc	r27, r27
    2e46:	ee 1f       	adc	r30, r30
    2e48:	ff 1f       	adc	r31, r31
    2e4a:	a2 17       	cp	r26, r18
    2e4c:	b3 07       	cpc	r27, r19
    2e4e:	e4 07       	cpc	r30, r20
    2e50:	f5 07       	cpc	r31, r21
    2e52:	20 f0       	brcs	.+8      	; 0x2e5c <__udivmodsi4_ep>
    2e54:	a2 1b       	sub	r26, r18
    2e56:	b3 0b       	sbc	r27, r19
    2e58:	e4 0b       	sbc	r30, r20
    2e5a:	f5 0b       	sbc	r31, r21

00002e5c <__udivmodsi4_ep>:
    2e5c:	66 1f       	adc	r22, r22
    2e5e:	77 1f       	adc	r23, r23
    2e60:	88 1f       	adc	r24, r24
    2e62:	99 1f       	adc	r25, r25
    2e64:	1a 94       	dec	r1
    2e66:	69 f7       	brne	.-38     	; 0x2e42 <__udivmodsi4_loop>
    2e68:	60 95       	com	r22
    2e6a:	70 95       	com	r23
    2e6c:	80 95       	com	r24
    2e6e:	90 95       	com	r25
    2e70:	9b 01       	movw	r18, r22
    2e72:	ac 01       	movw	r20, r24
    2e74:	bd 01       	movw	r22, r26
    2e76:	cf 01       	movw	r24, r30
    2e78:	08 95       	ret

00002e7a <__prologue_saves__>:
    2e7a:	2f 92       	push	r2
    2e7c:	3f 92       	push	r3
    2e7e:	4f 92       	push	r4
    2e80:	5f 92       	push	r5
    2e82:	6f 92       	push	r6
    2e84:	7f 92       	push	r7
    2e86:	8f 92       	push	r8
    2e88:	9f 92       	push	r9
    2e8a:	af 92       	push	r10
    2e8c:	bf 92       	push	r11
    2e8e:	cf 92       	push	r12
    2e90:	df 92       	push	r13
    2e92:	ef 92       	push	r14
    2e94:	ff 92       	push	r15
    2e96:	0f 93       	push	r16
    2e98:	1f 93       	push	r17
    2e9a:	cf 93       	push	r28
    2e9c:	df 93       	push	r29
    2e9e:	cd b7       	in	r28, 0x3d	; 61
    2ea0:	de b7       	in	r29, 0x3e	; 62
    2ea2:	ca 1b       	sub	r28, r26
    2ea4:	db 0b       	sbc	r29, r27
    2ea6:	0f b6       	in	r0, 0x3f	; 63
    2ea8:	f8 94       	cli
    2eaa:	de bf       	out	0x3e, r29	; 62
    2eac:	0f be       	out	0x3f, r0	; 63
    2eae:	cd bf       	out	0x3d, r28	; 61
    2eb0:	09 94       	ijmp

00002eb2 <__epilogue_restores__>:
    2eb2:	2a 88       	ldd	r2, Y+18	; 0x12
    2eb4:	39 88       	ldd	r3, Y+17	; 0x11
    2eb6:	48 88       	ldd	r4, Y+16	; 0x10
    2eb8:	5f 84       	ldd	r5, Y+15	; 0x0f
    2eba:	6e 84       	ldd	r6, Y+14	; 0x0e
    2ebc:	7d 84       	ldd	r7, Y+13	; 0x0d
    2ebe:	8c 84       	ldd	r8, Y+12	; 0x0c
    2ec0:	9b 84       	ldd	r9, Y+11	; 0x0b
    2ec2:	aa 84       	ldd	r10, Y+10	; 0x0a
    2ec4:	b9 84       	ldd	r11, Y+9	; 0x09
    2ec6:	c8 84       	ldd	r12, Y+8	; 0x08
    2ec8:	df 80       	ldd	r13, Y+7	; 0x07
    2eca:	ee 80       	ldd	r14, Y+6	; 0x06
    2ecc:	fd 80       	ldd	r15, Y+5	; 0x05
    2ece:	0c 81       	ldd	r16, Y+4	; 0x04
    2ed0:	1b 81       	ldd	r17, Y+3	; 0x03
    2ed2:	aa 81       	ldd	r26, Y+2	; 0x02
    2ed4:	b9 81       	ldd	r27, Y+1	; 0x01
    2ed6:	ce 0f       	add	r28, r30
    2ed8:	d1 1d       	adc	r29, r1
    2eda:	0f b6       	in	r0, 0x3f	; 63
    2edc:	f8 94       	cli
    2ede:	de bf       	out	0x3e, r29	; 62
    2ee0:	0f be       	out	0x3f, r0	; 63
    2ee2:	cd bf       	out	0x3d, r28	; 61
    2ee4:	ed 01       	movw	r28, r26
    2ee6:	08 95       	ret

00002ee8 <_exit>:
    2ee8:	f8 94       	cli

00002eea <__stop_program>:
    2eea:	ff cf       	rjmp	.-2      	; 0x2eea <__stop_program>
